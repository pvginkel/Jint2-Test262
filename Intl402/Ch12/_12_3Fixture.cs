//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Intl402.Ch12
{
    [TestFixture]
    public class _12_3Fixture : Test262Fixture
    {
        public _12_3Fixture()
            : base("intl402\\ch12\\12.3")
        {
        }

        [Test(Description = "Tests that Intl.DateTimeFormat.prototype.constructor is the")]
        public void _12_3_1()
        {
            RunFile("12.3.1.js");
        }

        [Test(Description = "Tests that the function returned by Intl.DateTimeFormat.prototype.format")]
        public void _12_3_2_1_a_L15()
        {
            RunFile("12.3.2_1_a_L15.js");
        }

        [Test(Description = "Tests that format function is bound to its Intl.DateTimeFormat.")]
        public void _12_3_2_1_c()
        {
            RunFile("12.3.2_1_c.js");
        }

        [Test(Description = "Tests that format handles non-finite values correctly.")]
        public void _12_3_2_FDT_1()
        {
            RunFile("12.3.2_FDT_1.js");
        }

        [Test(Description = "Tests that format uses a proleptic Gregorian calendar with no year 0.")]
        public void _12_3_2_FDT_7_a_iv()
        {
            RunFile("12.3.2_FDT_7_a_iv.js");
        }

        [Test(Description = "Tests that the getter for Intl.DateTimeFormat.prototype.format")]
        public void _12_3_2_L15()
        {
            RunFile("12.3.2_L15.js");
        }

        [Test(Description = "Tests that the behavior of a Record is not affected by adversarial")]
        public void _12_3_2_TLT_2()
        {
            RunFile("12.3.2_TLT_2.js");
        }

        [Test(Description = "Tests that the object returned by Intl.DateTimeFormat.prototype.resolvedOptions")]
        public void _12_3_3()
        {
            RunFile("12.3.3.js");
        }

        [Test(Description = "Tests that Intl.DateTimeFormat.prototype.resolvedOptions")]
        public void _12_3_3_L15()
        {
            RunFile("12.3.3_L15.js");
        }

        [Test(Description = "Tests that Intl.DateTimeFormat.prototype is an object that")]
        public void _12_3_a()
        {
            RunFile("12.3_a.js");
        }

        [Test(Description = "Tests that Intl.DateTimeFormat.prototype functions throw a")]
        public void _12_3_b()
        {
            RunFile("12.3_b.js");
        }

        [Test(Description = "Tests that Intl.DateTimeFormat.prototype")]
        public void _12_3_L15()
        {
            RunFile("12.3_L15.js");
        }
    }
}
