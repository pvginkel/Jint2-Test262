//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch12
{
    [TestFixture]
    public class _12_9Fixture : Test262Fixture
    {
        public _12_9Fixture()
            : base("ch12\\12.9")
        {
        }

        [Test(Description = "The return Statement - a return statement without an expression may have a LineTerminator before the semi-colon")]
        public void _12_9_1()
        {
            RunFile("12.9-1.js");
        }

        [Test(Description = "Checking if execution of \"return\" with no function fails")]
        [ExpectedException]
        public void S12_9_A1_T1()
        {
            RunFile("S12.9_A1_T1.js");
        }

        [Test(Description = "Checking if execution of \"return (0)\" with no function fails")]
        [ExpectedException]
        public void S12_9_A1_T10()
        {
            RunFile("S12.9_A1_T10.js");
        }

        [Test(Description = "Checking if execution of \"return x\" with no function fails")]
        [ExpectedException]
        public void S12_9_A1_T2()
        {
            RunFile("S12.9_A1_T2.js");
        }

        [Test(Description = "Checking if execution of \"return\" within \"try\" statement fails")]
        [ExpectedException]
        public void S12_9_A1_T3()
        {
            RunFile("S12.9_A1_T3.js");
        }

        [Test(Description = "Checking if execution of \"return\" with no function fails")]
        [ExpectedException]
        public void S12_9_A1_T4()
        {
            RunFile("S12.9_A1_T4.js");
        }

        [Test(Description = "Checking if execution of \"return\" with no function, placed into a Block, fails")]
        [ExpectedException]
        public void S12_9_A1_T5()
        {
            RunFile("S12.9_A1_T5.js");
        }

        [Test(Description = "Checking if execution of \"return\" with no function, placed into a loop, fails")]
        [ExpectedException]
        public void S12_9_A1_T6()
        {
            RunFile("S12.9_A1_T6.js");
        }

        [Test(Description = "Checking if execution of \"return x\" with no function, placed inside Block, fails")]
        [ExpectedException]
        public void S12_9_A1_T7()
        {
            RunFile("S12.9_A1_T7.js");
        }

        [Test(Description = "Checking if execution of \"return x\" with no function, placed into a loop, fails")]
        [ExpectedException]
        public void S12_9_A1_T8()
        {
            RunFile("S12.9_A1_T8.js");
        }

        [Test(Description = "Checking if execution of \"return\", placed into a catch Block, fails")]
        [ExpectedException]
        public void S12_9_A1_T9()
        {
            RunFile("S12.9_A1_T9.js");
        }

        [Test(Description = "Checking by using eval, inserting LineTerminator between return and Variable")]
        public void S12_9_A2()
        {
            RunFile("S12.9_A2.js");
        }

        [Test(Description = "Return without Expression")]
        public void S12_9_A3()
        {
            RunFile("S12.9_A3.js");
        }

        [Test(Description = "Return very sophisticated expression and function")]
        public void S12_9_A4()
        {
            RunFile("S12.9_A4.js");
        }

        [Test(Description = "Using code after Return statement")]
        public void S12_9_A5()
        {
            RunFile("S12.9_A5.js");
        }
    }
}
