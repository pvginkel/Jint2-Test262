//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch12
{
    [TestFixture]
    public class _12_11Fixture : Test262Fixture
    {
        public _12_11Fixture()
            : base("ch12\\12.11")
        {
        }

        [Test(Description = "Simple test using switch statement")]
        public void S12_11_A1_T1()
        {
            RunFile("S12.11_A1_T1.js");
        }

        [Test(Description = "Switch with different types of variables")]
        public void S12_11_A1_T2()
        {
            RunFile("S12.11_A1_T2.js");
        }

        [Test(Description = "Using case with null, NaN, Infinity")]
        public void S12_11_A1_T3()
        {
            RunFile("S12.11_A1_T3.js");
        }

        [Test(Description = "Using case with isNaN and isNaN(value)")]
        public void S12_11_A1_T4()
        {
            RunFile("S12.11_A1_T4.js");
        }

        [Test(Description = "Duplicate DefaultClause")]
        [ExpectedException]
        public void S12_11_A2_T1()
        {
            RunFile("S12.11_A2_T1.js");
        }

        [Test(Description = "Checking if execution of \"switch() {}\" fails")]
        [ExpectedException]
        public void S12_11_A3_T1()
        {
            RunFile("S12.11_A3_T1.js");
        }

        [Test(Description = "Checking if execution of \"switch {}\" fails")]
        [ExpectedException]
        public void S12_11_A3_T2()
        {
            RunFile("S12.11_A3_T2.js");
        }

        [Test(Description = "Checking if execution of \"switch(value)\" fails")]
        [ExpectedException]
        public void S12_11_A3_T3()
        {
            RunFile("S12.11_A3_T3.js");
        }

        [Test(Description = "Using \"case\" that has no Expresson after it. \"CaseClause: case Expression : [StatementList]\"")]
        [ExpectedException]
        public void S12_11_A3_T4()
        {
            RunFile("S12.11_A3_T4.js");
        }

        [Test(Description = "Introducing statement not followed by \"case\" keyword")]
        [ExpectedException]
        public void S12_11_A3_T5()
        {
            RunFile("S12.11_A3_T5.js");
        }

        [Test(Description = "Nesting one \"switch\" statement into StatementList of the other's")]
        public void S12_11_A4_T1()
        {
            RunFile("S12.11_A4_T1.js");
        }
    }
}
