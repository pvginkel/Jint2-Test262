//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch12
{
    [TestFixture]
    public class _12_5Fixture : Test262Fixture
    {
        public _12_5Fixture()
            : base("ch12\\12.5")
        {
        }

        [Test(Description = "Using \"if\" without \"else\" construction")]
        public void S12_5_A1_1_T1()
        {
            RunFile("S12.5_A1.1_T1.js");
        }

        [Test(Description = "Using \"if/else\" construction")]
        public void S12_5_A1_1_T2()
        {
            RunFile("S12.5_A1.1_T2.js");
        }

        [Test(Description = "Using \"if\" without \"else\" construction")]
        public void S12_5_A1_2_T1()
        {
            RunFile("S12.5_A1.2_T1.js");
        }

        [Test(Description = "Using \"if/else\" construction")]
        public void S12_5_A1_2_T2()
        {
            RunFile("S12.5_A1.2_T2.js");
        }

        [Test(Description = "Using function expession(function __func(){return 0;}) inside the \"if\" expression")]
        public void S12_5_A10_T1()
        {
            RunFile("S12.5_A10_T1.js");
        }

        [Test(Description = "Using function expession \"function __func(){return 0;}()\" within \"if\" expression")]
        public void S12_5_A10_T2()
        {
            RunFile("S12.5_A10_T2.js");
        }

        [Test(Description = "Checking if execution of \"if({1})\" fails")]
        [ExpectedException]
        public void S12_5_A11()
        {
            RunFile("S12.5_A11.js");
        }

        [Test(Description = "Using embedded \"if/else\" into \"if/else\" constructions")]
        public void S12_5_A12_T1()
        {
            RunFile("S12.5_A12_T1.js");
        }

        [Test(Description = "Using embedded \"if\" into \"if/else\" constructions")]
        public void S12_5_A12_T2()
        {
            RunFile("S12.5_A12_T2.js");
        }

        [Test(Description = "Using embedded \"if/else\" into \"if\" without \"else\" constructions")]
        public void S12_5_A12_T3()
        {
            RunFile("S12.5_A12_T3.js");
        }

        [Test(Description = "Using embedded \"if\" into \"if\" constructions")]
        public void S12_5_A12_T4()
        {
            RunFile("S12.5_A12_T4.js");
        }

        [Test(Description = "Using \"if\" without \"else\" construction")]
        public void S12_5_A1_T1()
        {
            RunFile("S12.5_A1_T1.js");
        }

        [Test(Description = "Using \"if/else\" construction")]
        public void S12_5_A1_T2()
        {
            RunFile("S12.5_A1_T2.js");
        }

        [Test(Description = "Checking by using eval \"eval(\"true\")\"")]
        [ExpectedException]
        public void S12_5_A2()
        {
            RunFile("S12.5_A2.js");
        }

        [Test(Description = "The Expression is \"(function(){throw 1})()\"")]
        public void S12_5_A3()
        {
            RunFile("S12.5_A3.js");
        }

        [Test(Description = "The first statement is \"(function(){throw \"instatement\"})()\"")]
        public void S12_5_A4()
        {
            RunFile("S12.5_A4.js");
        }

        [Test(Description = "The \"if\" Expression is \"function __func(){throw \"FunctionExpression\";}\"")]
        public void S12_5_A5()
        {
            RunFile("S12.5_A5.js");
        }

        [Test(Description = "Checking if execution of \"if true\" fails")]
        [ExpectedException]
        public void S12_5_A6_T1()
        {
            RunFile("S12.5_A6_T1.js");
        }

        [Test(Description = "Checking if execution of \"if false\" fails")]
        [ExpectedException]
        public void S12_5_A6_T2()
        {
            RunFile("S12.5_A6_T2.js");
        }

        [Test(Description = "Checking by using eval \"eval(\"if(1);\"))\"")]
        public void S12_5_A7()
        {
            RunFile("S12.5_A7.js");
        }

        [Test(Description = "Checking if execution of \"if()\" fails")]
        [ExpectedException]
        public void S12_5_A8()
        {
            RunFile("S12.5_A8.js");
        }
    }
}
