//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch12
{
    [TestFixture]
    public class _12_2Fixture : Test262Fixture
    {
        public _12_2Fixture()
            : base("ch12\\12.2")
        {
        }

        [Test(Description = "Creating variables after entering the execution scope")]
        public void S12_2_A1()
        {
            RunFile("S12.2_A1.js");
        }

        [Test(Description = "Declaring variable within a \"for\" IterationStatement")]
        public void S12_2_A10()
        {
            RunFile("S12.2_A10.js");
        }

        [Test(Description = "Changing variable value using property attributes")]
        public void S12_2_A11()
        {
            RunFile("S12.2_A11.js");
        }

        [Test(Description = "Declaring variable within \"do-while\" statement")]
        public void S12_2_A12()
        {
            RunFile("S12.2_A12.js");
        }

        [Test(Description = "Checking if deleting global variables that have the attributes {DontDelete} fails")]
        public void S12_2_A2()
        {
            RunFile("S12.2_A2.js");
        }

        [Test(Description = "Using Global scope and Function scope together")]
        public void S12_2_A3()
        {
            RunFile("S12.2_A3.js");
        }

        [Test(Description = "Create and use unicode characters in variable Identifier")]
        public void S12_2_A4()
        {
            RunFile("S12.2_A4.js");
        }

        [Test(Description = "Executing eval(\"var x\")")]
        public void S12_2_A5()
        {
            RunFile("S12.2_A5.js");
        }

        [Test(Description = "Declaring variable within \"try-catch\" statement")]
        public void S12_2_A6_T1()
        {
            RunFile("S12.2_A6_T1.js");
        }

        [Test(Description = "Declaring variables within \"try-catch\" statement")]
        public void S12_2_A6_T2()
        {
            RunFile("S12.2_A6_T2.js");
        }

        [Test(Description = "Declaring variable within \"for\" statement")]
        public void S12_2_A7()
        {
            RunFile("S12.2_A7.js");
        }

        [Test(Description = "Checking if execution of \"var x += 1\" fails")]
        [ExpectedException]
        public void S12_2_A8_T1()
        {
            RunFile("S12.2_A8_T1.js");
        }

        [Test(Description = "Checking if execution of \"var x | true\" fails")]
        [ExpectedException]
        public void S12_2_A8_T2()
        {
            RunFile("S12.2_A8_T2.js");
        }

        [Test(Description = "Checking if execution of \"var x && 1\" fails")]
        [ExpectedException]
        public void S12_2_A8_T3()
        {
            RunFile("S12.2_A8_T3.js");
        }

        [Test(Description = "Checking if execution of \"var x++\" fails")]
        [ExpectedException]
        public void S12_2_A8_T4()
        {
            RunFile("S12.2_A8_T4.js");
        }

        [Test(Description = "Checking if execution of \"var --x\" fails")]
        [ExpectedException]
        public void S12_2_A8_T5()
        {
            RunFile("S12.2_A8_T5.js");
        }

        [Test(Description = "Checking if execution of \"var x*1\" fails")]
        [ExpectedException]
        public void S12_2_A8_T6()
        {
            RunFile("S12.2_A8_T6.js");
        }

        [Test(Description = "Checking if execution of \"var x>>1\" fails")]
        [ExpectedException]
        public void S12_2_A8_T7()
        {
            RunFile("S12.2_A8_T7.js");
        }

        [Test(Description = "Checking if execution of \"var x in __arr\" fails")]
        [ExpectedException]
        public void S12_2_A8_T8()
        {
            RunFile("S12.2_A8_T8.js");
        }

        [Test(Description = "Enumerating property attributes of \"this\" and then searching for the declared variable")]
        public void S12_2_A9()
        {
            RunFile("S12.2_A9.js");
        }
    }
}
