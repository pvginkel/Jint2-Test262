//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch12._12_6
{
    [TestFixture]
    public class _12_6_1Fixture : Test262Fixture
    {
        public _12_6_1Fixture()
            : base("ch12\\12.6\\12.6.1")
        {
        }

        [Test(Description = "Evaluating various Expressions")]
        public void S12_6_1_A1()
        {
            RunFile("S12.6.1_A1.js");
        }

        [Test(Description = "Also this a test on FunctionExpression")]
        public void S12_6_1_A10()
        {
            RunFile("S12.6.1_A10.js");
        }

        [Test(Description = "Checking if execution of \"do {} while({})\" passes")]
        public void S12_6_1_A11()
        {
            RunFile("S12.6.1_A11.js");
        }

        [Test(Description = "Checking if execution of \"do var x=1; var y =2; while (0)\" fails")]
        [ExpectedException]
        public void S12_6_1_A12()
        {
            RunFile("S12.6.1_A12.js");
        }

        [Test(Description = "Using FunctionExpression \"function __func(){return 0;}\" as an Expression")]
        public void S12_6_1_A14_T1()
        {
            RunFile("S12.6.1_A14_T1.js");
        }

        [Test(Description = "Using FunctionExpression \"function __func(){return 0;}()\" as an Expression")]
        public void S12_6_1_A14_T2()
        {
            RunFile("S12.6.1_A14_T2.js");
        }

        [Test(Description = "Using \"{0}\" Block as an Expression")]
        [ExpectedException]
        public void S12_6_1_A15()
        {
            RunFile("S12.6.1_A15.js");
        }

        [Test(Description = "Evaluating Statement with error Expression")]
        public void S12_6_1_A2()
        {
            RunFile("S12.6.1_A2.js");
        }

        [Test(Description = "Using eval \"eval(\"do __in__do=1; while (false)\")\"")]
        public void S12_6_1_A3()
        {
            RunFile("S12.6.1_A3.js");
        }

        [Test(Description = "Using \"break\" within a \"do-while\" loop")]
        public void S12_6_1_A4_T1()
        {
            RunFile("S12.6.1_A4_T1.js");
        }

        [Test(Description = "\"break\" and VariableDeclaration within a \"do-while\" statement")]
        public void S12_6_1_A4_T2()
        {
            RunFile("S12.6.1_A4_T2.js");
        }

        [Test(Description = "\"break\" and VariableDeclaration within a \"do-while\" statement")]
        public void S12_6_1_A4_T3()
        {
            RunFile("S12.6.1_A4_T3.js");
        }

        [Test(Description = "\"break\" and VariableDeclaration within a \"do-while\" statement")]
        public void S12_6_1_A4_T4()
        {
            RunFile("S12.6.1_A4_T4.js");
        }

        [Test(Description = "Using labeled \"break\" in order to continue a loop")]
        public void S12_6_1_A4_T5()
        {
            RunFile("S12.6.1_A4_T5.js");
        }

        [Test(Description = "Using eval")]
        public void S12_6_1_A5()
        {
            RunFile("S12.6.1_A5.js");
        }

        [Test(Description = "Checking if execution of \"do{} while 1\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T1()
        {
            RunFile("S12.6.1_A6_T1.js");
        }

        [Test(Description = "Checking if execution of \"do{} while 0\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T2()
        {
            RunFile("S12.6.1_A6_T2.js");
        }

        [Test(Description = "Checking if execution of \"do{}while true\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T3()
        {
            RunFile("S12.6.1_A6_T3.js");
        }

        [Test(Description = "Checking if execution of \"do{}while false\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T4()
        {
            RunFile("S12.6.1_A6_T4.js");
        }

        [Test(Description = "Checking if execution of \"do{}while ''\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T5()
        {
            RunFile("S12.6.1_A6_T5.js");
        }

        [Test(Description = "Checking if execution of \"do{}while 'hood'\" fails")]
        [ExpectedException]
        public void S12_6_1_A6_T6()
        {
            RunFile("S12.6.1_A6_T6.js");
        }

        [Test(Description = "Using eval")]
        public void S12_6_1_A7()
        {
            RunFile("S12.6.1_A7.js");
        }

        [Test(Description = "Using eval")]
        public void S12_6_1_A8()
        {
            RunFile("S12.6.1_A8.js");
        }

        [Test(Description = "Throwing system exception whithin a \"do-while\" loop")]
        public void S12_6_1_A9()
        {
            RunFile("S12.6.1_A9.js");
        }
    }
}
