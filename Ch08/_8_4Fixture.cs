//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch08
{
    [TestFixture]
    public class _8_4Fixture : Test262Fixture
    {
        public _8_4Fixture()
            : base("ch08\\8.4")
        {
        }

        [Test(Description = "Check type of variable that has been assigned with string literal")]
        public void S8_4_A1()
        {
            RunFile("S8.4_A1.js");
        }

        [Test(Description = "Create string using both unicode and ascii chars")]
        public void S8_4_A10()
        {
            RunFile("S8.4_A10.js");
        }

        [Test(Description = "Create string variable, thet include all reserved words")]
        public void S8_4_A11()
        {
            RunFile("S8.4_A11.js");
        }

        [Test(Description = "Check constructor of simple assigned variable")]
        public void S8_4_A12()
        {
            RunFile("S8.4_A12.js");
        }

        [Test(Description = "Try to create variable using 3 single-quote")]
        [ExpectedException]
        public void S8_4_A13_T1()
        {
            RunFile("S8.4_A13_T1.js");
        }

        [Test(Description = "Try to create variable using 1 single-quote")]
        [ExpectedException]
        public void S8_4_A13_T2()
        {
            RunFile("S8.4_A13_T2.js");
        }

        [Test(Description = "Try to create variable using 4 single-quote")]
        [ExpectedException]
        public void S8_4_A13_T3()
        {
            RunFile("S8.4_A13_T3.js");
        }

        [Test(Description = "Try to create variable using 1 double-quote")]
        [ExpectedException]
        public void S8_4_A14_T1()
        {
            RunFile("S8.4_A14_T1.js");
        }

        [Test(Description = "Try to create variable using 3 double-quote")]
        [ExpectedException]
        public void S8_4_A14_T2()
        {
            RunFile("S8.4_A14_T2.js");
        }

        [Test(Description = "Try to create variable using 4 double-quote")]
        [ExpectedException]
        public void S8_4_A14_T3()
        {
            RunFile("S8.4_A14_T3.js");
        }

        [Test(Description = "Create empty string and check it type")]
        public void S8_4_A2()
        {
            RunFile("S8.4_A2.js");
        }

        [Test(Description = "Try read length property of string variable")]
        public void S8_4_A3()
        {
            RunFile("S8.4_A3.js");
        }

        [Test(Description = "Try read length property of empty string variable")]
        public void S8_4_A4()
        {
            RunFile("S8.4_A4.js");
        }

        [Test(Description = "Insert \"\\0\" into string")]
        public void S8_4_A5()
        {
            RunFile("S8.4_A5.js");
        }

        [Test(Description = "Assign variable by large string")]
        public void S8_4_A6_1()
        {
            RunFile("S8.4_A6.1.js");
        }

        [Test(Description = "Assign variable by large string")]
        public void S8_4_A6_2()
        {
            RunFile("S8.4_A6.2.js");
        }

        [Test(Description = "Insert <LF> between chunks of one string")]
        [ExpectedException]
        public void S8_4_A7_1()
        {
            RunFile("S8.4_A7.1.js");
        }

        [Test(Description = "Insert <CR> between chunks of one string")]
        [ExpectedException]
        public void S8_4_A7_2()
        {
            RunFile("S8.4_A7.2.js");
        }

        [Test(Description = "Insert <PS> between chunks of one string")]
        [ExpectedException]
        public void S8_4_A7_3()
        {
            RunFile("S8.4_A7.3.js");
        }

        [Test(Description = "Insert <LS> between chunks of one string")]
        [ExpectedException]
        public void S8_4_A7_4()
        {
            RunFile("S8.4_A7.4.js");
        }

        [Test(Description = "Compare empty string with undefined, null, 0 and false")]
        public void S8_4_A8()
        {
            RunFile("S8.4_A8.js");
        }

        [Test(Description = "Simple string variable compare with object String")]
        public void S8_4_A9_T1()
        {
            RunFile("S8.4_A9_T1.js");
        }

        [Test(Description = "Compare empty string variable, object String('') and object String()")]
        public void S8_4_A9_T2()
        {
            RunFile("S8.4_A9_T2.js");
        }

        [Test(Description = "Simple empty string variable compare with empty object String")]
        public void S8_4_A9_T3()
        {
            RunFile("S8.4_A9_T3.js");
        }
    }
}
