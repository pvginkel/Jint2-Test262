//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch10
{
    [TestFixture]
    public class _10_6Fixture : Test262Fixture
    {
        public _10_6Fixture()
            : base("ch10\\10.6")
        {
        }

        [Test(Description = "arguments[i] remains same after changing actual parameters in strict mode")]
        public void _10_6_10_c_ii_1_s()
        {
            RunFile("10.6-10-c-ii-1-s.js");
        }

        [Test(Description = "arguments[i] change with actual parameters")]
        public void _10_6_10_c_ii_1()
        {
            RunFile("10.6-10-c-ii-1.js");
        }

        [Test(Description = "arguments[i] doesn't map to actual parameters in strict mode")]
        public void _10_6_10_c_ii_2_s()
        {
            RunFile("10.6-10-c-ii-2-s.js");
        }

        [Test(Description = "arguments[i] map to actual parameter")]
        public void _10_6_10_c_ii_2()
        {
            RunFile("10.6-10-c-ii-2.js");
        }

        [Test(Description = "Arguments Object has index property '0' as its own property, it shoulde be writable, enumerable, configurable and does not invoke the setter defined on Object.prototype[0] (Step 11.b)")]
        public void _10_6_11_b_1()
        {
            RunFile("10.6-11-b-1.js");
        }

        [Test(Description = "Accessing callee property of Arguments object is allowed")]
        public void _10_6_12_1()
        {
            RunFile("10.6-12-1.js");
        }

        [Test(Description = "arguments.callee has correct attributes")]
        public void _10_6_12_2()
        {
            RunFile("10.6-12-2.js");
        }

        [Test(Description = "Accessing caller property of Arguments object is allowed")]
        public void _10_6_13_1()
        {
            RunFile("10.6-13-1.js");
        }

        [Test(Description = "In non-strict mode, arguments object should have its own 'callee' property defined (Step 13.a)")]
        public void _10_6_13_a_1()
        {
            RunFile("10.6-13-a-1.js");
        }

        [Test(Description = "A direct call to arguments.callee.caller should work")]
        public void _10_6_13_a_2()
        {
            RunFile("10.6-13-a-2.js");
        }

        [Test(Description = "An indirect call to arguments.callee.caller should work")]
        public void _10_6_13_a_3()
        {
            RunFile("10.6-13-a-3.js");
        }

        [Test(Description = "Accessing caller property of Arguments object throws TypeError in strict mode")]
        public void _10_6_13_b_1_s()
        {
            RunFile("10.6-13-b-1-s.js");
        }

        [Test(Description = "arguments.caller exists in strict mode")]
        public void _10_6_13_b_2_s()
        {
            RunFile("10.6-13-b-2-s.js");
        }

        [Test(Description = "arguments.caller is non-configurable in strict mode")]
        public void _10_6_13_b_3_s()
        {
            RunFile("10.6-13-b-3-s.js");
        }

        [Test(Description = "Accessing callee property of Arguments object throws TypeError in strict mode")]
        public void _10_6_13_c_1_s()
        {
            RunFile("10.6-13-c-1-s.js");
        }

        [Test(Description = "arguments.callee is exists in strict mode")]
        public void _10_6_13_c_2_s()
        {
            RunFile("10.6-13-c-2-s.js");
        }

        [Test(Description = "arguments.callee is non-configurable in strict mode")]
        public void _10_6_13_c_3_s()
        {
            RunFile("10.6-13-c-3-s.js");
        }

        [Test(Description = "Strict Mode - 'callee' exists and 'caller' exists under strict mode")]
        public void _10_6_14_1_s()
        {
            RunFile("10.6-14-1-s.js");
        }

        [Test(Description = "Strict Mode - [[Enumerable]] attribute value in 'caller' is false under strict mode")]
        public void _10_6_14_b_1_s()
        {
            RunFile("10.6-14-b-1-s.js");
        }

        [Test(Description = "Strict Mode - TypeError is thrown when accessing the [[Set]] attribute in 'caller' under strict mode")]
        public void _10_6_14_b_4_s()
        {
            RunFile("10.6-14-b-4-s.js");
        }

        [Test(Description = "Strict Mode - [[Enumerable]] attribute value in 'callee' is false under strict mode")]
        public void _10_6_14_c_1_s()
        {
            RunFile("10.6-14-c-1-s.js");
        }

        [Test(Description = "Strict Mode - TypeError is thrown when accessing the [[Set]] attribute in 'callee' under strict mode")]
        public void _10_6_14_c_4_s()
        {
            RunFile("10.6-14-c-4-s.js");
        }

        [Test(Description = "Strict Mode - arguments.callee cannot be accessed in a strict function, but does not throw an early error")]
        public void _10_6_1gs()
        {
            RunFile("10.6-1gs.js");
        }

        [Test(Description = "Strict Mode - arguments.callee cannot be accessed in a strict function")]
        [ExpectedException]
        public void _10_6_2gs()
        {
            RunFile("10.6-2gs.js");
        }

        [Test(Description = "[[Prototype]] property of Arguments is set to Object prototype object")]
        public void _10_6_5_1()
        {
            RunFile("10.6-5-1.js");
        }

        [Test(Description = "'length property of arguments object exists")]
        public void _10_6_6_1()
        {
            RunFile("10.6-6-1.js");
        }

        [Test(Description = "'length' property of arguments object has correct attributes")]
        public void _10_6_6_2()
        {
            RunFile("10.6-6-2.js");
        }

        [Test(Description = "'length' property of arguments object for 0 argument function exists")]
        public void _10_6_6_3()
        {
            RunFile("10.6-6-3.js");
        }

        [Test(Description = "'length' property of arguments object for 0 argument function call is 0 even with formal parameters")]
        public void _10_6_6_4()
        {
            RunFile("10.6-6-4.js");
        }

        [Test(Description = "Arguments Object has length as its own property and does not invoke the setter defined on Object.prototype.length (Step 7)")]
        public void _10_6_7_1()
        {
            RunFile("10.6-7-1.js");
        }

        [Test(Description = "Executing function which uses arguments object")]
        public void S10_6_A1()
        {
            RunFile("S10.6_A1.js");
        }

        [Test(Description = "Checking arguments.constructor.prototype===Object.prototype")]
        public void S10_6_A2()
        {
            RunFile("S10.6_A2.js");
        }

        [Test(Description = "Checking existence of arguments.callee property")]
        public void S10_6_A3_T1()
        {
            RunFile("S10.6_A3_T1.js");
        }

        [Test(Description = "Checking if enumerating the arguments.callee property fails")]
        public void S10_6_A3_T2()
        {
            RunFile("S10.6_A3_T2.js");
        }

        [Test(Description = "Checking if deleting arguments.callee property fails")]
        public void S10_6_A3_T3()
        {
            RunFile("S10.6_A3_T3.js");
        }

        [Test(Description = "Overriding arguments.callee property")]
        public void S10_6_A3_T4()
        {
            RunFile("S10.6_A3_T4.js");
        }

        [Test(Description = "Checking that arguments.callee === function object")]
        public void S10_6_A4()
        {
            RunFile("S10.6_A4.js");
        }

        [Test(Description = "Checking existence of arguments.length property")]
        public void S10_6_A5_T1()
        {
            RunFile("S10.6_A5_T1.js");
        }

        [Test(Description = "Checking if enumerating the arguments.length property fails")]
        public void S10_6_A5_T2()
        {
            RunFile("S10.6_A5_T2.js");
        }

        [Test(Description = "Checking if deleting arguments.length property fails")]
        public void S10_6_A5_T3()
        {
            RunFile("S10.6_A5_T3.js");
        }

        [Test(Description = "Overriding arguments.length property")]
        public void S10_6_A5_T4()
        {
            RunFile("S10.6_A5_T4.js");
        }

        [Test(Description = "Create function, that returned arguments.length")]
        public void S10_6_A6()
        {
            RunFile("S10.6_A6.js");
        }

        [Test(Description = "Use property arguments")]
        public void S10_6_A7()
        {
            RunFile("S10.6_A7.js");
        }
    }
}
