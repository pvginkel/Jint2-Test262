//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch13
{
    [TestFixture]
    public class _13_1Fixture : Test262Fixture
    {
        public _13_1Fixture()
            : base("ch13\\13.1")
        {
        }

        [Test(Description = "Duplicate identifier allowed in non-strict function declaration parameter list")]
        public void _13_1_1_1()
        {
            RunFile("13.1-1-1.js");
        }

        [Test(Description = "Duplicate identifier allowed in non-strict function expression parameter list")]
        public void _13_1_1_2()
        {
            RunFile("13.1-1-2.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionDeclaration")]
        public void _13_1_1_s()
        {
            RunFile("13.1-1-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in 'strict mode' using a FunctionExpression and the function has three identical parameters")]
        public void _13_1_10_s()
        {
            RunFile("13.1-10-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the function name of a FunctionDeclaration in strict mode")]
        public void _13_1_11_s()
        {
            RunFile("13.1-11-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the Identifier of a FunctionExpression in strict mode")]
        public void _13_1_12_s()
        {
            RunFile("13.1-12-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the function name of a FunctionDeclaration in strict mode")]
        public void _13_1_13_s()
        {
            RunFile("13.1-13-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the Identifier of a FunctionDeclaration")]
        [ExpectedException]
        public void _13_1_13gs()
        {
            RunFile("13.1-13gs.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the Identifier of a FunctionExpression in strict mode")]
        public void _13_1_14_s()
        {
            RunFile("13.1-14-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionDeclaration in strict eval code")]
        public void _13_1_15_s()
        {
            RunFile("13.1-15-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionDeclaration when FuctionBody is strict code")]
        public void _13_1_16_s()
        {
            RunFile("13.1-16-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionExpression in strict eval code")]
        public void _13_1_17_s()
        {
            RunFile("13.1-17-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionExpression when FuctionBody is strict code")]
        public void _13_1_18_s()
        {
            RunFile("13.1-18-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionDeclaration in strict eval code")]
        public void _13_1_19_s()
        {
            RunFile("13.1-19-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionDeclaration")]
        [ExpectedException]
        public void _13_1_1gs()
        {
            RunFile("13.1-1gs.js");
        }

        [Test(Description = "eval allowed as formal parameter name of a non-strict function declaration")]
        public void _13_1_2_1()
        {
            RunFile("13.1-2-1.js");
        }

        [Test(Description = "eval allowed as formal parameter name of a non-strict function expression")]
        public void _13_1_2_2()
        {
            RunFile("13.1-2-2.js");
        }

        [Test(Description = "arguments allowed as formal parameter name of a non-strict function declaration")]
        public void _13_1_2_5()
        {
            RunFile("13.1-2-5.js");
        }

        [Test(Description = "arguments allowed as formal parameter name of a non-strict function expression")]
        public void _13_1_2_6()
        {
            RunFile("13.1-2-6.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'eval' appears within a FormalParameterList of a strict mode FunctionExpression")]
        public void _13_1_2_s()
        {
            RunFile("13.1-2-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionDeclaration when FuctionBody is strict code")]
        public void _13_1_20_s()
        {
            RunFile("13.1-20-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionExpression in strict eval code")]
        public void _13_1_21_s()
        {
            RunFile("13.1-21-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionExpression when FuctionBody is strict code")]
        public void _13_1_22_s()
        {
            RunFile("13.1-22-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has two identical parameters")]
        public void _13_1_23_s()
        {
            RunFile("13.1-23-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has two identical parameters")]
        public void _13_1_24_s()
        {
            RunFile("13.1-24-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has two identical parameters which are separated by a unique parameter name")]
        public void _13_1_25_s()
        {
            RunFile("13.1-25-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has two identical parameters which are separated by a unique parameter name")]
        public void _13_1_26_s()
        {
            RunFile("13.1-26-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has three identical parameters")]
        public void _13_1_27_s()
        {
            RunFile("13.1-27-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has three identical parameters")]
        public void _13_1_28_s()
        {
            RunFile("13.1-28-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression that is contained in eval strict code and the function has two identical parameters")]
        public void _13_1_29_s()
        {
            RunFile("13.1-29-s.js");
        }

        [Test(Description = "eval allowed as function identifier in non-strict function declaration")]
        public void _13_1_3_1()
        {
            RunFile("13.1-3-1.js");
        }

        [Test(Description = "eval allowed as function identifier in non-strict function expression")]
        public void _13_1_3_2()
        {
            RunFile("13.1-3-2.js");
        }

        [Test(Description = "arguments allowed as function identifier in non-strict function declaration")]
        public void _13_1_3_7()
        {
            RunFile("13.1-3-7.js");
        }

        [Test(Description = "arguments allowed as function identifier in non-strict function expression")]
        public void _13_1_3_8()
        {
            RunFile("13.1-3-8.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionDeclaration")]
        public void _13_1_3_s()
        {
            RunFile("13.1-3-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression whose FunctionBody is contained in strict code and the function has two identical parameters")]
        public void _13_1_30_s()
        {
            RunFile("13.1-30-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression that is contained in eval strict code and the function has two identical parameters, which are separated by a unique parameter name")]
        public void _13_1_31_s()
        {
            RunFile("13.1-31-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression whose FunctionBody is strict and the function has two identical parameters, which are separated by a unique parameter name")]
        public void _13_1_32_s()
        {
            RunFile("13.1-32-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if function is created using a FunctionExpression that is contained in eval strict code and the function has three identical parameters")]
        public void _13_1_33_s()
        {
            RunFile("13.1-33-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function declaration has three identical parameters with a strict mode body")]
        public void _13_1_34_s()
        {
            RunFile("13.1-34-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the function name of a FunctionDeclaration in strict eval code")]
        public void _13_1_35_s()
        {
            RunFile("13.1-35-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the function name of a FunctionDeclaration whose FunctionBody is in strict mode")]
        public void _13_1_36_s()
        {
            RunFile("13.1-36-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the Identifier of a FunctionExpression in strict eval code")]
        public void _13_1_37_s()
        {
            RunFile("13.1-37-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'eval' occurs as the Identifier of a FunctionExpression whose FunctionBody is contained in strict code")]
        public void _13_1_38_s()
        {
            RunFile("13.1-38-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the function name of a FunctionDeclaration in strict eval code")]
        public void _13_1_39_s()
        {
            RunFile("13.1-39-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionExpression")]
        public void _13_1_4_s()
        {
            RunFile("13.1-4-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the Identifier of a FunctionDeclaration whose FunctionBody is contained in strict code")]
        public void _13_1_40_s()
        {
            RunFile("13.1-40-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the Identifier of a FunctionExpression in strict eval code")]
        public void _13_1_41_s()
        {
            RunFile("13.1-41-s.js");
        }

        [Test(Description = "StrictMode - SyntaxError is thrown if 'arguments' occurs as the Identifier of a FunctionExpression whose FunctionBody is contained in strict code")]
        public void _13_1_42_s()
        {
            RunFile("13.1-42-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier 'arguments' appears within a FormalParameterList of a strict mode FunctionExpression")]
        [ExpectedException]
        public void _13_1_4gs()
        {
            RunFile("13.1-4gs.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is declared in 'strict mode' using a FunctionDeclaration and the function has two identical parameters")]
        public void _13_1_5_s()
        {
            RunFile("13.1-5-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a FunctionDeclaration has two identical parameters")]
        [ExpectedException]
        public void _13_1_5gs()
        {
            RunFile("13.1-5gs.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in 'strict mode' using a FunctionDeclaration and the function has two identical parameters, which are separated by a unique parameter name")]
        public void _13_1_6_s()
        {
            RunFile("13.1-6-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in 'strict mode' using a FunctionDeclaration and the function has three identical parameters")]
        public void _13_1_7_s()
        {
            RunFile("13.1-7-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in 'strict mode' using a FunctionExpression and the function has two identical parameters")]
        public void _13_1_8_s()
        {
            RunFile("13.1-8-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a FunctionExpression has two identical parameters")]
        [ExpectedException]
        public void _13_1_8gs()
        {
            RunFile("13.1-8gs.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in 'strict mode' using a FunctionExpression and the function has two identical parameters, which are separated by a unique parameter name")]
        public void _13_1_9_s()
        {
            RunFile("13.1-9-s.js");
        }
    }
}
