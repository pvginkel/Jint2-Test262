//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_12
{
    [TestFixture]
    public class _15_12_3Fixture : Test262Fixture
    {
        public _15_12_3Fixture()
            : base("ch15\\15.12\\15.12.3")
        {
        }

        [Test(Description = "JSON.stringify must exist as be a function")]
        public void _15_12_3_0_1()
        {
            RunFile("15.12.3-0-1.js");
        }

        [Test(Description = "JSON.stringify must exist as be a function taking 3 parameters")]
        public void _15_12_3_0_2()
        {
            RunFile("15.12.3-0-2.js");
        }

        [Test(Description = "JSON.stringify must be deletable (configurable)")]
        public void _15_12_3_0_3()
        {
            RunFile("15.12.3-0-3.js");
        }

        [Test(Description = "JSON.stringify(undefined) returns undefined")]
        public void _15_12_3_11_1()
        {
            RunFile("15.12.3-11-1.js");
        }

        [Test(Description = "A JSON.stringify replacer function applied to a top level scalar value can return undefined.")]
        public void _15_12_3_11_10()
        {
            RunFile("15.12.3-11-10.js");
        }

        [Test(Description = "A JSON.stringify replacer function applied to a top level Object can return undefined.")]
        public void _15_12_3_11_11()
        {
            RunFile("15.12.3-11-11.js");
        }

        [Test(Description = "A JSON.stringify replacer function applied to a top level scalar can return an Array.")]
        public void _15_12_3_11_12()
        {
            RunFile("15.12.3-11-12.js");
        }

        [Test(Description = "A JSON.stringify replacer function applied to a top level scalar can return an Object.")]
        public void _15_12_3_11_13()
        {
            RunFile("15.12.3-11-13.js");
        }

        [Test(Description = "Applying JSON.stringify to a  function returns undefined.")]
        public void _15_12_3_11_14()
        {
            RunFile("15.12.3-11-14.js");
        }

        [Test(Description = "Applying JSON.stringify with a replacer function to a function returns the replacer value.")]
        public void _15_12_3_11_15()
        {
            RunFile("15.12.3-11-15.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property name is the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_16()
        {
            RunFile("15.12.3-11-16.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property name starts with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_17()
        {
            RunFile("15.12.3-11-17.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property name ends with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_18()
        {
            RunFile("15.12.3-11-18.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property name starts and ends with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_19()
        {
            RunFile("15.12.3-11-19.js");
        }

        [Test(Description = "A JSON.stringify replacer function works is applied to a top level undefined value.")]
        public void _15_12_3_11_2()
        {
            RunFile("15.12.3-11-2.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property name middles with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_20()
        {
            RunFile("15.12.3-11-20.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property value is the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_21()
        {
            RunFile("15.12.3-11-21.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property value starts with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_22()
        {
            RunFile("15.12.3-11-22.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property value ends with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_23()
        {
            RunFile("15.12.3-11-23.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property value starts and ends with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_24()
        {
            RunFile("15.12.3-11-24.js");
        }

        [Test(Description = "JSON.stringify - stringifying an object where property value middles with the union of all null character (The abstract operation Quote(value) step 2.c)")]
        public void _15_12_3_11_25()
        {
            RunFile("15.12.3-11-25.js");
        }

        [Test(Description = "JSON.stringify - the last element of the concatenation is ']' (The abstract operation JA(value) step 10.b.iii)")]
        public void _15_12_3_11_26()
        {
            RunFile("15.12.3-11-26.js");
        }

        [Test(Description = "A JSON.stringify correctly works on top level string values.")]
        public void _15_12_3_11_3()
        {
            RunFile("15.12.3-11-3.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level Number values.")]
        public void _15_12_3_11_4()
        {
            RunFile("15.12.3-11-4.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level Boolean values.")]
        public void _15_12_3_11_5()
        {
            RunFile("15.12.3-11-5.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level null values.")]
        public void _15_12_3_11_6()
        {
            RunFile("15.12.3-11-6.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level Number objects.")]
        public void _15_12_3_11_7()
        {
            RunFile("15.12.3-11-7.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level String objects.")]
        public void _15_12_3_11_8()
        {
            RunFile("15.12.3-11-8.js");
        }

        [Test(Description = "JSON.stringify correctly works on top level Boolean objects.")]
        public void _15_12_3_11_9()
        {
            RunFile("15.12.3-11-9.js");
        }

        [Test(Description = "JSON.stringify ignores replacer aruguments that are not functions or arrays..")]
        public void _15_12_3_4_1()
        {
            RunFile("15.12.3-4-1.js");
        }

        [Test(Description = "JSON.stringify converts Number wrapper object space aruguments to Number values")]
        public void _15_12_3_5_a_i_1()
        {
            RunFile("15.12.3-5-a-i-1.js");
        }

        [Test(Description = "JSON.stringify converts String wrapper object space aruguments to String values")]
        public void _15_12_3_5_b_i_1()
        {
            RunFile("15.12.3-5-b-i-1.js");
        }

        [Test(Description = "JSON.stringify treats numeric space arguments greater than 10 the same as a  space argument of 10.")]
        public void _15_12_3_6_a_1()
        {
            RunFile("15.12.3-6-a-1.js");
        }

        [Test(Description = "JSON.stringify truccates non-integer numeric space arguments to their integer part.")]
        public void _15_12_3_6_a_2()
        {
            RunFile("15.12.3-6-a-2.js");
        }

        [Test(Description = "JSON.stringify treats numeric space arguments less than 1 (0.999999)the same as emptry string space argument.")]
        public void _15_12_3_6_b_1()
        {
            RunFile("15.12.3-6-b-1.js");
        }

        [Test(Description = "JSON.stringify treats numeric space arguments less than 1 (0)the same as emptry string space argument.")]
        public void _15_12_3_6_b_2()
        {
            RunFile("15.12.3-6-b-2.js");
        }

        [Test(Description = "JSON.stringify treats numeric space arguments less than 1 (-5) the same as emptry string space argument.")]
        public void _15_12_3_6_b_3()
        {
            RunFile("15.12.3-6-b-3.js");
        }

        [Test(Description = "JSON.stringify treats numeric space arguments (in the range 1..10) is equivalent to a string of spaces of that length.")]
        public void _15_12_3_6_b_4()
        {
            RunFile("15.12.3-6-b-4.js");
        }

        [Test(Description = "JSON.stringify only uses the first 10 characters of a string space arguments.")]
        public void _15_12_3_7_a_1()
        {
            RunFile("15.12.3-7-a-1.js");
        }

        [Test(Description = "JSON.stringify treats an empty string space argument the same as a missing space argument.")]
        public void _15_12_3_8_a_1()
        {
            RunFile("15.12.3-8-a-1.js");
        }

        [Test(Description = "JSON.stringify treats an Boolean space argument the same as a missing space argument.")]
        public void _15_12_3_8_a_2()
        {
            RunFile("15.12.3-8-a-2.js");
        }

        [Test(Description = "JSON.stringify treats an null space argument the same as a missing space argument.")]
        public void _15_12_3_8_a_3()
        {
            RunFile("15.12.3-8-a-3.js");
        }

        [Test(Description = "JSON.stringify treats an Boolean wrapper space argument the same as a missing space argument.")]
        public void _15_12_3_8_a_4()
        {
            RunFile("15.12.3-8-a-4.js");
        }

        [Test(Description = "JSON.stringify treats non-Number or String object space arguments the same as a missing space argument.")]
        public void _15_12_3_8_a_5()
        {
            RunFile("15.12.3-8-a-5.js");
        }

        [Test(Description = "JSON.stringify converts string wrapper objects returned from a toJSON call to literal strings.")]
        public void _15_12_3_2_2_b_i_1()
        {
            RunFile("15.12.3_2-2-b-i-1.js");
        }

        [Test(Description = "JSON.stringify converts Number wrapper objects returned from a toJSON call to literal Number.")]
        public void _15_12_3_2_2_b_i_2()
        {
            RunFile("15.12.3_2-2-b-i-2.js");
        }

        [Test(Description = "JSON.stringify converts Boolean wrapper objects returned from a toJSON call to literal Boolean values.")]
        public void _15_12_3_2_2_b_i_3()
        {
            RunFile("15.12.3_2-2-b-i-3.js");
        }

        [Test(Description = "JSON.stringify converts string wrapper objects returned from replacer functions to literal strings.")]
        public void _15_12_3_2_3_a_1()
        {
            RunFile("15.12.3_2-3-a-1.js");
        }

        [Test(Description = "JSON.stringify converts Number wrapper objects returned from replacer functions to literal numbers.")]
        public void _15_12_3_2_3_a_2()
        {
            RunFile("15.12.3_2-3-a-2.js");
        }

        [Test(Description = "JSON.stringify converts Boolean wrapper objects returned from replacer functions to literal numbers.")]
        public void _15_12_3_2_3_a_3()
        {
            RunFile("15.12.3_2-3-a-3.js");
        }

        [Test(Description = "JSON.stringify a circular object throws a error")]
        public void _15_12_3_4_1_1()
        {
            RunFile("15.12.3_4-1-1.js");
        }

        [Test(Description = "JSON.stringify a circular object throws a TypeError")]
        public void _15_12_3_4_1_2()
        {
            RunFile("15.12.3_4-1-2.js");
        }

        [Test(Description = "JSON.stringify a indirectly circular object throws a error")]
        public void _15_12_3_4_1_3()
        {
            RunFile("15.12.3_4-1-3.js");
        }
    }
}
