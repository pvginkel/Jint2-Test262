//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_3._15_3_4
{
    [TestFixture]
    public class _15_3_4_5Fixture : Test262Fixture
    {
        public _15_3_4_5Fixture()
            : base("ch15\\15.3\\15.3.4\\15.3.4.5")
        {
        }

        [Test(Description = "Function.prototype.bind must exist as a function")]
        public void _15_3_4_5_0_1()
        {
            RunFile("15.3.4.5-0-1.js");
        }

        [Test(Description = "Function.prototype.bind must exist as a function taking 1 parameter")]
        public void _15_3_4_5_0_2()
        {
            RunFile("15.3.4.5-0-2.js");
        }

        [Test(Description = "Function.prototype.bind - internal property [[Class]] of 'F' is set as Function")]
        public void _15_3_4_5_10_1()
        {
            RunFile("15.3.4.5-10-1.js");
        }

        [Test(Description = "Function.prototype.bind - internal property [[Prototype]] of 'F' is set as Function.prototype")]
        public void _15_3_4_5_11_1()
        {
            RunFile("15.3.4.5-11-1.js");
        }

        [Test(Description = "Function.prototype.bind, bound fn has a 'length' own property")]
        public void _15_3_4_5_13_b_1()
        {
            RunFile("15.3.4.5-13.b-1.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' set to remaining number of expected args")]
        public void _15_3_4_5_13_b_2()
        {
            RunFile("15.3.4.5-13.b-2.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' set to remaining number of expected args (all args prefilled)")]
        public void _15_3_4_5_13_b_3()
        {
            RunFile("15.3.4.5-13.b-3.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' set to remaining number of expected args (target takes 0 args)")]
        public void _15_3_4_5_13_b_4()
        {
            RunFile("15.3.4.5-13.b-4.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' set to remaining number of expected args (target provided extra args)")]
        public void _15_3_4_5_13_b_5()
        {
            RunFile("15.3.4.5-13.b-5.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' set to remaining number of expected args")]
        public void _15_3_4_5_13_b_6()
        {
            RunFile("15.3.4.5-13.b-6.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' is a data valued own property")]
        public void _15_3_4_5_15_1()
        {
            RunFile("15.3.4.5-15-1.js");
        }

        [Test(Description = "Function.prototype.bind, 'length' is a data valued own property with default attributes (false)")]
        public void _15_3_4_5_15_2()
        {
            RunFile("15.3.4.5-15-2.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Writable]] attribute of length property in F set as false")]
        public void _15_3_4_5_15_3()
        {
            RunFile("15.3.4.5-15-3.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Enumerable]] attribute of length property in F set as false")]
        public void _15_3_4_5_15_4()
        {
            RunFile("15.3.4.5-15-4.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Configurable]] attribute of length property in F set as false")]
        public void _15_3_4_5_15_5()
        {
            RunFile("15.3.4.5-15-5.js");
        }

        [Test(Description = "Function.prototype.bind, [[Extensible]] of the bound fn is true")]
        public void _15_3_4_5_16_1()
        {
            RunFile("15.3.4.5-16-1.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Extensible]] attribute of internal property in F set as true")]
        public void _15_3_4_5_16_2()
        {
            RunFile("15.3.4.5-16-2.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if the Target is not callable (but an instance of Function)")]
        public void _15_3_4_5_2_1()
        {
            RunFile("15.3.4.5-2-1.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is undefined")]
        public void _15_3_4_5_2_10()
        {
            RunFile("15.3.4.5-2-10.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is NULL")]
        public void _15_3_4_5_2_11()
        {
            RunFile("15.3.4.5-2-11.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is a boolean")]
        public void _15_3_4_5_2_12()
        {
            RunFile("15.3.4.5-2-12.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is a number")]
        public void _15_3_4_5_2_13()
        {
            RunFile("15.3.4.5-2-13.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is a string")]
        public void _15_3_4_5_2_14()
        {
            RunFile("15.3.4.5-2-14.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if 'Target' is Object without Call internal method")]
        public void _15_3_4_5_2_15()
        {
            RunFile("15.3.4.5-2-15.js");
        }

        [Test(Description = "Function.prototype.bind - 'Target' is a function")]
        public void _15_3_4_5_2_16()
        {
            RunFile("15.3.4.5-2-16.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if the Target is not callable (bind attached to object)")]
        public void _15_3_4_5_2_2()
        {
            RunFile("15.3.4.5-2-2.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (Number)")]
        public void _15_3_4_5_2_3()
        {
            RunFile("15.3.4.5-2-3.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (String)")]
        public void _15_3_4_5_2_4()
        {
            RunFile("15.3.4.5-2-4.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (Boolean)")]
        public void _15_3_4_5_2_5()
        {
            RunFile("15.3.4.5-2-5.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (Object)")]
        public void _15_3_4_5_2_6()
        {
            RunFile("15.3.4.5-2-6.js");
        }

        [Test(Description = "Function.prototype.bind throws TypeError if the Target is not callable (JSON)")]
        public void _15_3_4_5_2_7()
        {
            RunFile("15.3.4.5-2-7.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (Array)")]
        public void _15_3_4_5_2_8()
        {
            RunFile("15.3.4.5-2-8.js");
        }

        [Test(Description = "Function.prototype.bind allows Target to be a constructor (Date)")]
        public void _15_3_4_5_2_9()
        {
            RunFile("15.3.4.5-2-9.js");
        }

        [Test(Description = "Function.prototype.bind - 'caller' is defined as one property of 'F'")]
        public void _15_3_4_5_20_1()
        {
            RunFile("15.3.4.5-20-1.js");
        }

        [Test(Description = "Function.prototype.bind - [[Get]] attribute of 'caller' property in 'F' is thrower")]
        public void _15_3_4_5_20_2()
        {
            RunFile("15.3.4.5-20-2.js");
        }

        [Test(Description = "Function.prototype.bind - [[Set]] attribute of 'caller' property in  'F' is thrower")]
        public void _15_3_4_5_20_3()
        {
            RunFile("15.3.4.5-20-3.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Enumerable]] attribute of 'caller' property in  'F' is false")]
        public void _15_3_4_5_20_4()
        {
            RunFile("15.3.4.5-20-4.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Configurable]] attribute of 'caller' property in  'F' is false")]
        public void _15_3_4_5_20_5()
        {
            RunFile("15.3.4.5-20-5.js");
        }

        [Test(Description = "Function.prototype.bind - 'arguments' is defined as one property of 'F'")]
        public void _15_3_4_5_21_1()
        {
            RunFile("15.3.4.5-21-1.js");
        }

        [Test(Description = "Function.prototype.bind - [[Get]] attribute of 'arguments' property in  'F' is thrower")]
        public void _15_3_4_5_21_2()
        {
            RunFile("15.3.4.5-21-2.js");
        }

        [Test(Description = "Function.prototype.bind - [[Set]] attribute of 'arguments' property in  'F' is thrower")]
        public void _15_3_4_5_21_3()
        {
            RunFile("15.3.4.5-21-3.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Enumerable]] attribute of 'arguments' property in  'F' is false")]
        public void _15_3_4_5_21_4()
        {
            RunFile("15.3.4.5-21-4.js");
        }

        [Test(Description = "Function.prototype.bind - The [[Configurable]] attribute of 'arguments' property in  'F' is false")]
        public void _15_3_4_5_21_5()
        {
            RunFile("15.3.4.5-21-5.js");
        }

        [Test(Description = "Function.prototype.bind - each arg is defined in A in list order")]
        public void _15_3_4_5_3_1()
        {
            RunFile("15.3.4.5-3-1.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own data property")]
        public void _15_3_4_5_6_1()
        {
            RunFile("15.3.4.5-6-1.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own accessor property without a get function that overrides an inherited accessor property")]
        public void _15_3_4_5_6_10()
        {
            RunFile("15.3.4.5-6-10.js");
        }

        [Test(Description = "Function.prototype.bind - F can get inherited accessor property without a get function")]
        public void _15_3_4_5_6_11()
        {
            RunFile("15.3.4.5-6-11.js");
        }

        [Test(Description = "Function.prototype.bind - F cannot get property which doesn't exist")]
        public void _15_3_4_5_6_12()
        {
            RunFile("15.3.4.5-6-12.js");
        }

        [Test(Description = "Function.prototype.bind - F can get inherited data property")]
        public void _15_3_4_5_6_2()
        {
            RunFile("15.3.4.5-6-2.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own data property that overrides an inherited data property")]
        public void _15_3_4_5_6_3()
        {
            RunFile("15.3.4.5-6-3.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own data property that overrides an inherited accessor property")]
        public void _15_3_4_5_6_4()
        {
            RunFile("15.3.4.5-6-4.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own accessor property")]
        public void _15_3_4_5_6_5()
        {
            RunFile("15.3.4.5-6-5.js");
        }

        [Test(Description = "Function.prototype.bind - F can get inherited accessor property")]
        public void _15_3_4_5_6_6()
        {
            RunFile("15.3.4.5-6-6.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own accessor property that overrides an inherited data property")]
        public void _15_3_4_5_6_7()
        {
            RunFile("15.3.4.5-6-7.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own accessor property that overrides an inherited accessor property")]
        public void _15_3_4_5_6_8()
        {
            RunFile("15.3.4.5-6-8.js");
        }

        [Test(Description = "Function.prototype.bind - F can get own accessor property without a get function")]
        public void _15_3_4_5_6_9()
        {
            RunFile("15.3.4.5-6-9.js");
        }

        [Test(Description = "Function.prototype.bind, type of bound function must be 'function'")]
        public void _15_3_4_5_8_1()
        {
            RunFile("15.3.4.5-8-1.js");
        }

        [Test(Description = "Function.prototype.bind, [[Class]] of bound function must be 'Function'")]
        public void _15_3_4_5_8_2()
        {
            RunFile("15.3.4.5-8-2.js");
        }

        [Test(Description = "Function.prototype.bind, [[Prototype]] is Function.prototype")]
        public void _15_3_4_5_9_1()
        {
            RunFile("15.3.4.5-9-1.js");
        }

        [Test(Description = "Function.prototype.bind, [[Prototype]] is Function.prototype (using getPrototypeOf)")]
        public void _15_3_4_5_9_2()
        {
            RunFile("15.3.4.5-9-2.js");
        }

        [Test(Description = "A bound function should fail to find its \"caller\"")]
        [ExpectedException]
        public void S15_3_4_5_A1()
        {
            RunFile("S15.3.4.5_A1.js");
        }

        [Test(Description = "If IsCallable(func) is false, then throw a TypeError exception.")]
        [ExpectedException]
        public void S15_3_4_5_A13()
        {
            RunFile("S15.3.4.5_A13.js");
        }

        [Test(Description = "If IsCallable(func) is false, then throw a TypeError exception.")]
        [ExpectedException]
        public void S15_3_4_5_A14()
        {
            RunFile("S15.3.4.5_A14.js");
        }

        [Test(Description = "If IsCallable(func) is false, then throw a TypeError exception.")]
        [ExpectedException]
        public void S15_3_4_5_A15()
        {
            RunFile("S15.3.4.5_A15.js");
        }

        [Test(Description = "A RegExp is not a function, but it may be callable. Iff it is, it's typeof should be 'function', in which case bind should accept it as a valid this value.")]
        public void S15_3_4_5_A16()
        {
            RunFile("S15.3.4.5_A16.js");
        }

        [Test(Description = "a bound function should fail to find the bound function \"arguments\"")]
        [ExpectedException]
        public void S15_3_4_5_A2()
        {
            RunFile("S15.3.4.5_A2.js");
        }

        [Test(Description = "Function.prototype.bind must exist")]
        public void S15_3_4_5_A3()
        {
            RunFile("S15.3.4.5_A3.js");
        }

        [Test(Description = "Function.prototype.bind call the original's internal")]
        public void S15_3_4_5_A4()
        {
            RunFile("S15.3.4.5_A4.js");
        }

        [Test(Description = "Function.prototype.bind must curry [[Construct]] as")]
        public void S15_3_4_5_A5()
        {
            RunFile("S15.3.4.5_A5.js");
        }
    }
}
