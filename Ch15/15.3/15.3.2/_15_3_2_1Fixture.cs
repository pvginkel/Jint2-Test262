//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_3._15_3_2
{
    [TestFixture]
    public class _15_3_2_1Fixture : Test262Fixture
    {
        public _15_3_2_1Fixture()
            : base("ch15\\15.3\\15.3.2\\15.3.2.1")
        {
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function using the Function constructor has two identical parameters in (global) strict mode")]
        [ExpectedException]
        public void _15_3_2_1_10_4gs()
        {
            RunFile("15.3.2.1-10-4gs.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function using the Function constructor has two identical parameters in (local) strict mode")]
        [ExpectedException]
        public void _15_3_2_1_10_6gs()
        {
            RunFile("15.3.2.1-10-6gs.js");
        }

        [Test(Description = "Duplicate seperate parameter name in Function constructor throws SyntaxError in strict mode")]
        public void _15_3_2_1_11_1_s()
        {
            RunFile("15.3.2.1-11-1-s.js");
        }

        [Test(Description = "Duplicate separate parameter name in Function constructor allowed if body not strict")]
        public void _15_3_2_1_11_1()
        {
            RunFile("15.3.2.1-11-1.js");
        }

        [Test(Description = "Duplicate seperate parameter name in Function constructor called from strict mode allowed if body not strict")]
        public void _15_3_2_1_11_2_s()
        {
            RunFile("15.3.2.1-11-2-s.js");
        }

        [Test(Description = "Function constructor having a formal parameter named 'eval' throws SyntaxError if function body is strict mode")]
        public void _15_3_2_1_11_3_s()
        {
            RunFile("15.3.2.1-11-3-s.js");
        }

        [Test(Description = "Function constructor may have a formal parameter named 'eval' if body is not strict mode")]
        public void _15_3_2_1_11_3()
        {
            RunFile("15.3.2.1-11-3.js");
        }

        [Test(Description = "Function constructor call from strict code with formal parameter named 'eval' does not throws SyntaxError if function body is not strict mode")]
        public void _15_3_2_1_11_4_s()
        {
            RunFile("15.3.2.1-11-4-s.js");
        }

        [Test(Description = "Duplicate combined parameter name in Function constructor throws SyntaxError in strict mode")]
        public void _15_3_2_1_11_5_s()
        {
            RunFile("15.3.2.1-11-5-s.js");
        }

        [Test(Description = "Duplicate combined parameter name in Function constructor allowed if body is not strict")]
        public void _15_3_2_1_11_5()
        {
            RunFile("15.3.2.1-11-5.js");
        }

        [Test(Description = "Duplicate combined parameter name allowed in Function constructor called in strict mode if body not strict")]
        public void _15_3_2_1_11_6_s()
        {
            RunFile("15.3.2.1-11-6-s.js");
        }

        [Test(Description = "Function constructor call from strict code with formal parameter named arguments does not throws SyntaxError if function body is not strict mode")]
        public void _15_3_2_1_11_7_s()
        {
            RunFile("15.3.2.1-11-7-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is not thrown if a function is created using a Function constructor that has two identical parameters, which are separated by a unique parameter name and there is no explicit 'use strict' in the function constructor's body")]
        public void _15_3_2_1_11_8_s()
        {
            RunFile("15.3.2.1-11-8-s.js");
        }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using the Function constructor that has three identical parameters and there is no explicit 'use strict' in the function constructor's body")]
        public void _15_3_2_1_11_9_s()
        {
            RunFile("15.3.2.1-11-9-s.js");
        }
    }
}
