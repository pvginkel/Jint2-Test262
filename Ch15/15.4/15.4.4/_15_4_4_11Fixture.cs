//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_4._15_4_4
{
    [TestFixture]
    public class _15_4_4_11Fixture : Test262Fixture
    {
        public _15_4_4_11Fixture()
            : base("ch15\\15.4\\15.4.4\\15.4.4.11")
        {
        }

        [Test(Description = "If comparefn is undefined, use SortCompare operator")]
        public void S15_4_4_11_A1_1_T1()
        {
            RunFile("S15.4.4.11_A1.1_T1.js");
        }

        [Test(Description = "If comparefn is undefined, use SortCompare operator")]
        public void S15_4_4_11_A1_2_T1()
        {
            RunFile("S15.4.4.11_A1.2_T1.js");
        }

        [Test(Description = "If comparefn is not undefined")]
        public void S15_4_4_11_A1_2_T2()
        {
            RunFile("S15.4.4.11_A1.2_T2.js");
        }

        [Test(Description = "If comparefn is undefined, use SortCompare operator")]
        public void S15_4_4_11_A1_3_T1()
        {
            RunFile("S15.4.4.11_A1.3_T1.js");
        }

        [Test(Description = "If comparefn is undefined, use SortCompare operator")]
        public void S15_4_4_11_A1_4_T1()
        {
            RunFile("S15.4.4.11_A1.4_T1.js");
        }

        [Test(Description = "If comparefn is not undefined")]
        public void S15_4_4_11_A1_4_T2()
        {
            RunFile("S15.4.4.11_A1.4_T2.js");
        }

        [Test(Description = "Checking sort() and sort(undefined)")]
        public void S15_4_4_11_A1_5_T1()
        {
            RunFile("S15.4.4.11_A1.5_T1.js");
        }

        [Test(Description = "Checking ENGLISH ALPHABET")]
        public void S15_4_4_11_A2_1_T1()
        {
            RunFile("S15.4.4.11_A2.1_T1.js");
        }

        [Test(Description = "Checking RUSSIAN ALPHABET")]
        public void S15_4_4_11_A2_1_T2()
        {
            RunFile("S15.4.4.11_A2.1_T2.js");
        }

        [Test(Description = "Checking ToString operator")]
        public void S15_4_4_11_A2_1_T3()
        {
            RunFile("S15.4.4.11_A2.1_T3.js");
        }

        [Test(Description = "Checking ENGLISH ALPHABET")]
        public void S15_4_4_11_A2_2_T1()
        {
            RunFile("S15.4.4.11_A2.2_T1.js");
        }

        [Test(Description = "Checking RUSSIAN ALPHABET")]
        public void S15_4_4_11_A2_2_T2()
        {
            RunFile("S15.4.4.11_A2.2_T2.js");
        }

        [Test(Description = "Checking ToString operator")]
        public void S15_4_4_11_A2_2_T3()
        {
            RunFile("S15.4.4.11_A2.2_T3.js");
        }

        [Test(Description = "If comparefn is undefined, use SortCompare operator")]
        public void S15_4_4_11_A3_T1()
        {
            RunFile("S15.4.4.11_A3_T1.js");
        }

        [Test(Description = "If comparefn is not undefined")]
        public void S15_4_4_11_A3_T2()
        {
            RunFile("S15.4.4.11_A3_T2.js");
        }

        [Test(Description = "length = 4294967296")]
        public void S15_4_4_11_A4_T1()
        {
            RunFile("S15.4.4.11_A4_T1.js");
        }

        [Test(Description = "length = 4294967298")]
        public void S15_4_4_11_A4_T2()
        {
            RunFile("S15.4.4.11_A4_T2.js");
        }

        [Test(Description = "length = -4294967294")]
        public void S15_4_4_11_A4_T3()
        {
            RunFile("S15.4.4.11_A4_T3.js");
        }

        [Test(Description = "comparefn function throw \"error\"")]
        public void S15_4_4_11_A5_T1()
        {
            RunFile("S15.4.4.11_A5_T1.js");
        }

        [Test(Description = "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype")]
        public void S15_4_4_11_A6_T2()
        {
            RunFile("S15.4.4.11_A6_T2.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_11_A7_1()
        {
            RunFile("S15.4.4.11_A7.1.js");
        }

        [Test(Description = "Checking use hasOwnProperty, delete")]
        public void S15_4_4_11_A7_2()
        {
            RunFile("S15.4.4.11_A7.2.js");
        }

        [Test(Description = "Checking if varying the length fails")]
        public void S15_4_4_11_A7_3()
        {
            RunFile("S15.4.4.11_A7.3.js");
        }

        [Test(Description = "sort.length === 1")]
        public void S15_4_4_11_A7_4()
        {
            RunFile("S15.4.4.11_A7.4.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_11_A7_5()
        {
            RunFile("S15.4.4.11_A7.5.js");
        }

        [Test(Description = "Checking Array.prototype.sort.prototype")]
        public void S15_4_4_11_A7_6()
        {
            RunFile("S15.4.4.11_A7.6.js");
        }

        [Test(Description = "If property does not implement the internal [[Construct]] method, throw a TypeError exception")]
        public void S15_4_4_11_A7_7()
        {
            RunFile("S15.4.4.11_A7.7.js");
        }

        [Test(Description = "comparefn tests that its this value is undefined")]
        public void S15_4_4_11_A8()
        {
            RunFile("S15.4.4.11_A8.js");
        }
    }
}
