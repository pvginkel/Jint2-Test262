//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_4._15_4_4
{
    [TestFixture]
    public class _15_4_4_19Fixture : Test262Fixture
    {
        public _15_4_4_19Fixture()
            : base("ch15\\15.4\\15.4.4\\15.4.4.19")
        {
        }

        [Test(Description = "Array.prototype.map must exist as a function")]
        public void _15_4_4_19_0_1()
        {
            RunFile("15.4.4.19-0-1.js");
        }

        [Test(Description = "Array.prototype.map.length must be 1")]
        public void _15_4_4_19_0_2()
        {
            RunFile("15.4.4.19-0-2.js");
        }

        [Test(Description = "Array.prototype.map - applied to undefined")]
        public void _15_4_4_19_1_1()
        {
            RunFile("15.4.4.19-1-1.js");
        }

        [Test(Description = "Array.prototype.map - applied to the Math object")]
        public void _15_4_4_19_1_10()
        {
            RunFile("15.4.4.19-1-10.js");
        }

        [Test(Description = "Array.prototype.map - applied to Date object")]
        public void _15_4_4_19_1_11()
        {
            RunFile("15.4.4.19-1-11.js");
        }

        [Test(Description = "Array.prototype.map - applied to RegExp object")]
        public void _15_4_4_19_1_12()
        {
            RunFile("15.4.4.19-1-12.js");
        }

        [Test(Description = "Array.prototype.map - applied to the JSON object")]
        public void _15_4_4_19_1_13()
        {
            RunFile("15.4.4.19-1-13.js");
        }

        [Test(Description = "Array.prototype.map - applied to Error object")]
        public void _15_4_4_19_1_14()
        {
            RunFile("15.4.4.19-1-14.js");
        }

        [Test(Description = "Array.prototype.map - applied to the Arguments object")]
        public void _15_4_4_19_1_15()
        {
            RunFile("15.4.4.19-1-15.js");
        }

        [Test(Description = "Array.prototype.map - applied to null")]
        public void _15_4_4_19_1_2()
        {
            RunFile("15.4.4.19-1-2.js");
        }

        [Test(Description = "Array.prototype.map - applied to boolean primitive")]
        public void _15_4_4_19_1_3()
        {
            RunFile("15.4.4.19-1-3.js");
        }

        [Test(Description = "Array.prototype.map - applied to Boolean object")]
        public void _15_4_4_19_1_4()
        {
            RunFile("15.4.4.19-1-4.js");
        }

        [Test(Description = "Array.prototype.map - applied to number primitive")]
        public void _15_4_4_19_1_5()
        {
            RunFile("15.4.4.19-1-5.js");
        }

        [Test(Description = "Array.prototype.map - applied to Number object")]
        public void _15_4_4_19_1_6()
        {
            RunFile("15.4.4.19-1-6.js");
        }

        [Test(Description = "Array.prototype.map - applied to string primitive")]
        public void _15_4_4_19_1_7()
        {
            RunFile("15.4.4.19-1-7.js");
        }

        [Test(Description = "Array.prototype.map - applied to String object")]
        public void _15_4_4_19_1_8()
        {
            RunFile("15.4.4.19-1-8.js");
        }

        [Test(Description = "Array.prototype.map - applied to Function object")]
        public void _15_4_4_19_1_9()
        {
            RunFile("15.4.4.19-1-9.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object when 'length' is an own data property")]
        public void _15_4_4_19_2_1()
        {
            RunFile("15.4.4.19-2-1.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an inherited accessor property")]
        public void _15_4_4_19_2_10()
        {
            RunFile("15.4.4.19-2-10.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object when 'length' is an own accessor property without a get function")]
        public void _15_4_4_19_2_11()
        {
            RunFile("15.4.4.19-2-11.js");
        }

        [Test(Description = "Array.prototype.map - applied to the Array-like object when 'length' is own accessor property without a get function that overrides an inherited accessor property")]
        public void _15_4_4_19_2_12()
        {
            RunFile("15.4.4.19-2-12.js");
        }

        [Test(Description = "Array.prototype.map - applied to the Array-like object when 'length' is inherited accessor property without a get function")]
        public void _15_4_4_19_2_13()
        {
            RunFile("15.4.4.19-2-13.js");
        }

        [Test(Description = "Array.prototype.map - applied to the Array-like object that 'length' property doesn't exist")]
        public void _15_4_4_19_2_14()
        {
            RunFile("15.4.4.19-2-14.js");
        }

        [Test(Description = "Array.prototype.map - when 'length' is property of the global object")]
        public void _15_4_4_19_2_15()
        {
            RunFile("15.4.4.19-2-15.js");
        }

        [Test(Description = "Array.prototype.map - applied to Arguments object, which implements its own property get method")]
        public void _15_4_4_19_2_17()
        {
            RunFile("15.4.4.19-2-17.js");
        }

        [Test(Description = "Array.prototype.map - applied to String object, which implements its own property get method")]
        public void _15_4_4_19_2_18()
        {
            RunFile("15.4.4.19-2-18.js");
        }

        [Test(Description = "Array.prototype.map - applied to Function object, which implements its own property get method")]
        public void _15_4_4_19_2_19()
        {
            RunFile("15.4.4.19-2-19.js");
        }

        [Test(Description = "Array.prototype.map - when 'length' is own data property on an Array")]
        public void _15_4_4_19_2_2()
        {
            RunFile("15.4.4.19-2-2.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an own data property that overrides an inherited data property")]
        public void _15_4_4_19_2_3()
        {
            RunFile("15.4.4.19-2-3.js");
        }

        [Test(Description = "Array.prototype.map - when 'length' is own data property that overrides an inherited data property on an Array")]
        public void _15_4_4_19_2_4()
        {
            RunFile("15.4.4.19-2-4.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an own data property that overrides an inherited accessor property")]
        public void _15_4_4_19_2_5()
        {
            RunFile("15.4.4.19-2-5.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an inherited data property")]
        public void _15_4_4_19_2_6()
        {
            RunFile("15.4.4.19-2-6.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an own accessor property")]
        public void _15_4_4_19_2_7()
        {
            RunFile("15.4.4.19-2-7.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object, 'length' is an own accessor property that overrides an inherited data property")]
        public void _15_4_4_19_2_8()
        {
            RunFile("15.4.4.19-2-8.js");
        }

        [Test(Description = "Array.prototype.map - applied to Array-like object when 'length' is an own accessor property that overrides an inherited accessor property")]
        public void _15_4_4_19_2_9()
        {
            RunFile("15.4.4.19-2-9.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is undefined")]
        public void _15_4_4_19_3_1()
        {
            RunFile("15.4.4.19-3-1.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is NaN)")]
        public void _15_4_4_19_3_10()
        {
            RunFile("15.4.4.19-3-10.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing a positive number")]
        public void _15_4_4_19_3_11()
        {
            RunFile("15.4.4.19-3-11.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing a negative number")]
        public void _15_4_4_19_3_12()
        {
            RunFile("15.4.4.19-3-12.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is string that is able to convert to number primitive (value is a decimal number)")]
        public void _15_4_4_19_3_13()
        {
            RunFile("15.4.4.19-3-13.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing Infinity")]
        public void _15_4_4_19_3_14()
        {
            RunFile("15.4.4.19-3-14.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing an exponential number")]
        public void _15_4_4_19_3_15()
        {
            RunFile("15.4.4.19-3-15.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing a hex number")]
        public void _15_4_4_19_3_16()
        {
            RunFile("15.4.4.19-3-16.js");
        }

        [Test(Description = "Array.prototype.map - when 'length' is a string containing a number with leading zeros")]
        public void _15_4_4_19_3_17()
        {
            RunFile("15.4.4.19-3-17.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a string that can't convert to a number")]
        public void _15_4_4_19_3_18()
        {
            RunFile("15.4.4.19-3-18.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is an Object which has an own toString method")]
        public void _15_4_4_19_3_19()
        {
            RunFile("15.4.4.19-3-19.js");
        }

        [Test(Description = "Array.prototype.map on an Array-like object if 'length' is 1 (length overridden to true(type conversion))")]
        public void _15_4_4_19_3_2()
        {
            RunFile("15.4.4.19-3-2.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is an Object which has an own valueOf method")]
        public void _15_4_4_19_3_20()
        {
            RunFile("15.4.4.19-3-20.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is an object that has an own valueOf method that returns an object and toString method that returns a string")]
        public void _15_4_4_19_3_21()
        {
            RunFile("15.4.4.19-3-21.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError exception when 'length' is an object with toString and valueOf methods that don�t return primitive values")]
        public void _15_4_4_19_3_22()
        {
            RunFile("15.4.4.19-3-22.js");
        }

        [Test(Description = "Array.prototype.map uses inherited valueOf method when 'length' is an object with an own toString and inherited valueOf methods")]
        public void _15_4_4_19_3_23()
        {
            RunFile("15.4.4.19-3-23.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a positive non-integer, ensure truncation occurs in the proper direction")]
        public void _15_4_4_19_3_24()
        {
            RunFile("15.4.4.19-3-24.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a negative non-integer, ensure truncation occurs in the proper direction")]
        public void _15_4_4_19_3_25()
        {
            RunFile("15.4.4.19-3-25.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is boundary value (2^32)")]
        public void _15_4_4_19_3_28()
        {
            RunFile("15.4.4.19-3-28.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is boundary value (2^32 + 1)")]
        public void _15_4_4_19_3_29()
        {
            RunFile("15.4.4.19-3-29.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is 0)")]
        public void _15_4_4_19_3_3()
        {
            RunFile("15.4.4.19-3-3.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is +0)")]
        public void _15_4_4_19_3_4()
        {
            RunFile("15.4.4.19-3-4.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is -0)")]
        public void _15_4_4_19_3_5()
        {
            RunFile("15.4.4.19-3-5.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing a positive number")]
        public void _15_4_4_19_3_6()
        {
            RunFile("15.4.4.19-3-6.js");
        }

        [Test(Description = "Array.prototype.map - 'length' is a string containing a negative number")]
        public void _15_4_4_19_3_7()
        {
            RunFile("15.4.4.19-3-7.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is Infinity)")]
        public void _15_4_4_19_3_8()
        {
            RunFile("15.4.4.19-3-8.js");
        }

        [Test(Description = "Array.prototype.map - value of 'length' is a number (value is -Infinity)")]
        public void _15_4_4_19_3_9()
        {
            RunFile("15.4.4.19-3-9.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is undefined")]
        public void _15_4_4_19_4_1()
        {
            RunFile("15.4.4.19-4-1.js");
        }

        [Test(Description = "Array.prototype.map - the exception is not thrown if exception was thrown by step 2")]
        public void _15_4_4_19_4_10()
        {
            RunFile("15.4.4.19-4-10.js");
        }

        [Test(Description = "Array.prototype.map - the exception is not thrown if exception was thrown by step 3")]
        public void _15_4_4_19_4_11()
        {
            RunFile("15.4.4.19-4-11.js");
        }

        [Test(Description = "Array.prototype.map - 'callbackfn' is a function")]
        public void _15_4_4_19_4_12()
        {
            RunFile("15.4.4.19-4-12.js");
        }

        [Test(Description = "Array.prototype.map - calling with no callbackfn is the same as passing undefined for callbackfn")]
        public void _15_4_4_19_4_15()
        {
            RunFile("15.4.4.19-4-15.js");
        }

        [Test(Description = "Array.prototype.map throws ReferenceError if callbackfn is unreferenced")]
        public void _15_4_4_19_4_2()
        {
            RunFile("15.4.4.19-4-2.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is null")]
        public void _15_4_4_19_4_3()
        {
            RunFile("15.4.4.19-4-3.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is boolean")]
        public void _15_4_4_19_4_4()
        {
            RunFile("15.4.4.19-4-4.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is number")]
        public void _15_4_4_19_4_5()
        {
            RunFile("15.4.4.19-4-5.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is string")]
        public void _15_4_4_19_4_6()
        {
            RunFile("15.4.4.19-4-6.js");
        }

        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is Object without Call internal method")]
        public void _15_4_4_19_4_7()
        {
            RunFile("15.4.4.19-4-7.js");
        }

        [Test(Description = "Array.prototype.map - Side effects produced by step 2 are visible when an exception occurs")]
        public void _15_4_4_19_4_8()
        {
            RunFile("15.4.4.19-4-8.js");
        }

        [Test(Description = "Array.prototype.map - Side effects produced by step 3 are visible when an exception occurs")]
        public void _15_4_4_19_4_9()
        {
            RunFile("15.4.4.19-4-9.js");
        }

        [Test(Description = "Array.prototype.map - thisArg not passed to strict callbackfn")]
        public void _15_4_4_19_5_1_s()
        {
            RunFile("15.4.4.19-5-1-s.js");
        }

        [Test(Description = "Array.prototype.map - thisArg not passed")]
        public void _15_4_4_19_5_1()
        {
            RunFile("15.4.4.19-5-1.js");
        }

        [Test(Description = "Array.prototype.map - Array object can be used as thisArg")]
        public void _15_4_4_19_5_10()
        {
            RunFile("15.4.4.19-5-10.js");
        }

        [Test(Description = "Array.prototype.map - String object can be used as thisArg")]
        public void _15_4_4_19_5_11()
        {
            RunFile("15.4.4.19-5-11.js");
        }

        [Test(Description = "Array.prototype.map - Boolean object can be used as thisArg")]
        public void _15_4_4_19_5_12()
        {
            RunFile("15.4.4.19-5-12.js");
        }

        [Test(Description = "Array.prototype.map - Number object can be used as thisArg")]
        public void _15_4_4_19_5_13()
        {
            RunFile("15.4.4.19-5-13.js");
        }

        [Test(Description = "Array.prototype.map - the Math object can be used as thisArg")]
        public void _15_4_4_19_5_14()
        {
            RunFile("15.4.4.19-5-14.js");
        }

        [Test(Description = "Array.prototype.map - Date object can be used as thisArg")]
        public void _15_4_4_19_5_15()
        {
            RunFile("15.4.4.19-5-15.js");
        }

        [Test(Description = "Array.prototype.map - RegExp object can be used as thisArg")]
        public void _15_4_4_19_5_16()
        {
            RunFile("15.4.4.19-5-16.js");
        }

        [Test(Description = "Array.prototype.map - the JSON object can be used as thisArg")]
        public void _15_4_4_19_5_17()
        {
            RunFile("15.4.4.19-5-17.js");
        }

        [Test(Description = "Array.prototype.map - Error object can be used as thisArg")]
        public void _15_4_4_19_5_18()
        {
            RunFile("15.4.4.19-5-18.js");
        }

        [Test(Description = "Array.prototype.map - the Arguments object can be used as thisArg")]
        public void _15_4_4_19_5_19()
        {
            RunFile("15.4.4.19-5-19.js");
        }

        [Test(Description = "Array.prototype.map - thisArg is Object")]
        public void _15_4_4_19_5_2()
        {
            RunFile("15.4.4.19-5-2.js");
        }

        [Test(Description = "Array.prototype.map - the global object can be used as thisArg")]
        public void _15_4_4_19_5_21()
        {
            RunFile("15.4.4.19-5-21.js");
        }

        [Test(Description = "Array.prototype.map - boolean primitive can be used as thisArg")]
        public void _15_4_4_19_5_22()
        {
            RunFile("15.4.4.19-5-22.js");
        }

        [Test(Description = "Array.prototype.map - number primitive can be used as thisArg")]
        public void _15_4_4_19_5_23()
        {
            RunFile("15.4.4.19-5-23.js");
        }

        [Test(Description = "Array.prototype.map - string primitive can be used as thisArg")]
        public void _15_4_4_19_5_24()
        {
            RunFile("15.4.4.19-5-24.js");
        }

        [Test(Description = "Array.prototype.map - thisArg is Array")]
        public void _15_4_4_19_5_3()
        {
            RunFile("15.4.4.19-5-3.js");
        }

        [Test(Description = "Array.prototype.map - thisArg is object from object template(prototype)")]
        public void _15_4_4_19_5_4()
        {
            RunFile("15.4.4.19-5-4.js");
        }

        [Test(Description = "Array.prototype.map - thisArg is object from object template")]
        public void _15_4_4_19_5_5()
        {
            RunFile("15.4.4.19-5-5.js");
        }

        [Test(Description = "Array.prototype.map - thisArg is function")]
        public void _15_4_4_19_5_6()
        {
            RunFile("15.4.4.19-5-6.js");
        }

        [Test(Description = "Array.prototype.map - built-in functions can be used as thisArg")]
        public void _15_4_4_19_5_7()
        {
            RunFile("15.4.4.19-5-7.js");
        }

        [Test(Description = "Array.prototype.map - Function object can be used as thisArg")]
        public void _15_4_4_19_5_9()
        {
            RunFile("15.4.4.19-5-9.js");
        }

        [Test(Description = "Array.prototype.map - Array.isArray returns true when input argument is the ourput array")]
        public void _15_4_4_19_6_1()
        {
            RunFile("15.4.4.19-6-1.js");
        }

        [Test(Description = "Array.prototype.map - the returned array is instanceof Array")]
        public void _15_4_4_19_6_2()
        {
            RunFile("15.4.4.19-6-2.js");
        }

        [Test(Description = "Array.prototype.map doesn't consider new elements added to array after it is called")]
        public void _15_4_4_19_8_1()
        {
            RunFile("15.4.4.19-8-1.js");
        }

        [Test(Description = "Array.prototype.map considers new value of elements in array after it is called")]
        public void _15_4_4_19_8_2()
        {
            RunFile("15.4.4.19-8-2.js");
        }

        [Test(Description = "Array.prototype.map doesn't visit deleted elements in array after the call")]
        public void _15_4_4_19_8_3()
        {
            RunFile("15.4.4.19-8-3.js");
        }

        [Test(Description = "Array.prototype.map doesn't visit deleted elements when Array.length is decreased")]
        public void _15_4_4_19_8_4()
        {
            RunFile("15.4.4.19-8-4.js");
        }

        [Test(Description = "Array.prototype.map doesn't consider newly added elements in sparse array")]
        public void _15_4_4_19_8_5()
        {
            RunFile("15.4.4.19-8-5.js");
        }

        [Test(Description = "Array.prototype.map visits deleted element in array after the call when same index is also present in prototype")]
        public void _15_4_4_19_8_6()
        {
            RunFile("15.4.4.19-8-6.js");
        }

        [Test(Description = "Array.prototype.map successful to delete the object in callbackfn")]
        public void _15_4_4_19_8_7()
        {
            RunFile("15.4.4.19-8-7.js");
        }

        [Test(Description = "Array.prototype.map - no observable effects occur if length is 0 on an Array-like object")]
        public void _15_4_4_19_8_8()
        {
            RunFile("15.4.4.19-8-8.js");
        }

        [Test(Description = "Array.prototype.map - modifications to length don't change number of iterations on an Array")]
        public void _15_4_4_19_8_9()
        {
            RunFile("15.4.4.19-8-9.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn not called for indexes never been assigned values")]
        public void _15_4_4_19_8_b_1()
        {
            RunFile("15.4.4.19-8-b-1.js");
        }

        [Test(Description = "Array.prototype.map - deleting property of prototype causes prototype index property not to be visited on an Array-like Object")]
        public void _15_4_4_19_8_b_10()
        {
            RunFile("15.4.4.19-8-b-10.js");
        }

        [Test(Description = "Array.prototype.map - deleting property of prototype causes prototype index property not to be visited on an Array")]
        public void _15_4_4_19_8_b_11()
        {
            RunFile("15.4.4.19-8-b-11.js");
        }

        [Test(Description = "Array.prototype.map - deleting own property with prototype property causes prototype index property to be visited on an Array-like object")]
        public void _15_4_4_19_8_b_12()
        {
            RunFile("15.4.4.19-8-b-12.js");
        }

        [Test(Description = "Array.prototype.map - deleting own property with prototype property causes prototype index property to be visited on an Array")]
        public void _15_4_4_19_8_b_13()
        {
            RunFile("15.4.4.19-8-b-13.js");
        }

        [Test(Description = "Array.prototype.map - decreasing length of array causes index property not to be visited")]
        public void _15_4_4_19_8_b_14()
        {
            RunFile("15.4.4.19-8-b-14.js");
        }

        [Test(Description = "Array.prototype.map - decreasing length of array with prototype property causes prototype index property to be visited")]
        public void _15_4_4_19_8_b_15()
        {
            RunFile("15.4.4.19-8-b-15.js");
        }

        [Test(Description = "Array.prototype.map - decreasing length of array does not delete non-configurable properties")]
        public void _15_4_4_19_8_b_16()
        {
            RunFile("15.4.4.19-8-b-16.js");
        }

        [Test(Description = "Array.prototype.map - added properties in step 2 are visible here")]
        public void _15_4_4_19_8_b_2()
        {
            RunFile("15.4.4.19-8-b-2.js");
        }

        [Test(Description = "Array.prototype.map - deleted properties in step 2 are visible here")]
        public void _15_4_4_19_8_b_3()
        {
            RunFile("15.4.4.19-8-b-3.js");
        }

        [Test(Description = "Array.prototype.map - properties added into own object after current position are visited on an Array-like object")]
        public void _15_4_4_19_8_b_4()
        {
            RunFile("15.4.4.19-8-b-4.js");
        }

        [Test(Description = "Array.prototype.map - properties added into own object after current position are visited on an Array")]
        public void _15_4_4_19_8_b_5()
        {
            RunFile("15.4.4.19-8-b-5.js");
        }

        [Test(Description = "Array.prototype.map - properties can be added to prototype after current position are visited on an Array-like object")]
        public void _15_4_4_19_8_b_6()
        {
            RunFile("15.4.4.19-8-b-6.js");
        }

        [Test(Description = "Array.prototype.map - properties can be added to prototype after current position are visited on an Array")]
        public void _15_4_4_19_8_b_7()
        {
            RunFile("15.4.4.19-8-b-7.js");
        }

        [Test(Description = "Array.prototype.map - deleting own property causes index property not to be visited on an Array-like object")]
        public void _15_4_4_19_8_b_8()
        {
            RunFile("15.4.4.19-8-b-8.js");
        }

        [Test(Description = "Array.prototype.map - deleting own property causes index property not to be visited on an Array")]
        public void _15_4_4_19_8_b_9()
        {
            RunFile("15.4.4.19-8-b-9.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property on an Array-like object")]
        public void _15_4_4_19_8_c_i_1()
        {
            RunFile("15.4.4.19-8-c-i-1.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property on an Array")]
        public void _15_4_4_19_8_c_i_10()
        {
            RunFile("15.4.4.19-8-c-i-10.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited data property on an Array-like object")]
        public void _15_4_4_19_8_c_i_11()
        {
            RunFile("15.4.4.19-8-c-i-11.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited data property on an Array")]
        public void _15_4_4_19_8_c_i_12()
        {
            RunFile("15.4.4.19-8-c-i-12.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array-like object")]
        public void _15_4_4_19_8_c_i_13()
        {
            RunFile("15.4.4.19-8-c-i-13.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array")]
        public void _15_4_4_19_8_c_i_14()
        {
            RunFile("15.4.4.19-8-c-i-14.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property on an Array-like object")]
        public void _15_4_4_19_8_c_i_15()
        {
            RunFile("15.4.4.19-8-c-i-15.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property on an Array")]
        public void _15_4_4_19_8_c_i_16()
        {
            RunFile("15.4.4.19-8-c-i-16.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function on an Array-like object")]
        public void _15_4_4_19_8_c_i_17()
        {
            RunFile("15.4.4.19-8-c-i-17.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function on an Array")]
        public void _15_4_4_19_8_c_i_18()
        {
            RunFile("15.4.4.19-8-c-i-18.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array")]
        public void _15_4_4_19_8_c_i_19()
        {
            RunFile("15.4.4.19-8-c-i-19.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property on an Array")]
        public void _15_4_4_19_8_c_i_2()
        {
            RunFile("15.4.4.19-8-c-i-2.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array-like object")]
        public void _15_4_4_19_8_c_i_20()
        {
            RunFile("15.4.4.19-8-c-i-20.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property without a get function on an Array-like object")]
        public void _15_4_4_19_8_c_i_21()
        {
            RunFile("15.4.4.19-8-c-i-21.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property without a get function on an Array")]
        public void _15_4_4_19_8_c_i_22()
        {
            RunFile("15.4.4.19-8-c-i-22.js");
        }

        [Test(Description = "Array.prototype.map - This object is the global object which contains index property")]
        public void _15_4_4_19_8_c_i_23()
        {
            RunFile("15.4.4.19-8-c-i-23.js");
        }

        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments is less than number of parameters)")]
        public void _15_4_4_19_8_c_i_25()
        {
            RunFile("15.4.4.19-8-c-i-25.js");
        }

        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments equals number of parameters)")]
        public void _15_4_4_19_8_c_i_26()
        {
            RunFile("15.4.4.19-8-c-i-26.js");
        }

        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments is greater than number of parameters)")]
        public void _15_4_4_19_8_c_i_27()
        {
            RunFile("15.4.4.19-8-c-i-27.js");
        }

        [Test(Description = "Array.prototype.map - element changed by getter on previous iterations is observed on an Array")]
        public void _15_4_4_19_8_c_i_28()
        {
            RunFile("15.4.4.19-8-c-i-28.js");
        }

        [Test(Description = "Array.prototype.map - element changed by getter on previous iterations is observed on an Array-like object")]
        public void _15_4_4_19_8_c_i_29()
        {
            RunFile("15.4.4.19-8-c-i-29.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited data property on an Array-like object")]
        public void _15_4_4_19_8_c_i_3()
        {
            RunFile("15.4.4.19-8-c-i-3.js");
        }

        [Test(Description = "Array.prototype.map - unhandled exceptions happened in getter terminate iteration on an Array-like object")]
        public void _15_4_4_19_8_c_i_30()
        {
            RunFile("15.4.4.19-8-c-i-30.js");
        }

        [Test(Description = "Array.prototype.map - unhandled exceptions happened in getter terminate iteration on an Array")]
        public void _15_4_4_19_8_c_i_31()
        {
            RunFile("15.4.4.19-8-c-i-31.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited data property on an Array")]
        public void _15_4_4_19_8_c_i_4()
        {
            RunFile("15.4.4.19-8-c-i-4.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited accessor property on an Array-like object")]
        public void _15_4_4_19_8_c_i_5()
        {
            RunFile("15.4.4.19-8-c-i-5.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited accessor property on an Array")]
        public void _15_4_4_19_8_c_i_6()
        {
            RunFile("15.4.4.19-8-c-i-6.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited data property on an Array-like object")]
        public void _15_4_4_19_8_c_i_7()
        {
            RunFile("15.4.4.19-8-c-i-7.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is inherited data property on an Array")]
        public void _15_4_4_19_8_c_i_8()
        {
            RunFile("15.4.4.19-8-c-i-8.js");
        }

        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property on an Array-like object")]
        public void _15_4_4_19_8_c_i_9()
        {
            RunFile("15.4.4.19-8-c-i-9.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters")]
        public void _15_4_4_19_8_c_ii_1()
        {
            RunFile("15.4.4.19-8-c-ii-1.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn is called with 1 formal parameter")]
        public void _15_4_4_19_8_c_ii_10()
        {
            RunFile("15.4.4.19-8-c-ii-10.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn is called with 2 formal parameters")]
        public void _15_4_4_19_8_c_ii_11()
        {
            RunFile("15.4.4.19-8-c-ii-11.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn is called with 3 formal parameters")]
        public void _15_4_4_19_8_c_ii_12()
        {
            RunFile("15.4.4.19-8-c-ii-12.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn that uses arguments object to get parameter value")]
        public void _15_4_4_19_8_c_ii_13()
        {
            RunFile("15.4.4.19-8-c-ii-13.js");
        }

        [Test(Description = "Array.prototype.map - 'this' object when T is not an object (T is a boolean primitive)")]
        public void _15_4_4_19_8_c_ii_16()
        {
            RunFile("15.4.4.19-8-c-ii-16.js");
        }

        [Test(Description = "Array.prototype.map - 'this' object when T is not an object (T is a number)")]
        public void _15_4_4_19_8_c_ii_17()
        {
            RunFile("15.4.4.19-8-c-ii-17.js");
        }

        [Test(Description = "Array.prototype.map - 'this' object when T is not an object (T is a string primitive)")]
        public void _15_4_4_19_8_c_ii_18()
        {
            RunFile("15.4.4.19-8-c-ii-18.js");
        }

        [Test(Description = "Array.prototype.map - non-indexed properties are not called.")]
        public void _15_4_4_19_8_c_ii_19()
        {
            RunFile("15.4.4.19-8-c-ii-19.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn takes 3 arguments")]
        public void _15_4_4_19_8_c_ii_2()
        {
            RunFile("15.4.4.19-8-c-ii-2.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (thisArg is correct)")]
        public void _15_4_4_19_8_c_ii_20()
        {
            RunFile("15.4.4.19-8-c-ii-20.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (kValue is correct)")]
        public void _15_4_4_19_8_c_ii_21()
        {
            RunFile("15.4.4.19-8-c-ii-21.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (the index k is correct)")]
        public void _15_4_4_19_8_c_ii_22()
        {
            RunFile("15.4.4.19-8-c-ii-22.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (this object O is correct)")]
        public void _15_4_4_19_8_c_ii_23()
        {
            RunFile("15.4.4.19-8-c-ii-23.js");
        }

        [Test(Description = "Array.prototype.map - k values are passed in acending numeric order")]
        public void _15_4_4_19_8_c_ii_4()
        {
            RunFile("15.4.4.19-8-c-ii-4.js");
        }

        [Test(Description = "Array.prototype.map - k values are accessed during each iteration and not prior to starting the loop.")]
        public void _15_4_4_19_8_c_ii_5()
        {
            RunFile("15.4.4.19-8-c-ii-5.js");
        }

        [Test(Description = "Array.prototype.map - arguments to callbackfn are self consistent.")]
        public void _15_4_4_19_8_c_ii_6()
        {
            RunFile("15.4.4.19-8-c-ii-6.js");
        }

        [Test(Description = "Array.prototype.map - unhandled exceptions happened in callbackfn terminate iteration")]
        public void _15_4_4_19_8_c_ii_7()
        {
            RunFile("15.4.4.19-8-c-ii-7.js");
        }

        [Test(Description = "Array.prototype.map - element changed by callbackfn on previous iterations is observed")]
        public void _15_4_4_19_8_c_ii_8()
        {
            RunFile("15.4.4.19-8-c-ii-8.js");
        }

        [Test(Description = "Array.prototype.map - callbackfn with 0 formal parameter")]
        public void _15_4_4_19_8_c_ii_9()
        {
            RunFile("15.4.4.19-8-c-ii-9.js");
        }

        [Test(Description = "Array.prototype.map - getOwnPropertyDescriptor(all true) of returned array element")]
        public void _15_4_4_19_8_c_iii_1()
        {
            RunFile("15.4.4.19-8-c-iii-1.js");
        }

        [Test(Description = "Array.prototype.map - value of returned array element equals to 'mappedValue'")]
        public void _15_4_4_19_8_c_iii_2()
        {
            RunFile("15.4.4.19-8-c-iii-2.js");
        }

        [Test(Description = "Array.prototype.map - value of returned array element can be overwritten")]
        public void _15_4_4_19_8_c_iii_3()
        {
            RunFile("15.4.4.19-8-c-iii-3.js");
        }

        [Test(Description = "Array.prototype.map - value of returned array element can be enumerated")]
        public void _15_4_4_19_8_c_iii_4()
        {
            RunFile("15.4.4.19-8-c-iii-4.js");
        }

        [Test(Description = "Array.prototype.map - value of returned array element can be changed or deleted")]
        public void _15_4_4_19_8_c_iii_5()
        {
            RunFile("15.4.4.19-8-c-iii-5.js");
        }

        [Test(Description = "Array.prototype.map doesn't mutate the Array on which it is called on")]
        public void _15_4_4_19_9_1()
        {
            RunFile("15.4.4.19-9-1.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (subclassed Array, length overridden with obj with valueOf)")]
        public void _15_4_4_19_9_10()
        {
            RunFile("15.4.4.19-9-10.js");
        }

        [Test(Description = "Array.prototype.map - returns an empty array if 'length' is 0 (subclassed Array, length overridden with obj w/o valueOf (toString))")]
        public void _15_4_4_19_9_11()
        {
            RunFile("15.4.4.19-9-11.js");
        }

        [Test(Description = "Array.prototype.map - returns an empty array if 'length' is 0 (subclassed Array, length overridden with [])")]
        public void _15_4_4_19_9_12()
        {
            RunFile("15.4.4.19-9-12.js");
        }

        [Test(Description = "Array.prototype.map - if there are no side effects of the functions, O is unmodified")]
        public void _15_4_4_19_9_13()
        {
            RunFile("15.4.4.19-9-13.js");
        }

        [Test(Description = "Array.prototype.map returns new Array with same number of elements and values the result of callbackfn")]
        public void _15_4_4_19_9_2()
        {
            RunFile("15.4.4.19-9-2.js");
        }

        [Test(Description = "Array.prototype.map - subclassed array when length is reduced")]
        public void _15_4_4_19_9_3()
        {
            RunFile("15.4.4.19-9-3.js");
        }

        [Test(Description = "Array.prototype.map doesn't visit expandos")]
        public void _15_4_4_19_9_4()
        {
            RunFile("15.4.4.19-9-4.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (empty array)")]
        public void _15_4_4_19_9_5()
        {
            RunFile("15.4.4.19-9-5.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (subclassed Array, length overridden to null (type conversion))")]
        public void _15_4_4_19_9_6()
        {
            RunFile("15.4.4.19-9-6.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (subclassed Array, length overridden to false (type conversion))")]
        public void _15_4_4_19_9_7()
        {
            RunFile("15.4.4.19-9-7.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (subclassed Array, length overridden to 0 (type conversion))")]
        public void _15_4_4_19_9_8()
        {
            RunFile("15.4.4.19-9-8.js");
        }

        [Test(Description = "Array.prototype.map - empty array to be returned if 'length' is 0 (subclassed Array, length overridden to '0' (type conversion))")]
        public void _15_4_4_19_9_9()
        {
            RunFile("15.4.4.19-9-9.js");
        }
    }
}
