//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_4._15_4_4
{
    [TestFixture]
    public class _15_4_4_12Fixture : Test262Fixture
    {
        public _15_4_4_12Fixture()
            : base("ch15\\15.4\\15.4.4\\15.4.4.12")
        {
        }

        [Test(Description = "Array.prototype.splice - 'from' is the result of ToString(actualStart+k) in an Array")]
        public void _15_4_4_12_9_a_1()
        {
            RunFile("15.4.4.12-9-a-1.js");
        }

        [Test(Description = "Array.prototype.splice will splice an array even when Array.prototype has index '0' set to read-only and 'fromPresent' less than 'actualDeleteCount (Step 9.c.ii)")]
        public void _15_4_4_12_9_c_ii_1()
        {
            RunFile("15.4.4.12-9-c-ii-1.js");
        }

        [Test(Description = "length > deleteCount > start = 0, itemCount = 0")]
        public void S15_4_4_12_A1_1_T1()
        {
            RunFile("S15.4.4.12_A1.1_T1.js");
        }

        [Test(Description = "length > deleteCount > start = 0, itemCount > 0")]
        public void S15_4_4_12_A1_1_T2()
        {
            RunFile("S15.4.4.12_A1.1_T2.js");
        }

        [Test(Description = "length = deleteCount > start = 0")]
        public void S15_4_4_12_A1_1_T3()
        {
            RunFile("S15.4.4.12_A1.1_T3.js");
        }

        [Test(Description = "length > deleteCount > start > 0, itemCount > 0")]
        public void S15_4_4_12_A1_1_T4()
        {
            RunFile("S15.4.4.12_A1.1_T4.js");
        }

        [Test(Description = "deleteCount > length > start = 0, itemCount = 0")]
        public void S15_4_4_12_A1_1_T5()
        {
            RunFile("S15.4.4.12_A1.1_T5.js");
        }

        [Test(Description = "length = deleteCount > start > 0, itemCount > 0")]
        public void S15_4_4_12_A1_1_T6()
        {
            RunFile("S15.4.4.12_A1.1_T6.js");
        }

        [Test(Description = "-length = start < deleteCount < 0, itemCount = 0")]
        public void S15_4_4_12_A1_2_T1()
        {
            RunFile("S15.4.4.12_A1.2_T1.js");
        }

        [Test(Description = "-length < start = deleteCount < 0, itemCount = 0")]
        public void S15_4_4_12_A1_2_T2()
        {
            RunFile("S15.4.4.12_A1.2_T2.js");
        }

        [Test(Description = "-length = start < deleteCount < 0, itemCount > 0")]
        public void S15_4_4_12_A1_2_T3()
        {
            RunFile("S15.4.4.12_A1.2_T3.js");
        }

        [Test(Description = "-length < start = deleteCount < 0, itemCount > 0")]
        public void S15_4_4_12_A1_2_T4()
        {
            RunFile("S15.4.4.12_A1.2_T4.js");
        }

        [Test(Description = "start < -length < deleteCount < 0, itemCount > 0")]
        public void S15_4_4_12_A1_2_T5()
        {
            RunFile("S15.4.4.12_A1.2_T5.js");
        }

        [Test(Description = "-length < deleteCount < start = 0, itemCount = 0")]
        public void S15_4_4_12_A1_3_T1()
        {
            RunFile("S15.4.4.12_A1.3_T1.js");
        }

        [Test(Description = "-length = -start < deleteCount < 0, itemCount = 0")]
        public void S15_4_4_12_A1_3_T2()
        {
            RunFile("S15.4.4.12_A1.3_T2.js");
        }

        [Test(Description = "-length < deleteCount < start = 0, itemCount > 0")]
        public void S15_4_4_12_A1_3_T3()
        {
            RunFile("S15.4.4.12_A1.3_T3.js");
        }

        [Test(Description = "-length = -start < deleteCount < 0, itemCount > 0")]
        public void S15_4_4_12_A1_3_T4()
        {
            RunFile("S15.4.4.12_A1.3_T4.js");
        }

        [Test(Description = "-start < -length < deleteCount < 0, itemCount > 0")]
        public void S15_4_4_12_A1_3_T5()
        {
            RunFile("S15.4.4.12_A1.3_T5.js");
        }

        [Test(Description = "length = -start > deleteCount > 0, itemCount = 0")]
        public void S15_4_4_12_A1_4_T1()
        {
            RunFile("S15.4.4.12_A1.4_T1.js");
        }

        [Test(Description = "length = -start > deleteCount > 0, itemCount > 0")]
        public void S15_4_4_12_A1_4_T2()
        {
            RunFile("S15.4.4.12_A1.4_T2.js");
        }

        [Test(Description = "-start > length = deleteCount > 0, itemCount = 0")]
        public void S15_4_4_12_A1_4_T3()
        {
            RunFile("S15.4.4.12_A1.4_T3.js");
        }

        [Test(Description = "length > -start = deleteCount > 0, itemCount > 0")]
        public void S15_4_4_12_A1_4_T4()
        {
            RunFile("S15.4.4.12_A1.4_T4.js");
        }

        [Test(Description = "-start > deleteCount > length > 0, itemCount = 0")]
        public void S15_4_4_12_A1_4_T5()
        {
            RunFile("S15.4.4.12_A1.4_T5.js");
        }

        [Test(Description = "length = deleteCount > -start > 0, itemCount > 0")]
        public void S15_4_4_12_A1_4_T6()
        {
            RunFile("S15.4.4.12_A1.4_T6.js");
        }

        [Test(Description = "start === undefined, end === undefined")]
        public void S15_4_4_12_A1_5_T1()
        {
            RunFile("S15.4.4.12_A1.5_T1.js");
        }

        [Test(Description = "end === undefined")]
        public void S15_4_4_12_A1_5_T2()
        {
            RunFile("S15.4.4.12_A1.5_T2.js");
        }

        [Test(Description = "start is not integer")]
        public void S15_4_4_12_A2_1_T1()
        {
            RunFile("S15.4.4.12_A2.1_T1.js");
        }

        [Test(Description = "start = NaN")]
        public void S15_4_4_12_A2_1_T2()
        {
            RunFile("S15.4.4.12_A2.1_T2.js");
        }

        [Test(Description = "start = Infinity")]
        public void S15_4_4_12_A2_1_T3()
        {
            RunFile("S15.4.4.12_A2.1_T3.js");
        }

        [Test(Description = "start = -Infinity")]
        public void S15_4_4_12_A2_1_T4()
        {
            RunFile("S15.4.4.12_A2.1_T4.js");
        }

        [Test(Description = "ToInteger use ToNumber")]
        public void S15_4_4_12_A2_1_T5()
        {
            RunFile("S15.4.4.12_A2.1_T5.js");
        }

        [Test(Description = "deleteCount is not integer")]
        public void S15_4_4_12_A2_2_T1()
        {
            RunFile("S15.4.4.12_A2.2_T1.js");
        }

        [Test(Description = "deleteCount = NaN")]
        public void S15_4_4_12_A2_2_T2()
        {
            RunFile("S15.4.4.12_A2.2_T2.js");
        }

        [Test(Description = "deleteCount = Infinity")]
        public void S15_4_4_12_A2_2_T3()
        {
            RunFile("S15.4.4.12_A2.2_T3.js");
        }

        [Test(Description = "deleteCount = -Infinity")]
        public void S15_4_4_12_A2_2_T4()
        {
            RunFile("S15.4.4.12_A2.2_T4.js");
        }

        [Test(Description = "ToInteger use ToNumber")]
        public void S15_4_4_12_A2_2_T5()
        {
            RunFile("S15.4.4.12_A2.2_T5.js");
        }

        [Test(Description = "If start is positive, use min(start, length).")]
        public void S15_4_4_12_A2_T1()
        {
            RunFile("S15.4.4.12_A2_T1.js");
        }

        [Test(Description = "If start is negative, use max(start + length, 0).")]
        public void S15_4_4_12_A2_T2()
        {
            RunFile("S15.4.4.12_A2_T2.js");
        }

        [Test(Description = "If start is positive, use min(start, length).")]
        public void S15_4_4_12_A2_T3()
        {
            RunFile("S15.4.4.12_A2_T3.js");
        }

        [Test(Description = "If start is negative, use max(start + length, 0).")]
        public void S15_4_4_12_A2_T4()
        {
            RunFile("S15.4.4.12_A2_T4.js");
        }

        [Test(Description = "length is arbitrarily")]
        public void S15_4_4_12_A3_T1()
        {
            RunFile("S15.4.4.12_A3_T1.js");
        }

        [Test(Description = "length is arbitrarily")]
        public void S15_4_4_12_A3_T2()
        {
            RunFile("S15.4.4.12_A3_T2.js");
        }

        [Test(Description = "length is arbitrarily")]
        public void S15_4_4_12_A3_T3()
        {
            RunFile("S15.4.4.12_A3_T3.js");
        }

        [Test(Description = "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype")]
        public void S15_4_4_12_A4_T1()
        {
            RunFile("S15.4.4.12_A4_T1.js");
        }

        [Test(Description = "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype")]
        public void S15_4_4_12_A4_T2()
        {
            RunFile("S15.4.4.12_A4_T2.js");
        }

        [Test(Description = "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype")]
        public void S15_4_4_12_A4_T3()
        {
            RunFile("S15.4.4.12_A4_T3.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_12_A5_1()
        {
            RunFile("S15.4.4.12_A5.1.js");
        }

        [Test(Description = "Checking use hasOwnProperty, delete")]
        public void S15_4_4_12_A5_2()
        {
            RunFile("S15.4.4.12_A5.2.js");
        }

        [Test(Description = "Checking if varying the length property fails")]
        public void S15_4_4_12_A5_3()
        {
            RunFile("S15.4.4.12_A5.3.js");
        }

        [Test(Description = "splice.length === 1")]
        public void S15_4_4_12_A5_4()
        {
            RunFile("S15.4.4.12_A5.4.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_12_A5_5()
        {
            RunFile("S15.4.4.12_A5.5.js");
        }

        [Test(Description = "Checking Array.prototype.splice.prototype")]
        public void S15_4_4_12_A5_6()
        {
            RunFile("S15.4.4.12_A5.6.js");
        }

        [Test(Description = "If property does not implement the internal [[Construct]] method, throw a TypeError exception")]
        public void S15_4_4_12_A5_7()
        {
            RunFile("S15.4.4.12_A5.7.js");
        }
    }
}
