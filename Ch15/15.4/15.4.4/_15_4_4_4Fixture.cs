//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_4._15_4_4
{
    [TestFixture]
    public class _15_4_4_4Fixture : Test262Fixture
    {
        public _15_4_4_4Fixture()
            : base("ch15\\15.4\\15.4.4\\15.4.4.4")
        {
        }

        [Test(Description = "Array.prototype.concat will concat an Array when index property (read-only) exists in Array.prototype (Step 5.b.iii.3.b)")]
        public void _15_4_4_4_5_b_iii_3_b_1()
        {
            RunFile("15.4.4.4-5-b-iii-3-b-1.js");
        }

        [Test(Description = "Array.prototype.concat will concat an Array when index property (read-only) exists in Array.prototype (Step 5.c.i)")]
        public void _15_4_4_4_5_c_i_1()
        {
            RunFile("15.4.4.4-5-c-i-1.js");
        }

        [Test(Description = "Checking this algorithm, items are Array object")]
        public void S15_4_4_4_A1_T1()
        {
            RunFile("S15.4.4.4_A1_T1.js");
        }

        [Test(Description = "Checking this algorithm, items are objects and primitives")]
        public void S15_4_4_4_A1_T2()
        {
            RunFile("S15.4.4.4_A1_T2.js");
        }

        [Test(Description = "Checking this algorithm with no items")]
        public void S15_4_4_4_A1_T3()
        {
            RunFile("S15.4.4.4_A1_T3.js");
        }

        [Test(Description = "Checking this algorithm, items are [], [,]")]
        public void S15_4_4_4_A1_T4()
        {
            RunFile("S15.4.4.4_A1_T4.js");
        }

        [Test(Description = "Checking this for Object object, items are objects and primitives")]
        public void S15_4_4_4_A2_T1()
        {
            RunFile("S15.4.4.4_A2_T1.js");
        }

        [Test(Description = "Checking this for Object object with no items")]
        public void S15_4_4_4_A2_T2()
        {
            RunFile("S15.4.4.4_A2_T2.js");
        }

        [Test(Description = "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype")]
        public void S15_4_4_4_A3_T1()
        {
            RunFile("S15.4.4.4_A3_T1.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_4_A4_1()
        {
            RunFile("S15.4.4.4_A4.1.js");
        }

        [Test(Description = "Checking use hasOwnProperty, delete")]
        public void S15_4_4_4_A4_2()
        {
            RunFile("S15.4.4.4_A4.2.js");
        }

        [Test(Description = "Checking if varying the length property fails")]
        public void S15_4_4_4_A4_3()
        {
            RunFile("S15.4.4.4_A4.3.js");
        }

        [Test(Description = "concat.length === 1")]
        public void S15_4_4_4_A4_4()
        {
            RunFile("S15.4.4.4_A4.4.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_4_4_4_A4_5()
        {
            RunFile("S15.4.4.4_A4.5.js");
        }

        [Test(Description = "Checking Array.prototype.concat.prototype")]
        public void S15_4_4_4_A4_6()
        {
            RunFile("S15.4.4.4_A4.6.js");
        }

        [Test(Description = "If property does not implement the internal [[Construct]] method, throw a TypeError exception")]
        public void S15_4_4_4_A4_7()
        {
            RunFile("S15.4.4.4_A4.7.js");
        }
    }
}
