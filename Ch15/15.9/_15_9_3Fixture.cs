//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_9
{
    [TestFixture]
    public class _15_9_3Fixture : Test262Fixture
    {
        public _15_9_3Fixture()
            : base("ch15\\15.9\\15.9.3")
        {
        }

        [Test(Description = "2 arguments, (year, month)")]
        public void S15_9_3_1_A1_T1()
        {
            RunFile("S15.9.3.1_A1_T1.js");
        }

        [Test(Description = "3 arguments, (year, month, date)")]
        public void S15_9_3_1_A1_T2()
        {
            RunFile("S15.9.3.1_A1_T2.js");
        }

        [Test(Description = "4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A1_T3()
        {
            RunFile("S15.9.3.1_A1_T3.js");
        }

        [Test(Description = "5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A1_T4()
        {
            RunFile("S15.9.3.1_A1_T4.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A1_T5()
        {
            RunFile("S15.9.3.1_A1_T5.js");
        }

        [Test(Description = "7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A1_T6()
        {
            RunFile("S15.9.3.1_A1_T6.js");
        }

        [Test(Description = "2 arguments, (year, month)")]
        public void S15_9_3_1_A2_T1()
        {
            RunFile("S15.9.3.1_A2_T1.js");
        }

        [Test(Description = "3 arguments, (year, month, date)")]
        public void S15_9_3_1_A2_T2()
        {
            RunFile("S15.9.3.1_A2_T2.js");
        }

        [Test(Description = "4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A2_T3()
        {
            RunFile("S15.9.3.1_A2_T3.js");
        }

        [Test(Description = "5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A2_T4()
        {
            RunFile("S15.9.3.1_A2_T4.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A2_T5()
        {
            RunFile("S15.9.3.1_A2_T5.js");
        }

        [Test(Description = "7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A2_T6()
        {
            RunFile("S15.9.3.1_A2_T6.js");
        }

        [Test(Description = "Test based on delete prototype.toString - 2 arguments, (year, month)")]
        public void S15_9_3_1_A3_T1_1()
        {
            RunFile("S15.9.3.1_A3_T1.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 2 arguments, (year, month)")]
        public void S15_9_3_1_A3_T1_2()
        {
            RunFile("S15.9.3.1_A3_T1.2.js");
        }

        [Test(Description = "Test based on delete prototype.toString - 3 arguments, (year, month, date)")]
        public void S15_9_3_1_A3_T2_1()
        {
            RunFile("S15.9.3.1_A3_T2.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 3 arguments, (year, month, date)")]
        public void S15_9_3_1_A3_T2_2()
        {
            RunFile("S15.9.3.1_A3_T2.2.js");
        }

        [Test(Description = "Test based on delete prototype.toString - 4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A3_T3_1()
        {
            RunFile("S15.9.3.1_A3_T3.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A3_T3_2()
        {
            RunFile("S15.9.3.1_A3_T3.2.js");
        }

        [Test(Description = "Test based on delete prototype.toString - 5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A3_T4_1()
        {
            RunFile("S15.9.3.1_A3_T4.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A3_T4_2()
        {
            RunFile("S15.9.3.1_A3_T4.2.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A3_T5_1()
        {
            RunFile("S15.9.3.1_A3_T5.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A3_T5_2()
        {
            RunFile("S15.9.3.1_A3_T5.2.js");
        }

        [Test(Description = "7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A3_T6_1()
        {
            RunFile("S15.9.3.1_A3_T6.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString - 7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A3_T6_2()
        {
            RunFile("S15.9.3.1_A3_T6.2.js");
        }

        [Test(Description = "2 arguments, (year, month)")]
        public void S15_9_3_1_A4_T1()
        {
            RunFile("S15.9.3.1_A4_T1.js");
        }

        [Test(Description = "3 arguments, (year, month, date)")]
        public void S15_9_3_1_A4_T2()
        {
            RunFile("S15.9.3.1_A4_T2.js");
        }

        [Test(Description = "4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A4_T3()
        {
            RunFile("S15.9.3.1_A4_T3.js");
        }

        [Test(Description = "5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A4_T4()
        {
            RunFile("S15.9.3.1_A4_T4.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A4_T5()
        {
            RunFile("S15.9.3.1_A4_T5.js");
        }

        [Test(Description = "7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A4_T6()
        {
            RunFile("S15.9.3.1_A4_T6.js");
        }

        [Test(Description = "2 arguments, (year, month)")]
        public void S15_9_3_1_A5_T1()
        {
            RunFile("S15.9.3.1_A5_T1.js");
        }

        [Test(Description = "3 arguments, (year, month, date)")]
        public void S15_9_3_1_A5_T2()
        {
            RunFile("S15.9.3.1_A5_T2.js");
        }

        [Test(Description = "4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A5_T3()
        {
            RunFile("S15.9.3.1_A5_T3.js");
        }

        [Test(Description = "5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A5_T4()
        {
            RunFile("S15.9.3.1_A5_T4.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A5_T5()
        {
            RunFile("S15.9.3.1_A5_T5.js");
        }

        [Test(Description = "7 arguments, (year, month, date, hours, minutes, seconds, ms)")]
        public void S15_9_3_1_A5_T6()
        {
            RunFile("S15.9.3.1_A5_T6.js");
        }

        [Test(Description = "2 arguments, (year, month)")]
        public void S15_9_3_1_A6_T1()
        {
            RunFile("S15.9.3.1_A6_T1.js");
        }

        [Test(Description = "3 arguments, (year, month, date)")]
        public void S15_9_3_1_A6_T2()
        {
            RunFile("S15.9.3.1_A6_T2.js");
        }

        [Test(Description = "4 arguments, (year, month, date, hours)")]
        public void S15_9_3_1_A6_T3()
        {
            RunFile("S15.9.3.1_A6_T3.js");
        }

        [Test(Description = "5 arguments, (year, month, date, hours, minutes)")]
        public void S15_9_3_1_A6_T4()
        {
            RunFile("S15.9.3.1_A6_T4.js");
        }

        [Test(Description = "6 arguments, (year, month, date, hours, minutes, seconds)")]
        public void S15_9_3_1_A6_T5()
        {
            RunFile("S15.9.3.1_A6_T5.js");
        }

        [Test(Description = "Checking types of newly created objects and it values")]
        public void S15_9_3_2_A1_T1()
        {
            RunFile("S15.9.3.2_A1_T1.js");
        }

        [Test(Description = "Checking Date.prototype property of newly constructed objects")]
        public void S15_9_3_2_A2_T1()
        {
            RunFile("S15.9.3.2_A2_T1.js");
        }

        [Test(Description = "Test based on delete prototype.toString")]
        public void S15_9_3_2_A3_T1_1()
        {
            RunFile("S15.9.3.2_A3_T1.1.js");
        }

        [Test(Description = "Test based on overwriting prototype.toString")]
        public void S15_9_3_2_A3_T1_2()
        {
            RunFile("S15.9.3.2_A3_T1.2.js");
        }
    }
}
