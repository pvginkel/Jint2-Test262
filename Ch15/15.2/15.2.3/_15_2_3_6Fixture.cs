//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_2._15_2_3
{
    [TestFixture]
    public class _15_2_3_6Fixture : Test262Fixture
    {
        public _15_2_3_6Fixture()
            : base("ch15\\15.2\\15.2.3\\15.2.3.6")
        {
        }

        [Test(Description = "Object.defineProperty must exist as a function")]
        public void _15_2_3_6_0_1()
        {
            RunFile("15.2.3.6-0-1.js");
        }

        [Test(Description = "Object.defineProperty must exist as a function taking 3 parameters")]
        public void _15_2_3_6_0_2()
        {
            RunFile("15.2.3.6-0-2.js");
        }

        [Test(Description = "Object.defineProperty applied to undefined throws a TypeError")]
        public void _15_2_3_6_1_1()
        {
            RunFile("15.2.3.6-1-1.js");
        }

        [Test(Description = "Object.defineProperty applied to null throws a TypeError")]
        public void _15_2_3_6_1_2()
        {
            RunFile("15.2.3.6-1-2.js");
        }

        [Test(Description = "Object.defineProperty applied to number primitive throws a TypeError")]
        public void _15_2_3_6_1_3()
        {
            RunFile("15.2.3.6-1-3.js");
        }

        [Test(Description = "Object.defineProperty applied to string primitive throws a TypeError")]
        public void _15_2_3_6_1_4()
        {
            RunFile("15.2.3.6-1-4.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if type of first param is not Object")]
        public void _15_2_3_6_1()
        {
            RunFile("15.2.3.6-1.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is undefined that converts to string 'undefined'")]
        public void _15_2_3_6_2_1()
        {
            RunFile("15.2.3.6-2-1.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is a negative number)")]
        public void _15_2_3_6_2_10()
        {
            RunFile("15.2.3.6-2-10.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is Infinity)")]
        public void _15_2_3_6_2_11()
        {
            RunFile("15.2.3.6-2-11.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is +Infinity)")]
        public void _15_2_3_6_2_12()
        {
            RunFile("15.2.3.6-2-12.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is -Infinity)")]
        public void _15_2_3_6_2_13()
        {
            RunFile("15.2.3.6-2-13.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 20 zeros))")]
        public void _15_2_3_6_2_14()
        {
            RunFile("15.2.3.6-2-14.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 21 zeros))")]
        public void _15_2_3_6_2_15()
        {
            RunFile("15.2.3.6-2-15.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 22 zeros))")]
        public void _15_2_3_6_2_16()
        {
            RunFile("15.2.3.6-2-16.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(trailing 5 zeros))")]
        public void _15_2_3_6_2_17_1()
        {
            RunFile("15.2.3.6-2-17-1.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1e+20)")]
        public void _15_2_3_6_2_17()
        {
            RunFile("15.2.3.6-2-17.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to string (value is 1e+21)")]
        public void _15_2_3_6_2_18()
        {
            RunFile("15.2.3.6-2-18.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to string (value is 1e+22)")]
        public void _15_2_3_6_2_19()
        {
            RunFile("15.2.3.6-2-19.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is null that converts to string 'null'")]
        public void _15_2_3_6_2_2()
        {
            RunFile("15.2.3.6-2-2.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 0.000001)")]
        public void _15_2_3_6_2_20()
        {
            RunFile("15.2.3.6-2-20.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 0.0000001)")]
        public void _15_2_3_6_2_21()
        {
            RunFile("15.2.3.6-2-21.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 0.00000001)")]
        public void _15_2_3_6_2_22()
        {
            RunFile("15.2.3.6-2-22.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1e-7)")]
        public void _15_2_3_6_2_23()
        {
            RunFile("15.2.3.6-2-23.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1e-6)")]
        public void _15_2_3_6_2_24()
        {
            RunFile("15.2.3.6-2-24.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1e-5)")]
        public void _15_2_3_6_2_25()
        {
            RunFile("15.2.3.6-2-25.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an integer that converts to a string (value is 123)")]
        public void _15_2_3_6_2_26()
        {
            RunFile("15.2.3.6-2-26.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a decimal that converts to a string (value is 123.456)")]
        public void _15_2_3_6_2_27()
        {
            RunFile("15.2.3.6-2-27.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 19 zeros).1)")]
        public void _15_2_3_6_2_28()
        {
            RunFile("15.2.3.6-2-28.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 20 zeros).1)")]
        public void _15_2_3_6_2_29()
        {
            RunFile("15.2.3.6-2-29.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a boolean whose value is false")]
        public void _15_2_3_6_2_3()
        {
            RunFile("15.2.3.6-2-3.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 21 zeros).1)")]
        public void _15_2_3_6_2_30()
        {
            RunFile("15.2.3.6-2-30.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 1(following 22 zeros).1)")]
        public void _15_2_3_6_2_31()
        {
            RunFile("15.2.3.6-2-31.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 123.1234567)")]
        public void _15_2_3_6_2_32()
        {
            RunFile("15.2.3.6-2-32.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to an empty string ")]
        public void _15_2_3_6_2_33()
        {
            RunFile("15.2.3.6-2-33.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to string 'AB")]
        public void _15_2_3_6_2_34()
        {
            RunFile("15.2.3.6-2-34.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to string 'undefined' ")]
        public void _15_2_3_6_2_35()
        {
            RunFile("15.2.3.6-2-35.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to string 'null' ")]
        public void _15_2_3_6_2_36()
        {
            RunFile("15.2.3.6-2-36.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to string '123αβπcd' ")]
        public void _15_2_3_6_2_37()
        {
            RunFile("15.2.3.6-2-37.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is applied to string '1' ")]
        public void _15_2_3_6_2_38()
        {
            RunFile("15.2.3.6-2-38.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an array that converts to a string")]
        public void _15_2_3_6_2_39()
        {
            RunFile("15.2.3.6-2-39.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a boolean whose value is true")]
        public void _15_2_3_6_2_4()
        {
            RunFile("15.2.3.6-2-4.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a String Object that converts to a string")]
        public void _15_2_3_6_2_40()
        {
            RunFile("15.2.3.6-2-40.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a Boolean Object that converts to a string")]
        public void _15_2_3_6_2_41()
        {
            RunFile("15.2.3.6-2-41.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a Number Object that converts to a string")]
        public void _15_2_3_6_2_42()
        {
            RunFile("15.2.3.6-2-42.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an object that has an own toString method")]
        public void _15_2_3_6_2_43()
        {
            RunFile("15.2.3.6-2-43.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an object that has an own valueOf method")]
        public void _15_2_3_6_2_44()
        {
            RunFile("15.2.3.6-2-44.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an object whose toString method returns an object and whose valueOf method returns a primitive value")]
        public void _15_2_3_6_2_45()
        {
            RunFile("15.2.3.6-2-45.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is an object that has an own toString and valueOf method")]
        public void _15_2_3_6_2_46()
        {
            RunFile("15.2.3.6-2-46.js");
        }

        [Test(Description = "Object.defineProperty - TypeError exception is thrown  when 'P' is an object that neither toString nor valueOf returns a primitive value")]
        public void _15_2_3_6_2_47()
        {
            RunFile("15.2.3.6-2-47.js");
        }

        [Test(Description = "Object.defineProperty - an inherited toString method  is invoked when 'P' is an object with an own valueOf and an inherited toString methods")]
        public void _15_2_3_6_2_48()
        {
            RunFile("15.2.3.6-2-48.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is NaN)")]
        public void _15_2_3_6_2_5()
        {
            RunFile("15.2.3.6-2-5.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is 0)")]
        public void _15_2_3_6_2_6()
        {
            RunFile("15.2.3.6-2-6.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is +0)")]
        public void _15_2_3_6_2_7()
        {
            RunFile("15.2.3.6-2-7.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is -0)")]
        public void _15_2_3_6_2_8()
        {
            RunFile("15.2.3.6-2-8.js");
        }

        [Test(Description = "Object.defineProperty - argument 'P' is a number that converts to a string (value is a positive number)")]
        public void _15_2_3_6_2_9()
        {
            RunFile("15.2.3.6-2-9.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if desc has 'get' and 'value' present(8.10.5 step 9.a)")]
        public void _15_2_3_6_3_1()
        {
            RunFile("15.2.3.6-3-1.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if setter is not callable but not undefined (Number)(8.10.5 step 8.b)")]
        public void _15_2_3_6_3_10()
        {
            RunFile("15.2.3.6-3-10.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is null (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_100()
        {
            RunFile("15.2.3.6-3-100.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is true (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_101()
        {
            RunFile("15.2.3.6-3-101.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is false (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_102()
        {
            RunFile("15.2.3.6-3-102.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is 0 (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_103()
        {
            RunFile("15.2.3.6-3-103.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is +0 (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_104()
        {
            RunFile("15.2.3.6-3-104.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is -0 (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_105()
        {
            RunFile("15.2.3.6-3-105.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is NaN (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_106()
        {
            RunFile("15.2.3.6-3-106.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a positive number (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_107()
        {
            RunFile("15.2.3.6-3-107.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a negative number (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_108()
        {
            RunFile("15.2.3.6-3-108.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is an empty string (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_109()
        {
            RunFile("15.2.3.6-3-109.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if setter is not callable but not undefined (Boolean)(8.10.5 step 8.b)")]
        public void _15_2_3_6_3_11()
        {
            RunFile("15.2.3.6-3-11.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a non-empty string (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_110()
        {
            RunFile("15.2.3.6-3-110.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a Function object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_111()
        {
            RunFile("15.2.3.6-3-111.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is an Array object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_112()
        {
            RunFile("15.2.3.6-3-112.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a String object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_113()
        {
            RunFile("15.2.3.6-3-113.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a Boolean object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_114()
        {
            RunFile("15.2.3.6-3-114.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a Number object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_115()
        {
            RunFile("15.2.3.6-3-115.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is the Math object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_116()
        {
            RunFile("15.2.3.6-3-116.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a Date object (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_117()
        {
            RunFile("15.2.3.6-3-117.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a RegExp object  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_118()
        {
            RunFile("15.2.3.6-3-118.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is the JSON object  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_119()
        {
            RunFile("15.2.3.6-3-119.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if setter is not callable but not undefined (String)(8.10.5 step 8.b)")]
        public void _15_2_3_6_3_12()
        {
            RunFile("15.2.3.6-3-12.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is a Error object  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_120()
        {
            RunFile("15.2.3.6-3-120.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is the Argument object  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_121()
        {
            RunFile("15.2.3.6-3-121.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is the global object  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_123()
        {
            RunFile("15.2.3.6-3-123.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is treated as true when it is a string (value is 'false')  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_124()
        {
            RunFile("15.2.3.6-3-124.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is treated as true when it is new Boolean(false)  (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_125()
        {
            RunFile("15.2.3.6-3-125.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is present  (8.10.5 step 5)")]
        public void _15_2_3_6_3_126()
        {
            RunFile("15.2.3.6-3-126.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is not present  (8.10.5 step 5)")]
        public void _15_2_3_6_3_127()
        {
            RunFile("15.2.3.6-3-127.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is an inherited data property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_129()
        {
            RunFile("15.2.3.6-3-129.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if the setter in desc is not callable (Null)(8.10.5 step 8.b)")]
        public void _15_2_3_6_3_13()
        {
            RunFile("15.2.3.6-3-13.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own data property that overrides an inherited data property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_130()
        {
            RunFile("15.2.3.6-3-130.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own data property that overrides an inherited accessor property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_131()
        {
            RunFile("15.2.3.6-3-131.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own accessor property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_132()
        {
            RunFile("15.2.3.6-3-132.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is an inherited accessor property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_133()
        {
            RunFile("15.2.3.6-3-133.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own accessor property that overrides an inherited data property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_134()
        {
            RunFile("15.2.3.6-3-134.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own accessor property that overrides an inherited accessor property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_135()
        {
            RunFile("15.2.3.6-3-135.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own accessor property without a get function  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_136()
        {
            RunFile("15.2.3.6-3-136.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_137()
        {
            RunFile("15.2.3.6-3-137.js");
        }

        [Test(Description = "Object.defineProperty - 'value' property in 'Attributes' is an inherited accessor property without a get function  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_138()
        {
            RunFile("15.2.3.6-3-138.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_139_1()
        {
            RunFile("15.2.3.6-3-139-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_139()
        {
            RunFile("15.2.3.6-3-139.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if setter is not callable but not undefined (Object)(8.10.5 step 8.b)")]
        public void _15_2_3_6_3_14()
        {
            RunFile("15.2.3.6-3-14.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_140_1()
        {
            RunFile("15.2.3.6-3-140-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_140()
        {
            RunFile("15.2.3.6-3-140.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_141_1()
        {
            RunFile("15.2.3.6-3-141-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_141()
        {
            RunFile("15.2.3.6-3-141.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_142_1()
        {
            RunFile("15.2.3.6-3-142-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_142()
        {
            RunFile("15.2.3.6-3-142.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_143_1()
        {
            RunFile("15.2.3.6-3-143-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_143()
        {
            RunFile("15.2.3.6-3-143.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_144_1()
        {
            RunFile("15.2.3.6-3-144-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_144()
        {
            RunFile("15.2.3.6-3-144.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_145_1()
        {
            RunFile("15.2.3.6-3-145-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_145()
        {
            RunFile("15.2.3.6-3-145.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_146_1()
        {
            RunFile("15.2.3.6-3-146-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_146()
        {
            RunFile("15.2.3.6-3-146.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_147_1()
        {
            RunFile("15.2.3.6-3-147-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_147()
        {
            RunFile("15.2.3.6-3-147.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'value' property of prototype object  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_148_1()
        {
            RunFile("15.2.3.6-3-148-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_148()
        {
            RunFile("15.2.3.6-3-148.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'value' property of prototype object (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_149_1()
        {
            RunFile("15.2.3.6-3-149-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_149()
        {
            RunFile("15.2.3.6-3-149.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is undefined  (8.10.5 step 1)")]
        public void _15_2_3_6_3_15()
        {
            RunFile("15.2.3.6-3-15.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'value' property  (8.10.5 step 5.a)")]
        public void _15_2_3_6_3_151()
        {
            RunFile("15.2.3.6-3-151.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is present (8.10.5 step 6)")]
        public void _15_2_3_6_3_152()
        {
            RunFile("15.2.3.6-3-152.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is not present  (8.10.5 step 6)")]
        public void _15_2_3_6_3_153()
        {
            RunFile("15.2.3.6-3-153.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own data property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_154()
        {
            RunFile("15.2.3.6-3-154.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is an inherited data property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_155()
        {
            RunFile("15.2.3.6-3-155.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own data property that overrides an inherited data property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_156()
        {
            RunFile("15.2.3.6-3-156.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own data property that overrides an inherited accessor property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_157()
        {
            RunFile("15.2.3.6-3-157.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own accessor property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_158()
        {
            RunFile("15.2.3.6-3-158.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is an inherited accessor property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_159()
        {
            RunFile("15.2.3.6-3-159.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is null (8.10.5 step 1)")]
        public void _15_2_3_6_3_16()
        {
            RunFile("15.2.3.6-3-16.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own accessor property that overrides an inherited data property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_160()
        {
            RunFile("15.2.3.6-3-160.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own accessor property that overrides an inherited accessor property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_161()
        {
            RunFile("15.2.3.6-3-161.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own accessor property without a get function  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_162()
        {
            RunFile("15.2.3.6-3-162.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_163()
        {
            RunFile("15.2.3.6-3-163.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is an inherited accessor property without a get function  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_164()
        {
            RunFile("15.2.3.6-3-164.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_165_1()
        {
            RunFile("15.2.3.6-3-165-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_165()
        {
            RunFile("15.2.3.6-3-165.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_166_1()
        {
            RunFile("15.2.3.6-3-166-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_166()
        {
            RunFile("15.2.3.6-3-166.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_167_1()
        {
            RunFile("15.2.3.6-3-167-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_167()
        {
            RunFile("15.2.3.6-3-167.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_168_1()
        {
            RunFile("15.2.3.6-3-168-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_168()
        {
            RunFile("15.2.3.6-3-168.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_169_1()
        {
            RunFile("15.2.3.6-3-169-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_169()
        {
            RunFile("15.2.3.6-3-169.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a boolean primitive (8.10.5 step 1)")]
        public void _15_2_3_6_3_17()
        {
            RunFile("15.2.3.6-3-17.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_170_1()
        {
            RunFile("15.2.3.6-3-170-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_170()
        {
            RunFile("15.2.3.6-3-170.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_171_1()
        {
            RunFile("15.2.3.6-3-171-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_171()
        {
            RunFile("15.2.3.6-3-171.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_172_1()
        {
            RunFile("15.2.3.6-3-172-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_172()
        {
            RunFile("15.2.3.6-3-172.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_173_1()
        {
            RunFile("15.2.3.6-3-173-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_173()
        {
            RunFile("15.2.3.6-3-173.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_174_1()
        {
            RunFile("15.2.3.6-3-174-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_174()
        {
            RunFile("15.2.3.6-3-174.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'writable' property of prototype object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_175_1()
        {
            RunFile("15.2.3.6-3-175-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_175()
        {
            RunFile("15.2.3.6-3-175.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'writable' property  (8.10.5 step 6.a)")]
        public void _15_2_3_6_3_177()
        {
            RunFile("15.2.3.6-3-177.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is undefined  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_178()
        {
            RunFile("15.2.3.6-3-178.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is null  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_179()
        {
            RunFile("15.2.3.6-3-179.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a number primitive (8.10.5 step 1)")]
        public void _15_2_3_6_3_18()
        {
            RunFile("15.2.3.6-3-18.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is true  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_180()
        {
            RunFile("15.2.3.6-3-180.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is false  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_181()
        {
            RunFile("15.2.3.6-3-181.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is 0  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_182()
        {
            RunFile("15.2.3.6-3-182.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is +0  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_183()
        {
            RunFile("15.2.3.6-3-183.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is -0  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_184()
        {
            RunFile("15.2.3.6-3-184.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is NaN  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_185()
        {
            RunFile("15.2.3.6-3-185.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a positive number  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_186()
        {
            RunFile("15.2.3.6-3-186.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a negative number  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_187()
        {
            RunFile("15.2.3.6-3-187.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is an empty string  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_188()
        {
            RunFile("15.2.3.6-3-188.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a non-empty string  (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_189()
        {
            RunFile("15.2.3.6-3-189.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a string primitive (8.10.5 step 1)")]
        public void _15_2_3_6_3_19()
        {
            RunFile("15.2.3.6-3-19.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a Function object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_190()
        {
            RunFile("15.2.3.6-3-190.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is an Array object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_191()
        {
            RunFile("15.2.3.6-3-191.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a String object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_192()
        {
            RunFile("15.2.3.6-3-192.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a Boolean object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_193()
        {
            RunFile("15.2.3.6-3-193.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a Number object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_194()
        {
            RunFile("15.2.3.6-3-194.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is the Math object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_195()
        {
            RunFile("15.2.3.6-3-195.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a Date object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_196()
        {
            RunFile("15.2.3.6-3-196.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a RegExp object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_197()
        {
            RunFile("15.2.3.6-3-197.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is the JSON object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_198()
        {
            RunFile("15.2.3.6-3-198.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is a Error object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_199()
        {
            RunFile("15.2.3.6-3-199.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if desc has 'get' and 'writable' present(8.10.5 step 9.a)")]
        public void _15_2_3_6_3_2()
        {
            RunFile("15.2.3.6-3-2.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is present (8.10.5 step 3)")]
        public void _15_2_3_6_3_20()
        {
            RunFile("15.2.3.6-3-20.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is the Argument object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_200()
        {
            RunFile("15.2.3.6-3-200.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is the global object (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_202()
        {
            RunFile("15.2.3.6-3-202.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is treated as true when it is a string(value is 'false') (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_203()
        {
            RunFile("15.2.3.6-3-203.js");
        }

        [Test(Description = "Object.defineProperty - 'writable' property in 'Attributes' is treated as true when it is new Boolean(false) (8.10.5 step 6.b)")]
        public void _15_2_3_6_3_204()
        {
            RunFile("15.2.3.6-3-204.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is present (8.10.5 step 7)")]
        public void _15_2_3_6_3_205()
        {
            RunFile("15.2.3.6-3-205.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is not present (8.10.5 step 7)")]
        public void _15_2_3_6_3_206()
        {
            RunFile("15.2.3.6-3-206.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own data property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_207()
        {
            RunFile("15.2.3.6-3-207.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is an inherited data property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_208()
        {
            RunFile("15.2.3.6-3-208.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own data property that overrides an inherited data property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_209()
        {
            RunFile("15.2.3.6-3-209.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is not present (8.10.5 step 3)")]
        public void _15_2_3_6_3_21()
        {
            RunFile("15.2.3.6-3-21.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own data property that overrides an inherited accessor property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_210()
        {
            RunFile("15.2.3.6-3-210.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own accessor property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_211()
        {
            RunFile("15.2.3.6-3-211.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is an inherited accessor property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_212()
        {
            RunFile("15.2.3.6-3-212.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own accessor property that overrides an inherited data property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_213()
        {
            RunFile("15.2.3.6-3-213.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own accessor property that overrides an inherited accessor property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_214()
        {
            RunFile("15.2.3.6-3-214.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own accessor property without a get function (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_215()
        {
            RunFile("15.2.3.6-3-215.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_216()
        {
            RunFile("15.2.3.6-3-216.js");
        }

        [Test(Description = "Object.defineProperty - 'get' property in 'Attributes' is an inherited accessor property without a get function (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_217()
        {
            RunFile("15.2.3.6-3-217.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_218_1()
        {
            RunFile("15.2.3.6-3-218-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_218()
        {
            RunFile("15.2.3.6-3-218.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_219_1()
        {
            RunFile("15.2.3.6-3-219-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_219()
        {
            RunFile("15.2.3.6-3-219.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own data property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_22()
        {
            RunFile("15.2.3.6-3-22.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_220_1()
        {
            RunFile("15.2.3.6-3-220-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_220()
        {
            RunFile("15.2.3.6-3-220.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_221_1()
        {
            RunFile("15.2.3.6-3-221-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_221()
        {
            RunFile("15.2.3.6-3-221.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_222_1()
        {
            RunFile("15.2.3.6-3-222-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_222()
        {
            RunFile("15.2.3.6-3-222.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_223_1()
        {
            RunFile("15.2.3.6-3-223-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_223()
        {
            RunFile("15.2.3.6-3-223.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_224_1()
        {
            RunFile("15.2.3.6-3-224-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_224()
        {
            RunFile("15.2.3.6-3-224.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_225_1()
        {
            RunFile("15.2.3.6-3-225-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_225()
        {
            RunFile("15.2.3.6-3-225.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_226_1()
        {
            RunFile("15.2.3.6-3-226-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_226()
        {
            RunFile("15.2.3.6-3-226.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_227_1()
        {
            RunFile("15.2.3.6-3-227-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_227()
        {
            RunFile("15.2.3.6-3-227.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'get' property of prototype object (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_228_1()
        {
            RunFile("15.2.3.6-3-228-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_228()
        {
            RunFile("15.2.3.6-3-228.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is an inherited data property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_23()
        {
            RunFile("15.2.3.6-3-23.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'get' property (8.10.5 step 7.a)")]
        public void _15_2_3_6_3_230()
        {
            RunFile("15.2.3.6-3-230.js");
        }

        [Test(Description = "Object.defineProperty - value of 'get' property in 'Attributes' is undefined (8.10.5 step 7.b)")]
        public void _15_2_3_6_3_231()
        {
            RunFile("15.2.3.6-3-231.js");
        }

        [Test(Description = "Object.defineProperty - value of 'get' property in 'Attributes' is a function (8.10.5 step 7.b)")]
        public void _15_2_3_6_3_232()
        {
            RunFile("15.2.3.6-3-232.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is present (8.10.5 step 8)")]
        public void _15_2_3_6_3_235()
        {
            RunFile("15.2.3.6-3-235.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is not present (8.10.5 step 8)")]
        public void _15_2_3_6_3_236()
        {
            RunFile("15.2.3.6-3-236.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own data property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_237()
        {
            RunFile("15.2.3.6-3-237.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is an inherited data property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_238()
        {
            RunFile("15.2.3.6-3-238.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own data property that overrides an inherited data property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_239()
        {
            RunFile("15.2.3.6-3-239.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own data property that overrides an inherited data property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_24()
        {
            RunFile("15.2.3.6-3-24.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own data property that overrides an inherited accessor property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_240()
        {
            RunFile("15.2.3.6-3-240.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own accessor property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_241()
        {
            RunFile("15.2.3.6-3-241.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is an inherited accessor property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_242()
        {
            RunFile("15.2.3.6-3-242.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own accessor property that overrides an inherited data property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_243()
        {
            RunFile("15.2.3.6-3-243.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own accessor property that overrides an inherited accessor property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_244()
        {
            RunFile("15.2.3.6-3-244.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own accessor property without a get function (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_245()
        {
            RunFile("15.2.3.6-3-245.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_246()
        {
            RunFile("15.2.3.6-3-246.js");
        }

        [Test(Description = "Object.defineProperty - 'set' property in 'Attributes' is an inherited accessor property without a get function (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_247()
        {
            RunFile("15.2.3.6-3-247.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_248_1()
        {
            RunFile("15.2.3.6-3-248-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_248()
        {
            RunFile("15.2.3.6-3-248.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_249_1()
        {
            RunFile("15.2.3.6-3-249-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_249()
        {
            RunFile("15.2.3.6-3-249.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own data property that overrides an inherited accessor property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_25()
        {
            RunFile("15.2.3.6-3-25.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_250_1()
        {
            RunFile("15.2.3.6-3-250-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_250()
        {
            RunFile("15.2.3.6-3-250.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_251_1()
        {
            RunFile("15.2.3.6-3-251-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_251()
        {
            RunFile("15.2.3.6-3-251.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_252_1()
        {
            RunFile("15.2.3.6-3-252-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_252()
        {
            RunFile("15.2.3.6-3-252.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_253_1()
        {
            RunFile("15.2.3.6-3-253-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_253()
        {
            RunFile("15.2.3.6-3-253.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_254_1()
        {
            RunFile("15.2.3.6-3-254-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_254()
        {
            RunFile("15.2.3.6-3-254.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_255_1()
        {
            RunFile("15.2.3.6-3-255-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a RegExp object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_255()
        {
            RunFile("15.2.3.6-3-255.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_256_1()
        {
            RunFile("15.2.3.6-3-256-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_256()
        {
            RunFile("15.2.3.6-3-256.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_257_1()
        {
            RunFile("15.2.3.6-3-257-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_257()
        {
            RunFile("15.2.3.6-3-257.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'set' property of prototype object (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_258_1()
        {
            RunFile("15.2.3.6-3-258-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_258()
        {
            RunFile("15.2.3.6-3-258.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own accessor property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_26()
        {
            RunFile("15.2.3.6-3-26.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'set' property (8.10.5 step 8.a)")]
        public void _15_2_3_6_3_260()
        {
            RunFile("15.2.3.6-3-260.js");
        }

        [Test(Description = "Object.defineProperty - value of 'set' property in 'Attributes' is undefined (8.10.5 step 8.b)")]
        public void _15_2_3_6_3_261()
        {
            RunFile("15.2.3.6-3-261.js");
        }

        [Test(Description = "Object.defineProperty - value of 'set' property in 'Attributes' is a function (8.10.5 step 8.b)")]
        public void _15_2_3_6_3_262()
        {
            RunFile("15.2.3.6-3-262.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is an inherited accessor property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_27()
        {
            RunFile("15.2.3.6-3-27.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own accessor property that overrides an inherited data property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_28()
        {
            RunFile("15.2.3.6-3-28.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own accessor property that overrides an inherited accessor property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_29()
        {
            RunFile("15.2.3.6-3-29.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if desc has 'set' and 'value' present(8.10.5 step 9.a)")]
        public void _15_2_3_6_3_3()
        {
            RunFile("15.2.3.6-3-3.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own accessor property without a get function (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_30()
        {
            RunFile("15.2.3.6-3-30.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_31()
        {
            RunFile("15.2.3.6-3-31.js");
        }

        [Test(Description = "Object.defineProperty - 'enumerable' property in 'Attributes' is an inherited accessor property without a get function (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_32()
        {
            RunFile("15.2.3.6-3-32.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_33_1()
        {
            RunFile("15.2.3.6-3-33-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_33()
        {
            RunFile("15.2.3.6-3-33.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_34_1()
        {
            RunFile("15.2.3.6-3-34-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_34()
        {
            RunFile("15.2.3.6-3-34.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_35_1()
        {
            RunFile("15.2.3.6-3-35-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_35()
        {
            RunFile("15.2.3.6-3-35.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_36_1()
        {
            RunFile("15.2.3.6-3-36-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_36()
        {
            RunFile("15.2.3.6-3-36.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_37_1()
        {
            RunFile("15.2.3.6-3-37-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_37()
        {
            RunFile("15.2.3.6-3-37.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_38_1()
        {
            RunFile("15.2.3.6-3-38-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_38()
        {
            RunFile("15.2.3.6-3-38.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_39_1()
        {
            RunFile("15.2.3.6-3-39-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_39()
        {
            RunFile("15.2.3.6-3-39.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if desc has 'set' and 'writable' present(8.10.5 step 9.a)")]
        public void _15_2_3_6_3_4()
        {
            RunFile("15.2.3.6-3-4.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an RegExp object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_40_1()
        {
            RunFile("15.2.3.6-3-40-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an RegExp object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_40()
        {
            RunFile("15.2.3.6-3-40.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_41_1()
        {
            RunFile("15.2.3.6-3-41-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_41()
        {
            RunFile("15.2.3.6-3-41.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_42_1()
        {
            RunFile("15.2.3.6-3-42-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_42()
        {
            RunFile("15.2.3.6-3-42.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'enumerable' property of prototype object (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_43_1()
        {
            RunFile("15.2.3.6-3-43-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_43()
        {
            RunFile("15.2.3.6-3-43.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'enumerable' property (8.10.5 step 3.a)")]
        public void _15_2_3_6_3_45()
        {
            RunFile("15.2.3.6-3-45.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is undefined (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_46()
        {
            RunFile("15.2.3.6-3-46.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is null (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_47()
        {
            RunFile("15.2.3.6-3-47.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is true (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_48()
        {
            RunFile("15.2.3.6-3-48.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is false (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_49()
        {
            RunFile("15.2.3.6-3-49.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if getter is not callable but not undefined (Number)(8.10.5 step 7.b)")]
        public void _15_2_3_6_3_5()
        {
            RunFile("15.2.3.6-3-5.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is 0 (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_50()
        {
            RunFile("15.2.3.6-3-50.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is +0 (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_51()
        {
            RunFile("15.2.3.6-3-51.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is -0 (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_52()
        {
            RunFile("15.2.3.6-3-52.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is NaN (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_53()
        {
            RunFile("15.2.3.6-3-53.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a positive number (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_54()
        {
            RunFile("15.2.3.6-3-54.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a negative number (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_55()
        {
            RunFile("15.2.3.6-3-55.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is an empty string (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_56()
        {
            RunFile("15.2.3.6-3-56.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a non-empty string (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_57()
        {
            RunFile("15.2.3.6-3-57.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a Function object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_58()
        {
            RunFile("15.2.3.6-3-58.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is an Array object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_59()
        {
            RunFile("15.2.3.6-3-59.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if getter is not callable but not undefined (Boolean)(8.10.5 step 7.b)")]
        public void _15_2_3_6_3_6()
        {
            RunFile("15.2.3.6-3-6.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a String Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_60()
        {
            RunFile("15.2.3.6-3-60.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a Boolean Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_61()
        {
            RunFile("15.2.3.6-3-61.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a Number Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_62()
        {
            RunFile("15.2.3.6-3-62.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is the Math Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_63()
        {
            RunFile("15.2.3.6-3-63.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a Date Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_64()
        {
            RunFile("15.2.3.6-3-64.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is a RegExp Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_65()
        {
            RunFile("15.2.3.6-3-65.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is the JSON Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_66()
        {
            RunFile("15.2.3.6-3-66.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is an Error Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_67()
        {
            RunFile("15.2.3.6-3-67.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is an Arguments Object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_68()
        {
            RunFile("15.2.3.6-3-68.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if getter is not callable but not undefined (String)(8.10.5 step 7.b)")]
        public void _15_2_3_6_3_7()
        {
            RunFile("15.2.3.6-3-7.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is the global object (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_70()
        {
            RunFile("15.2.3.6-3-70.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is treated as true when it is a string (value is 'false') (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_71()
        {
            RunFile("15.2.3.6-3-71.js");
        }

        [Test(Description = "Object.defineProperty - value of 'enumerable' property in 'Attributes' is new Boolean(false) which is treated as true value (8.10.5 step 3.b)")]
        public void _15_2_3_6_3_72()
        {
            RunFile("15.2.3.6-3-72.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is present (8.10.5 step 4)")]
        public void _15_2_3_6_3_73()
        {
            RunFile("15.2.3.6-3-73.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is not present (8.10.5 step 4)")]
        public void _15_2_3_6_3_74()
        {
            RunFile("15.2.3.6-3-74.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own data property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_75()
        {
            RunFile("15.2.3.6-3-75.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is an inherited data property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_76()
        {
            RunFile("15.2.3.6-3-76.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own data property that overrides an inherited data property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_77()
        {
            RunFile("15.2.3.6-3-77.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own data property that overrides an inherited accessor property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_78()
        {
            RunFile("15.2.3.6-3-78.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own accessor property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_79()
        {
            RunFile("15.2.3.6-3-79.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if getter is not callable but not undefined (Null)(8.10.5 step 7.b)")]
        public void _15_2_3_6_3_8()
        {
            RunFile("15.2.3.6-3-8.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is an inherited accessor property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_80()
        {
            RunFile("15.2.3.6-3-80.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own accessor property that overrides an inherited data property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_81()
        {
            RunFile("15.2.3.6-3-81.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own accessor property that overrides an inherited accessor property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_82()
        {
            RunFile("15.2.3.6-3-82.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own accessor property without a get function (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_83()
        {
            RunFile("15.2.3.6-3-83.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is own accessor property(without a get function) that overrides an inherited accessor property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_84()
        {
            RunFile("15.2.3.6-3-84.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is an inherited accessor property without a get function (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_85()
        {
            RunFile("15.2.3.6-3-85.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'configurable' property of prototype object (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_86_1()
        {
            RunFile("15.2.3.6-3-86-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Function object which implements its own [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_86()
        {
            RunFile("15.2.3.6-3-86.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_87_1()
        {
            RunFile("15.2.3.6-3-87-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Array object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_87()
        {
            RunFile("15.2.3.6-3-87.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_88_1()
        {
            RunFile("15.2.3.6-3-88-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a String object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_88()
        {
            RunFile("15.2.3.6-3-88.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_89_1()
        {
            RunFile("15.2.3.6-3-89-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Boolean object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_89()
        {
            RunFile("15.2.3.6-3-89.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError if getter is not callable but not undefined (Object)(8.10.5 step 7.b)")]
        public void _15_2_3_6_3_9()
        {
            RunFile("15.2.3.6-3-9.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_90_1()
        {
            RunFile("15.2.3.6-3-90-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Number object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_90()
        {
            RunFile("15.2.3.6-3-90.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_91_1()
        {
            RunFile("15.2.3.6-3-91-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the Math object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_91()
        {
            RunFile("15.2.3.6-3-91.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_92_1()
        {
            RunFile("15.2.3.6-3-92-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is a Date object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_92()
        {
            RunFile("15.2.3.6-3-92.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an RegExp object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_93_1()
        {
            RunFile("15.2.3.6-3-93-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an RegExp object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_93()
        {
            RunFile("15.2.3.6-3-93.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_94_1()
        {
            RunFile("15.2.3.6-3-94-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the JSON object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_94()
        {
            RunFile("15.2.3.6-3-94.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_95_1()
        {
            RunFile("15.2.3.6-3-95-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Error object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_95()
        {
            RunFile("15.2.3.6-3-95.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_96_1()
        {
            RunFile("15.2.3.6-3-96-1.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is an Arguments object which implements its own [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_96()
        {
            RunFile("15.2.3.6-3-96.js");
        }

        [Test(Description = "Object.defineProperty - 'Attributes' is the global object that uses Object's [[Get]] method to access the 'configurable' property (8.10.5 step 4.a)")]
        public void _15_2_3_6_3_98()
        {
            RunFile("15.2.3.6-3-98.js");
        }

        [Test(Description = "Object.defineProperty - 'configurable' property in 'Attributes' is undefined (8.10.5 step 4.b)")]
        public void _15_2_3_6_3_99()
        {
            RunFile("15.2.3.6-3-99.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when adding properties to non-extensible objects(8.12.9 step 3)")]
        public void _15_2_3_6_4_1()
        {
            RunFile("15.2.3.6-4-1.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing [[Enumerable]] from false to true on non-configurable accessor properties")]
        public void _15_2_3_6_4_10()
        {
            RunFile("15.2.3.6-4-10.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, desc.value and name.value are two different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_100()
        {
            RunFile("15.2.3.6-4-100.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, name.value is present and desc.value is undefined (8.12.9 step 12)")]
        public void _15_2_3_6_4_101()
        {
            RunFile("15.2.3.6-4-101.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, desc.value is present and name.value is undefined (8.12.9 step 12)")]
        public void _15_2_3_6_4_102()
        {
            RunFile("15.2.3.6-4-102.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, name.writable and desc.writable are different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_103()
        {
            RunFile("15.2.3.6-4-103.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, name.enumerable and desc.enumerable are different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_104()
        {
            RunFile("15.2.3.6-4-104.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, name.configurable = true and desc.configurable = false (8.12.9 step 12)")]
        public void _15_2_3_6_4_105()
        {
            RunFile("15.2.3.6-4-105.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are data properties, several attributes values of name and desc are different (8.12.9 step 12)")]
        public void _15_2_3_6_4_106()
        {
            RunFile("15.2.3.6-4-106.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, both desc.[[Get]] and name.[[Get]] are two different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_107()
        {
            RunFile("15.2.3.6-4-107.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties,  name.[[Get]] is present and desc.[[Get]] is undefined (8.12.9 step 12)")]
        public void _15_2_3_6_4_108()
        {
            RunFile("15.2.3.6-4-108.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, name.[[Get]] is undefined and desc.[[Get]] is function (8.12.9 step 12)")]
        public void _15_2_3_6_4_109()
        {
            RunFile("15.2.3.6-4-109.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing [[Enumerable]] from true to false on non-configurable accessor properties")]
        public void _15_2_3_6_4_11()
        {
            RunFile("15.2.3.6-4-11.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, both desc.[[Set]] and name.[[Set]] are two different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_110()
        {
            RunFile("15.2.3.6-4-110.js");
        }

        [Test(Description = "Object.defineProperty  - 'name' and 'desc' are accessor properties, name.[[Set]] is present and desc.[[Set]] is undefined (8.12.9 step 12)")]
        public void _15_2_3_6_4_111()
        {
            RunFile("15.2.3.6-4-111.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, name.[[Set]] is undefined and desc.[[Set]] is function (8.12.9 step 12)")]
        public void _15_2_3_6_4_112()
        {
            RunFile("15.2.3.6-4-112.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, name.enumerable and desc.enumerable are different values (8.12.9 step 12)")]
        public void _15_2_3_6_4_113()
        {
            RunFile("15.2.3.6-4-113.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, name.configurable = true and desc.configurable = false (8.12.9 step 12)")]
        public void _15_2_3_6_4_114()
        {
            RunFile("15.2.3.6-4-114.js");
        }

        [Test(Description = "Object.defineProperty - 'name' and 'desc' are accessor properties, several attributes values of 'name' and 'desc' are different (8.12.9 step 12)")]
        public void _15_2_3_6_4_115()
        {
            RunFile("15.2.3.6-4-115.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, test the length property of 'O' is own data property (15.4.5.1 step 1)")]
        public void _15_2_3_6_4_116()
        {
            RunFile("15.2.3.6-4-116.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, test the length property of 'O' is own data property that overrides an inherited data property (15.4.5.1 step 1)")]
        public void _15_2_3_6_4_117()
        {
            RunFile("15.2.3.6-4-117.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test every field in 'desc' is absent (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_118()
        {
            RunFile("15.2.3.6-4-118.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test every field in 'desc' is same with corresponding attribute value of the length property in 'O' (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_119()
        {
            RunFile("15.2.3.6-4-119.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing non-configurable data properties to accessor properties")]
        public void _15_2_3_6_4_12()
        {
            RunFile("15.2.3.6-4-12.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test TypeError is thrown when updating the [[Configurable]] attribute of the length property from false to true (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_120()
        {
            RunFile("15.2.3.6-4-120.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test TypeError is thrown when updating the [[Enumerable]] attribute of the length property from false to true (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_121()
        {
            RunFile("15.2.3.6-4-121.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test TypeError is thrown when 'desc' is accessor descriptor (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_122()
        {
            RunFile("15.2.3.6-4-122.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test TypeError is thrown when updating the [[Writable]] attribute of the length property from false to true (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_123()
        {
            RunFile("15.2.3.6-4-123.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is absent, test updating the [[Writable]] attribute of the length property from true to false (15.4.5.1 step 3.a.i)")]
        public void _15_2_3_6_4_124()
        {
            RunFile("15.2.3.6-4-124.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test that RangeError exception is thrown when  [[Value]] field of 'desc' is undefined (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_125()
        {
            RunFile("15.2.3.6-4-125.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is null (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_126()
        {
            RunFile("15.2.3.6-4-126.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is a boolean with value false (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_127()
        {
            RunFile("15.2.3.6-4-127.js");
        }

        [Test(Description = "Object.defineProperty -  'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is a boolean with value true (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_128()
        {
            RunFile("15.2.3.6-4-128.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is not thrown when the [[Value]] field of 'desc' is 0 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_129()
        {
            RunFile("15.2.3.6-4-129.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing non-configurable accessor properties to data properties")]
        public void _15_2_3_6_4_13()
        {
            RunFile("15.2.3.6-4-13.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is not thrown when the [[Value]] field of 'desc' is +0 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_130()
        {
            RunFile("15.2.3.6-4-130.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is not thrown when the [[Value]] field of 'desc' is -0 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_131()
        {
            RunFile("15.2.3.6-4-131.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is not thrown when the [[Value]] field of 'desc' is a positive number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_132()
        {
            RunFile("15.2.3.6-4-132.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a negative number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_133()
        {
            RunFile("15.2.3.6-4-133.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is +Infinity (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_134()
        {
            RunFile("15.2.3.6-4-134.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is -Infinity (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_135()
        {
            RunFile("15.2.3.6-4-135.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is NaN (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_136()
        {
            RunFile("15.2.3.6-4-136.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is not thrown when the [[Value]] field of 'desc' is a string containing a positive number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_137()
        {
            RunFile("15.2.3.6-4-137.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a string containing a negative number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_138()
        {
            RunFile("15.2.3.6-4-138.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a string containing a decimal number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_139()
        {
            RunFile("15.2.3.6-4-139.js");
        }

        [Test(Description = "Object.defineProperty permits changing data property to accessor property for configurable properties")]
        public void _15_2_3_6_4_14()
        {
            RunFile("15.2.3.6-4-14.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a string containing +Infinity (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_140()
        {
            RunFile("15.2.3.6-4-140.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a string containing -Infinity (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_141()
        {
            RunFile("15.2.3.6-4-141.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is a string containing an exponential number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_142()
        {
            RunFile("15.2.3.6-4-142.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is a string containing a hex number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_143()
        {
            RunFile("15.2.3.6-4-143.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is a string containing a number with leading zeros (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_144()
        {
            RunFile("15.2.3.6-4-144.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError exception is thrown when the [[Value]] field of 'desc' is a string which doesn't convert to a number (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_145()
        {
            RunFile("15.2.3.6-4-145.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is an object which has an own toString method (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_146()
        {
            RunFile("15.2.3.6-4-146.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is an Object which has an own valueOf method (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_147()
        {
            RunFile("15.2.3.6-4-147.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is an Object which has an own valueOf method that returns an object and toString method that returns a string (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_148()
        {
            RunFile("15.2.3.6-4-148.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is an Object which has an own toString and valueOf method (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_149()
        {
            RunFile("15.2.3.6-4-149.js");
        }

        [Test(Description = "Object.defineProperty permits changing accessor property to data property for configurable properties")]
        public void _15_2_3_6_4_15()
        {
            RunFile("15.2.3.6-4-15.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test TypeError is thrown when the [[Value]] field of 'desc' is an Object that both toString and valueOf wouldn't return primitive value (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_150()
        {
            RunFile("15.2.3.6-4-150.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', and the [[Value]] field of 'desc' is an Object with an own toString method and an inherited valueOf method (15.4.5.1 step 3.c), test that the inherited valueOf method is used")]
        public void _15_2_3_6_4_151()
        {
            RunFile("15.2.3.6-4-151.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O',  test RangeError is thrown when the [[Value]] field of 'desc' is a positive non-integer values (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_152()
        {
            RunFile("15.2.3.6-4-152.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O',  test RangeError is thrown when the [[Value]] field of 'desc' is a negative non-integer values (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_153()
        {
            RunFile("15.2.3.6-4-153.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is boundary value 2^32 - 2 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_154()
        {
            RunFile("15.2.3.6-4-154.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test the [[Value]] field of 'desc' is boundary value 2^32 - 1 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_155()
        {
            RunFile("15.2.3.6-4-155.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError is thrown when the [[Value]] field of 'desc' is boundary value 2^32 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_156()
        {
            RunFile("15.2.3.6-4-156.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', test RangeError is thrown when the [[Value]] field of 'desc' is boundary value 2^32 + 1 (15.4.5.1 step 3.c)")]
        public void _15_2_3_6_4_157()
        {
            RunFile("15.2.3.6-4-157.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', set the [[Value]] field of 'desc' to a value greater than the existing value of length (15.4.5.1 step 3.f)")]
        public void _15_2_3_6_4_159()
        {
            RunFile("15.2.3.6-4-159.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when relaxing [[Writable]] on non-configurable data properties")]
        public void _15_2_3_6_4_16()
        {
            RunFile("15.2.3.6-4-16.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', set the [[Value]] field of 'desc' to a value equal to the existing value of length (15.4.5.1 step 3.f)")]
        public void _15_2_3_6_4_160()
        {
            RunFile("15.2.3.6-4-160.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', set the [[Value]] field of 'desc' to a value lesser than the existing value of length and test that indexes beyond the new length are deleted(15.4.5.1 step 3.f)")]
        public void _15_2_3_6_4_161()
        {
            RunFile("15.2.3.6-4-161.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is greater than value of the length property, test TypeError is thrown when the length property is not writable (15.4.5.1 step 3.f.i)")]
        public void _15_2_3_6_4_162()
        {
            RunFile("15.2.3.6-4-162.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' equals to value of the length property, test no TypeError is thrown when the length property is not writable (15.4.5.1 step 3.f.i)")]
        public void _15_2_3_6_4_163()
        {
            RunFile("15.2.3.6-4-163.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test TypeError is thrown when the [[Writable]] attribute of the length property is false (15.4.5.1 step 3.g)")]
        public void _15_2_3_6_4_164()
        {
            RunFile("15.2.3.6-4-164.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property,  test the [[Writable]] attribute of the length property is set to true after deleting properties with large index named if the [[Writable]] field of 'desc' is absent (15.4.5.1 step 3.h)")]
        public void _15_2_3_6_4_165()
        {
            RunFile("15.2.3.6-4-165.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property,  test the [[Writable]] attribute of the length property is set to true after deleting properties with large index named if the [[Writable]] field of 'desc' is true (15.4.5.1 step 3.h)")]
        public void _15_2_3_6_4_166()
        {
            RunFile("15.2.3.6-4-166.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Writable]] attribute of the length property is set to false after deleting properties with large index named if the [[Writable]] field of 'desc' is false (15.4.5.1 step 3.i.ii)")]
        public void _15_2_3_6_4_167()
        {
            RunFile("15.2.3.6-4-167.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', whose writable attribute is being changed to false and the [[Value]] field of 'desc' is less than value of  the length property and also lesser than an index of the array which is set to configurable:false, test that new length is set to a value greater than the non-deletable index by 1, writable attribute of length is set to false and TypeError exception is thrown (15.4.5.1 step 3.i.iii)")]
        public void _15_2_3_6_4_168()
        {
            RunFile("15.2.3.6-4-168.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property and also lesser than an index of the array which is set to configurable: false, test that new length is set to a value greater than the non-deletable index by 1, and TypeError is thrown (15.4.5.1 step 3.l.i)")]
        public void _15_2_3_6_4_169()
        {
            RunFile("15.2.3.6-4-169.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing value of non-writable non-configurable data properties")]
        public void _15_2_3_6_4_17()
        {
            RunFile("15.2.3.6-4-17.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property and also lesser than an index of the array which is set to configurable: false, test that new length is set to a value greater than the non-deletable index by 1, writable attribute of length is set to false and TypeError exception is thrown (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_170()
        {
            RunFile("15.2.3.6-4-170.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of an inherited data property with large index named in 'O' can't stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_171()
        {
            RunFile("15.2.3.6-4-171.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of own data property with large index named in 'O' that overrides an inherited data property can stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_172()
        {
            RunFile("15.2.3.6-4-172.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of own data property with large index named in 'O' that overrides an inherited accessor property can stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_173()
        {
            RunFile("15.2.3.6-4-173.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of own accessor property with large index named in 'O' can stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_174()
        {
            RunFile("15.2.3.6-4-174.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of an inherited accessor property with large index named in 'O' can't stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_175()
        {
            RunFile("15.2.3.6-4-175.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of own accessor property with large index named in 'O' that overrides an inherited data property can stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_176()
        {
            RunFile("15.2.3.6-4-176.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Configurable]] attribute of own accessor property with large index named in 'O' that overrides an inherited accessor property can stop deleting index named properties (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_177()
        {
            RunFile("15.2.3.6-4-177.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the configurable large index named property of 'O' is deleted (15.4.5.1 step 3.l.ii)")]
        public void _15_2_3_6_4_178()
        {
            RunFile("15.2.3.6-4-178.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is greater than value of  the length property, test value of the length property is same as [[Value]] (15.4.5.1 step 3.l.iii.1)")]
        public void _15_2_3_6_4_179_1()
        {
            RunFile("15.2.3.6-4-179-1.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing setter of non-configurable accessor properties(8.12.9 step 11.a.i)")]
        public void _15_2_3_6_4_18()
        {
            RunFile("15.2.3.6-4-18.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is the length property of 'O', the [[Value]] field of 'desc' is less than value of  the length property, test the [[Writable]] attribute of the length property is set to false at last when the [[Writable]] field of 'desc' is false and 'O' doesn't contain non-configurable large index named property (15.4.5.1 step 3.m)")]
        public void _15_2_3_6_4_181()
        {
            RunFile("15.2.3.6-4-181.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is available String values that convert to numbers (15.4.5.1 step 4.a)")]
        public void _15_2_3_6_4_182()
        {
            RunFile("15.2.3.6-4-182.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is boundary value 2^32 - 2 (15.4.5.1 step 4.a)")]
        public void _15_2_3_6_4_183()
        {
            RunFile("15.2.3.6-4-183.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is boundary value 2^32 - 1 (15.4.5.1 step 4.a)")]
        public void _15_2_3_6_4_184()
        {
            RunFile("15.2.3.6-4-184.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is boundary value 2^32 (15.4.5.1 step 4.a)")]
        public void _15_2_3_6_4_185()
        {
            RunFile("15.2.3.6-4-185.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is boundary value 2^32 + 1 (15.4.5.1 step 4.a)")]
        public void _15_2_3_6_4_186()
        {
            RunFile("15.2.3.6-4-186.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test TypeError is not thrown if the [[Writable]] attribute of the length property in 'O' is false and value of 'name' is less than value of the length property (15.4.5.1 step 4.b)")]
        public void _15_2_3_6_4_187()
        {
            RunFile("15.2.3.6-4-187.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test TypeError is thrown if the [[Writable]] attribute of the length property in 'O' is false and value of 'name' equals to value of the length property (15.4.5.1 step 4.b)")]
        public void _15_2_3_6_4_188()
        {
            RunFile("15.2.3.6-4-188.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test TypeError is thrown if the [[Writable]] attribute of the length property in 'O' is false and value of 'name' is greater than value of the length property (15.4.5.1 step 4.b)")]
        public void _15_2_3_6_4_189()
        {
            RunFile("15.2.3.6-4-189.js");
        }

        [Test(Description = "Object.defineProperty permits setting a setter (if absent) of non-configurable accessor properties(8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_19()
        {
            RunFile("15.2.3.6-4-19.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own data property, test TypeError is thrown on updating the configurable attribute from false to true (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_190()
        {
            RunFile("15.2.3.6-4-190.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is an inherited data property, test that defining own index named property is successful (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_191()
        {
            RunFile("15.2.3.6-4-191.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own data property that overrides an inherited data property, test TypeError is thrown on updating the [[Configurable]] attribute from false to true (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_192()
        {
            RunFile("15.2.3.6-4-192.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own data property that overrides an inherited accessor property, test TypeError is thrown when update the [[Configurable]] attribute to true and value of [[Configurable]] attribute of original is false  (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_193()
        {
            RunFile("15.2.3.6-4-193.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own accessor property, test TypeError is thrown on updating the configurable attribute from false to true (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_194()
        {
            RunFile("15.2.3.6-4-194.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is an inherited accessor property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_195()
        {
            RunFile("15.2.3.6-4-195.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own accessor property that overrides an inherited data property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_196()
        {
            RunFile("15.2.3.6-4-196.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is own accessor property that overrides an inherited accessor property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_197()
        {
            RunFile("15.2.3.6-4-197.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O', test TypeError is thrown when 'O' is not extensible (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_198()
        {
            RunFile("15.2.3.6-4-198.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O', test 'name' is defined as data property when 'desc' is generic descriptor (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_199()
        {
            RunFile("15.2.3.6-4-199.js");
        }

        [Test(Description = "Object.defineProperty sets missing attributes to their default values (data properties)(8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_2()
        {
            RunFile("15.2.3.6-4-2.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing getter (if present) of non-configurable accessor properties(8.12.9 step 11.a.ii)")]
        public void _15_2_3_6_4_20()
        {
            RunFile("15.2.3.6-4-20.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O', test [[Value]] of 'name' property of 'Attributes' is set as undefined if [[Value]] is absent in data descriptor 'desc' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_200()
        {
            RunFile("15.2.3.6-4-200.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Writable]] is absent in data descriptor 'desc', test [[Writable]] attribute of  property 'name' is set to false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_201()
        {
            RunFile("15.2.3.6-4-201.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Enumerable]] is absent in data descriptor 'desc', test [[Enumerable]] of property 'name' is set to false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_202()
        {
            RunFile("15.2.3.6-4-202.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Configurable]] is absent in data descriptor 'desc', test [[Configurable]] of property 'name' is set to false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_203()
        {
            RunFile("15.2.3.6-4-203.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'desc' is data descriptor, test updating all attribute values of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_204()
        {
            RunFile("15.2.3.6-4-204.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Get]] is absent in accessor descriptor 'desc', test [[Get]] attribute of property 'name' is set to undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_205()
        {
            RunFile("15.2.3.6-4-205.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O', test [[Set]] of 'name' property in 'Attributes' is set as undefined if [[Set]] is absent in accessor descriptor 'desc' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_206()
        {
            RunFile("15.2.3.6-4-206.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Enumerable]] is absent in accessor descriptor 'desc', test [[Enumerable]] attribute of property 'name' is set to false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_207()
        {
            RunFile("15.2.3.6-4-207.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' property doesn't exist in 'O' and [[Configurable]] is absent in accessor descriptor 'desc', test [[Configurable]] attribute of property 'name' is set to false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_208()
        {
            RunFile("15.2.3.6-4-208.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'desc' is accessor descriptor, test updating all attribute values of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_209()
        {
            RunFile("15.2.3.6-4-209.js");
        }

        [Test(Description = "Object.defineProperty permits setting a getter (if absent) of non-configurable accessor properties(8.12.9 step 11.a.ii)")]
        public void _15_2_3_6_4_21()
        {
            RunFile("15.2.3.6-4-21.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' makes no change if every field in 'desc' is absent (name is data property) (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_210()
        {
            RunFile("15.2.3.6-4-210.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' makes no change if every field in 'desc' is absent(name is accessor property) (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_211()
        {
            RunFile("15.2.3.6-4-211.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' makes no change if the value of every field in 'desc' is the same value as the corresponding field in 'name'(desc is data property) (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_212()
        {
            RunFile("15.2.3.6-4-212.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' makes no change if the value of every field in 'desc' is the same value as the corresponding field in 'name'(desc is accessor property) (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_213()
        {
            RunFile("15.2.3.6-4-213.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property and its configurable and writable attributes are set to false, test TypeError is thrown when the type of the [[Value]] field of 'desc' is different from the type of the [[Value]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_214()
        {
            RunFile("15.2.3.6-4-214.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, both the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_215()
        {
            RunFile("15.2.3.6-4-215.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, both the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are null  (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_216()
        {
            RunFile("15.2.3.6-4-216.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, both the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are NaN  (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_217()
        {
            RunFile("15.2.3.6-4-217.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown when the [[Value]] field of 'desc' is +0, and the [[Value]] attribute value of 'name' is -0 (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_218()
        {
            RunFile("15.2.3.6-4-218.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown when the [[Value]] field of 'desc' is -0, and the [[Value]] attribute value of 'name' is +0 (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_219()
        {
            RunFile("15.2.3.6-4-219.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is existing own data property (8.12.9 step 1)")]
        public void _15_2_3_6_4_22()
        {
            RunFile("15.2.3.6-4-22.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two numbers with same vaule (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_220()
        {
            RunFile("15.2.3.6-4-220.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown  when the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two numbers with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_221()
        {
            RunFile("15.2.3.6-4-221.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two strings which have same length and same characters in corresponding positions (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_222()
        {
            RunFile("15.2.3.6-4-222.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown  when the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two strings with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_223()
        {
            RunFile("15.2.3.6-4-223.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two booleans with same value (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_224()
        {
            RunFile("15.2.3.6-4-224.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown when the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two booleans with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_225()
        {
            RunFile("15.2.3.6-4-225.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two objects which refer to the same object (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_226()
        {
            RunFile("15.2.3.6-4-226.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, test TypeError is thrown when the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two objects which refer to two different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_227()
        {
            RunFile("15.2.3.6-4-227.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Writable]] field of 'desc' and the [[Writable]] attribute value of 'name' are two booleans with same value (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_228()
        {
            RunFile("15.2.3.6-4-228.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Writable]] field of 'desc' and the [[Writable]] attribute value of 'name' are two booleans with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_229()
        {
            RunFile("15.2.3.6-4-229.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is existing an inherited data property (8.12.9 step 1)")]
        public void _15_2_3_6_4_23()
        {
            RunFile("15.2.3.6-4-23.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Get]] field of 'desc' and the [[Get]] attribute value of 'name' are two objects which refer to the same object (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_230()
        {
            RunFile("15.2.3.6-4-230.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Get]] field of 'desc' and the [[Get]] attribute value of 'name' are two objects which refer to the different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_231()
        {
            RunFile("15.2.3.6-4-231.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Set]] field of 'desc' and the [[Set]] attribute value of 'name' are two objects which refer to the same object (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_232()
        {
            RunFile("15.2.3.6-4-232.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Set]] field of 'desc' and the [[Set]] attribute value of 'name' are two objects which refer to the different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_233()
        {
            RunFile("15.2.3.6-4-233.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Enumerable]] field of 'desc' and the [[Enumerable]] attribute value of 'name' are two booleans with same value (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_234()
        {
            RunFile("15.2.3.6-4-234.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Enumerable]] field of 'desc' and the [[Enumerable]] attribute value of 'name' are two booleans with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_235()
        {
            RunFile("15.2.3.6-4-235.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Configurable]] field of 'desc' and the [[Configurable]] attribute value of 'name' are two booleans with same value  (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_236()
        {
            RunFile("15.2.3.6-4-236.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index property, the [[Configurable]] field of 'desc' and the [[Configurable]] attribute value of 'name' are two booleans with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_237()
        {
            RunFile("15.2.3.6-4-237.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, TypeError is thrown if the [[Configurable]] attribute value of 'name' is false  and the [[Configurable]] field of 'desc' is true (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_238()
        {
            RunFile("15.2.3.6-4-238.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, TypeError is thrown if the [[Configurable]] attribute value of 'name' is false, and [[Enumerable]] of 'desc' is present and its value is different from the [[Enumerable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_239()
        {
            RunFile("15.2.3.6-4-239.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own data property that overrides an inherited data property (8.12.9 step 1)")]
        public void _15_2_3_6_4_24()
        {
            RunFile("15.2.3.6-4-24.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, TypeError is thrown if 'name' is accessor property, and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_240()
        {
            RunFile("15.2.3.6-4-240.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, TypeError is thrown if  'name' is data property, and'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_241()
        {
            RunFile("15.2.3.6-4-241.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property,  'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is true, test 'name' is updated successfully (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_242_1()
        {
            RunFile("15.2.3.6-4-242-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property,  'name' is data property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is true, test 'name' is converted from data property to accessor property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_242()
        {
            RunFile("15.2.3.6-4-242.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property,  'name' is accessor property and  assignment to the accessor property, fails to convert accessor property from accessor property to data property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_243_1()
        {
            RunFile("15.2.3.6-4-243-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property,  'name' is accessor property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is true, test 'name' is converted from accessor property to data property (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_243()
        {
            RunFile("15.2.3.6-4-243.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false and the [[Writable]] field of 'desc' is true (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_244()
        {
            RunFile("15.2.3.6-4-244.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the type of the [[Value]] field of 'desc' is different from the type of the [[Value]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_245()
        {
            RunFile("15.2.3.6-4-245.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' is +0, and the [[Value]] attribute value of 'name' is -0 (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_246()
        {
            RunFile("15.2.3.6-4-246.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' is -0, and the [[Value]] attribute value of 'name' is +0 (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_247()
        {
            RunFile("15.2.3.6-4-247.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two numbers with different vaules (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_248()
        {
            RunFile("15.2.3.6-4-248.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two strings with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_249()
        {
            RunFile("15.2.3.6-4-249.js");
        }

        [Test(Description = "Object.defineProperty - 'data' is own data property that overrides an inherited accessor property (8.12.9 step 1)")]
        public void _15_2_3_6_4_25()
        {
            RunFile("15.2.3.6-4-25.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two booleans with different values (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_250()
        {
            RunFile("15.2.3.6-4-250.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is data property and 'desc' is data descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Writable]] attribute value of 'name' is false, and the [[Value]] field of 'desc' and the [[Value]] attribute value of 'name' are two objects which refer to the different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_251()
        {
            RunFile("15.2.3.6-4-251.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Set]] field of 'desc' is present, and the [[Set]] field of 'desc' and the [[Set]] attribute value of 'name' are two objects which refer to the different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_252()
        {
            RunFile("15.2.3.6-4-252.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Set]] field of 'desc' is present, and the [[Set]] field of 'desc' is an object and the [[Set]] attribute value of 'name' is undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_253()
        {
            RunFile("15.2.3.6-4-253.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is not thrown if the [[Set]] field of 'desc' is present, and the [[Set]] field of 'desc' and the [[Set]] attribute value of 'name' are undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_254()
        {
            RunFile("15.2.3.6-4-254.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Get]] field of 'desc' is present, and the [[Get]] field of 'desc' and the [[Get]] attribute value of 'name' are two objects which refer to the different objects (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_255()
        {
            RunFile("15.2.3.6-4-255.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is thrown if the [[Get]] field of 'desc' is present, and the [[Get]] field of 'desc' is an object and the [[Get]] attribute value of 'name' is undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_256()
        {
            RunFile("15.2.3.6-4-256.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, 'name' is accessor property and 'desc' is accessor descriptor, and the [[Configurable]] attribute value of 'name' is false, test TypeError is not thrown if the [[Get]] field of 'desc' is present, and the [[Get]] field of 'desc' and the [[Get]] attribute value of 'name' are undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_257()
        {
            RunFile("15.2.3.6-4-257.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test updating the [[Value]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_258()
        {
            RunFile("15.2.3.6-4-258.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test setting the [[Value]] attribute value of 'name' as undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_259()
        {
            RunFile("15.2.3.6-4-259.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own accessor property (8.12.9 step 1)")]
        public void _15_2_3_6_4_26()
        {
            RunFile("15.2.3.6-4-26.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test setting the [[Value]] attribute value of 'name' from undefined to number (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_260()
        {
            RunFile("15.2.3.6-4-260.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test updating the [[Writable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_261()
        {
            RunFile("15.2.3.6-4-261.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test updating the [[Enumerable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_262()
        {
            RunFile("15.2.3.6-4-262.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test updating the [[Configurable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_263()
        {
            RunFile("15.2.3.6-4-263.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is data property and 'desc' is data descriptor, test updating multiple attribute values of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_264()
        {
            RunFile("15.2.3.6-4-264.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Get]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_265()
        {
            RunFile("15.2.3.6-4-265.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test setting the [[Get]] attribute value of 'name' as undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_266()
        {
            RunFile("15.2.3.6-4-266.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Get]] attribute value of 'name' from undefined to function object (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_267()
        {
            RunFile("15.2.3.6-4-267.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Set]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_268()
        {
            RunFile("15.2.3.6-4-268.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test setting the [[Set]] attribute value of 'name' as undefined (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_269()
        {
            RunFile("15.2.3.6-4-269.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is an inherited accessor property (8.12.9 step 1)")]
        public void _15_2_3_6_4_27()
        {
            RunFile("15.2.3.6-4-27.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Set]] attribute value of 'name' from undefined to function object (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_270()
        {
            RunFile("15.2.3.6-4-270.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Enumerable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_271()
        {
            RunFile("15.2.3.6-4-271.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating the [[Configurable]] attribute value of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_272()
        {
            RunFile("15.2.3.6-4-272.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, name is accessor property and 'desc' is accessor descriptor, test updating multiple attribute values of 'name' (15.4.5.1 step 4.c)")]
        public void _15_2_3_6_4_273()
        {
            RunFile("15.2.3.6-4-273.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test the length property of 'O' is not changed if ToUint32('name') is less than value of the length property in 'O' (15.4.5.1 step 4.e)")]
        public void _15_2_3_6_4_274()
        {
            RunFile("15.2.3.6-4-274.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test the length property of 'O' is set as ToUint32('name') + 1 if ToUint32('name') equals to value of the length property in 'O' (15.4.5.1 step 4.e.ii)")]
        public void _15_2_3_6_4_275()
        {
            RunFile("15.2.3.6-4-275.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is an array index named property, test the length property of 'O' is set as ToUint32('name') + 1 if ToUint32('name') is greater than value of the length property in 'O' (15.4.5.1 step 4.e.ii)")]
        public void _15_2_3_6_4_276()
        {
            RunFile("15.2.3.6-4-276.js");
        }

        [Test(Description = "Object.defineProperty -  'O' is an Array, 'name' is generic property that won't exist on 'O', and 'desc' is data descriptor, test 'name' is defined in 'O' with all correct attribute values (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_277()
        {
            RunFile("15.2.3.6-4-277.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is generic property that won't exist on 'O', and 'desc' is accessor descriptor, test 'name' is defined in 'O' with all correct attribute values (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_278()
        {
            RunFile("15.2.3.6-4-278.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own accessor property of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'name' (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_279()
        {
            RunFile("15.2.3.6-4-279.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own accessor property that overrides an inherited data property (8.12.9 step 1)")]
        public void _15_2_3_6_4_28()
        {
            RunFile("15.2.3.6-4-28.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own data property of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'name' (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_280()
        {
            RunFile("15.2.3.6-4-280.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own data property of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'name' which is defined as non-writable and non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_281()
        {
            RunFile("15.2.3.6-4-281.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own data property of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_282()
        {
            RunFile("15.2.3.6-4-282.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own data property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_283()
        {
            RunFile("15.2.3.6-4-283.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own data property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_284()
        {
            RunFile("15.2.3.6-4-284.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own accessor property of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_285()
        {
            RunFile("15.2.3.6-4-285.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own accessor property of 'O', and 'desc' is accessor descriptor, test TypeError is thrown when updating the [[Set]] attribute value of 'name' (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_286()
        {
            RunFile("15.2.3.6-4-286.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own accessor property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_287()
        {
            RunFile("15.2.3.6-4-287.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array, 'name' is generic own accessor property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (15.4.5.1 step 5)")]
        public void _15_2_3_6_4_288()
        {
            RunFile("15.2.3.6-4-288.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own property which is defined in both [[ParameterMap]] of 'O' and 'O', and is deleted afterwards, and 'desc' is data descriptor, test 'name' is redefined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_289_1()
        {
            RunFile("15.2.3.6-4-289-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own property of 'O', and is deleted afterwards, and 'desc' is data descriptor, test 'name' is redefined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_289()
        {
            RunFile("15.2.3.6-4-289.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own accessor property that overrides an inherited accessor property (8.12.9 step 1)")]
        public void _15_2_3_6_4_29()
        {
            RunFile("15.2.3.6-4-29.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own property which is defined in both [[ParameterMap]] of 'O' and 'O', is deleted afterwards, and 'desc' is accessor descriptor, test 'name' is redefined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_290_1()
        {
            RunFile("15.2.3.6-4-290-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own property of 'O', and is deleted afterwards, and 'desc' is accessor descriptor, test 'name' is redefined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_290()
        {
            RunFile("15.2.3.6-4-290.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own accessor property of 'O' which is also defined in [[ParameterMap]] of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3 and 5.a.i)")]
        public void _15_2_3_6_4_291_1()
        {
            RunFile("15.2.3.6-4-291-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own accessor property of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_291()
        {
            RunFile("15.2.3.6-4-291.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own property of 'O' which is also defined in [[ParameterMap]] of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3 and 5.b)")]
        public void _15_2_3_6_4_292_1()
        {
            RunFile("15.2.3.6-4-292-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_292()
        {
            RunFile("15.2.3.6-4-292.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', test TypeError is not thrown when updating the [[Value]] attribute value of 'name' which is defined as non-writable and configurable (10.6 [[DefineOwnProperty]] step 3 and 5b)")]
        public void _15_2_3_6_4_293_1()
        {
            RunFile("15.2.3.6-4-293-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'name' which is defined as unwritable and non-configurable (10.6 [[DefineOwnProperty]] step 4 and step 5b)")]
        public void _15_2_3_6_4_293_2()
        {
            RunFile("15.2.3.6-4-293-2.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is not thrown when updating the [[Value]] attribute value of 'name' which is defined as non-writable and configurable (10.6 [[DefineOwnProperty]] step 3 and step 5.b)")]
        public void _15_2_3_6_4_293_3()
        {
            RunFile("15.2.3.6-4-293-3.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'name' which is defined as non-writable and non-configurable (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_293()
        {
            RunFile("15.2.3.6-4-293.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4 and 5b)")]
        public void _15_2_3_6_4_294_1()
        {
            RunFile("15.2.3.6-4-294-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_294()
        {
            RunFile("15.2.3.6-4-294.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4 and step 5b)")]
        public void _15_2_3_6_4_295_1()
        {
            RunFile("15.2.3.6-4-295-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_295()
        {
            RunFile("15.2.3.6-4-295.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4 and step 5b)")]
        public void _15_2_3_6_4_296_1()
        {
            RunFile("15.2.3.6-4-296-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own data property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_296()
        {
            RunFile("15.2.3.6-4-296.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own accessor property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4 and step 5a)")]
        public void _15_2_3_6_4_297_1()
        {
            RunFile("15.2.3.6-4-297-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own accessor property of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_297()
        {
            RunFile("15.2.3.6-4-297.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own accessor property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Set]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] steps 4 and 5a)")]
        public void _15_2_3_6_4_298_1()
        {
            RunFile("15.2.3.6-4-298-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own accessor property of 'O', test TypeError is thrown when updating the [[Set]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_298()
        {
            RunFile("15.2.3.6-4-298.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own accessor property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] steps 4 and 5a)")]
        public void _15_2_3_6_4_299_1()
        {
            RunFile("15.2.3.6-4-299-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own accessor property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_299()
        {
            RunFile("15.2.3.6-4-299.js");
        }

        [Test(Description = "Object.defineProperty sets missing attributes to their default values (accessor)(8.12.9 step 4.b.i)")]
        public void _15_2_3_6_4_3()
        {
            RunFile("15.2.3.6-4-3.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own accessor property without a get function (8.12.9 step 1)")]
        public void _15_2_3_6_4_30()
        {
            RunFile("15.2.3.6-4-30.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own accessor property of 'O' which is also defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4 and step 5a)")]
        public void _15_2_3_6_4_300_1()
        {
            RunFile("15.2.3.6-4-300-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own accessor property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is defined as non-configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_300()
        {
            RunFile("15.2.3.6-4-300.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is an index named property of 'O', and 'desc' is data descriptor, test 'name' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_301_1()
        {
            RunFile("15.2.3.6-4-301-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an array index named property of 'O' but not defined in [[ParameterMap]] of 'O', and 'desc' is data descriptor, test 'name' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_301()
        {
            RunFile("15.2.3.6-4-301.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is an index named property of 'O' but not defined in [[ParameterMap]] of 'O', and 'desc' is accessor descriptor, test 'name' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3 and step 5a)")]
        public void _15_2_3_6_4_302_1()
        {
            RunFile("15.2.3.6-4-302-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named property of 'O' but not defined in [[ParameterMap]] of 'O', and 'desc' is accessor descriptor, test 'name' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_302()
        {
            RunFile("15.2.3.6-4-302.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named accessor property of 'O' but not defined in [[ParameterMap]] of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_303()
        {
            RunFile("15.2.3.6-4-303.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named data property of 'O' but not defined in [[ParameterMap]] of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'name' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_304()
        {
            RunFile("15.2.3.6-4-304.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named data property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'name' which is not writable and not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_305()
        {
            RunFile("15.2.3.6-4-305.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named data property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_306()
        {
            RunFile("15.2.3.6-4-306.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named data property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_307()
        {
            RunFile("15.2.3.6-4-307.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named data property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_308()
        {
            RunFile("15.2.3.6-4-308.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named accessor property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_309()
        {
            RunFile("15.2.3.6-4-309.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is own accessor property without a get function that overrides an inherited accessor property(8.12.9 step 1)")]
        public void _15_2_3_6_4_31()
        {
            RunFile("15.2.3.6-4-31.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named accessor property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Set]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_310()
        {
            RunFile("15.2.3.6-4-310.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named accessor property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_311()
        {
            RunFile("15.2.3.6-4-311.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is an index named accessor property of 'O' but not defined in [[ParameterMap]] of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_312()
        {
            RunFile("15.2.3.6-4-312.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own property, and 'desc' is data descriptor, test 'P' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_313_1()
        {
            RunFile("15.2.3.6-4-313-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is generic property, and 'desc' is data descriptor, test 'P' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_313()
        {
            RunFile("15.2.3.6-4-313.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is property, and 'desc' is accessor descriptor, test 'P' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_314_1()
        {
            RunFile("15.2.3.6-4-314-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is generic property, and 'desc' is accessor descriptor, test 'P' is defined in 'O' with all correct attribute values (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_314()
        {
            RunFile("15.2.3.6-4-314.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'P' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_315_1()
        {
            RunFile("15.2.3.6-4-315-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is generic own accessor property of 'O', and 'desc' is accessor descriptor, test updating multiple attribute values of 'P' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_315()
        {
            RunFile("15.2.3.6-4-315.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own data property of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'P' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_316_1()
        {
            RunFile("15.2.3.6-4-316-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is generic own data property of 'O', and 'desc' is data descriptor, test updating multiple attribute values of 'P' (10.6 [[DefineOwnProperty]] step 3)")]
        public void _15_2_3_6_4_316()
        {
            RunFile("15.2.3.6-4-316.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own data property of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'P' which is not writable and not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_317_1()
        {
            RunFile("15.2.3.6-4-317-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is generic own data property of 'O', test TypeError is thrown when updating the [[Value]] attribute value of 'P' which is not writable and not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_317()
        {
            RunFile("15.2.3.6-4-317.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'name' is own data property of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_318_1()
        {
            RunFile("15.2.3.6-4-318-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is generic own data property of 'O', test TypeError is thrown when updating the [[Writable]] attribute value of 'name' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_318()
        {
            RunFile("15.2.3.6-4-318.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own data property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_319_1()
        {
            RunFile("15.2.3.6-4-319-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is own data property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_319()
        {
            RunFile("15.2.3.6-4-319.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is an inherited accessor property without a get function (8.12.9 step 1)")]
        public void _15_2_3_6_4_32()
        {
            RunFile("15.2.3.6-4-32.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own data property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_320_1()
        {
            RunFile("15.2.3.6-4-320-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is own data property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_320()
        {
            RunFile("15.2.3.6-4-320.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_321_1()
        {
            RunFile("15.2.3.6-4-321-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Get]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_321()
        {
            RunFile("15.2.3.6-4-321.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Set]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_322_1()
        {
            RunFile("15.2.3.6-4-322-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Set]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_322()
        {
            RunFile("15.2.3.6-4-322.js");
        }

        [Test(Description = "Object.defineProperty - ''O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_323_1()
        {
            RunFile("15.2.3.6-4-323-1.js");
        }

        [Test(Description = "Object.defineProperty - ''O' is an Arguments object, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Enumerable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_323()
        {
            RunFile("15.2.3.6-4-323.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object of a function that has formal parameters, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_324_1()
        {
            RunFile("15.2.3.6-4-324-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'P' is own accessor property of 'O', test TypeError is thrown when updating the [[Configurable]] attribute value of 'P' which is not configurable (10.6 [[DefineOwnProperty]] step 4)")]
        public void _15_2_3_6_4_324()
        {
            RunFile("15.2.3.6-4-324.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object which created with function take formal parameters, 'name' is own property of [[ParameterMap]] of 'O', test 'name' is deleted if 'name' is configurable and 'desc' is accessor descriptor (10.6 [[DefineOwnProperty]] step 5.a.i)")]
        public void _15_2_3_6_4_325_1()
        {
            RunFile("15.2.3.6-4-325-1.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object, 'name' is own property of [[ParameterMap]] of 'O', test 'name' is deleted if 'name' is configurable and 'desc' is accessor descriptor (10.6 [[DefineOwnProperty]] step 5.a.i)")]
        public void _15_2_3_6_4_325()
        {
            RunFile("15.2.3.6-4-325.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) is writable")]
        public void _15_2_3_6_4_326()
        {
            RunFile("15.2.3.6-4-326.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_327()
        {
            RunFile("15.2.3.6-4-327.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_328()
        {
            RunFile("15.2.3.6-4-328.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Writable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_329()
        {
            RunFile("15.2.3.6-4-329.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a Function object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_33()
        {
            RunFile("15.2.3.6-4-33.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[enumerable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_330()
        {
            RunFile("15.2.3.6-4-330.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_331()
        {
            RunFile("15.2.3.6-4-331.js");
        }

        [Test(Description = "ES5 Attributes - success to update the data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is true) to an accessor property")]
        public void _15_2_3_6_4_332()
        {
            RunFile("15.2.3.6-4-332.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of named property 'P' successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'O' is an Object object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_1()
        {
            RunFile("15.2.3.6-4-333-1.js");
        }

        [Test(Description = "ES5 Attributes - indexed data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false is writable using simple assignment, 'O' is an Arguments object")]
        public void _15_2_3_6_4_333_10()
        {
            RunFile("15.2.3.6-4-333-10.js");
        }

        [Test(Description = "ES5 Attributes - indexed property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false is writable using simple assignment, 'O' is an Arguments object")]
        public void _15_2_3_6_4_333_11()
        {
            RunFile("15.2.3.6-4-333-11.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property 'P' successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'A' is an Array object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_2()
        {
            RunFile("15.2.3.6-4-333-2.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of named property 'P' successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'O' is an Arguments object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_3()
        {
            RunFile("15.2.3.6-4-333-3.js");
        }

        [Test(Description = "Indexed property 'P' with attributes [[Writable]]: true, [[Enumerable]]:true, [[Configurable]]:false is writable using simple assignment, 'A' is an Array Object")]
        public void _15_2_3_6_4_333_4()
        {
            RunFile("15.2.3.6-4-333-4.js");
        }

        [Test(Description = "ES5 Attributes - named data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false is writable using simple assignment, 'O' is an Arguments object")]
        public void _15_2_3_6_4_333_5()
        {
            RunFile("15.2.3.6-4-333-5.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property 'P' successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'O' is an Object object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_6()
        {
            RunFile("15.2.3.6-4-333-6.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of named property 'P' successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'A' is an Array object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_7()
        {
            RunFile("15.2.3.6-4-333-7.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property 'P'successfully when [[Configurable]] attribute is false, [[Writable]] attribute is true and 'O' is an Arguments object (8.12.9 - step 10)")]
        public void _15_2_3_6_4_333_8()
        {
            RunFile("15.2.3.6-4-333-8.js");
        }

        [Test(Description = "Object.defineProperty - Named property 'P' with attributes [[Writable]]: true, [[Enumerable]]:true, [[Configurable]]:false is writable using simple assignment, 'A' is an Array Object")]
        public void _15_2_3_6_4_333_9()
        {
            RunFile("15.2.3.6-4-333-9.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) is writable")]
        public void _15_2_3_6_4_333()
        {
            RunFile("15.2.3.6-4-333.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_334()
        {
            RunFile("15.2.3.6-4-334.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_335()
        {
            RunFile("15.2.3.6-4-335.js");
        }

        [Test(Description = "ES5 Attributes - Success to update [[Writable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_336()
        {
            RunFile("15.2.3.6-4-336.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_337()
        {
            RunFile("15.2.3.6-4-337.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_338()
        {
            RunFile("15.2.3.6-4-338.js");
        }

        [Test(Description = "Object.defineProperty - Updating indexed data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false to an accessor property does not succeed, 'A' is an Array object (8.12.9 - step 9.a)")]
        public void _15_2_3_6_4_339_1()
        {
            RunFile("15.2.3.6-4-339-1.js");
        }

        [Test(Description = "Object.defineProperty - Updating named data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false to an accessor property does not succeed, 'O' is an Arguments object (8.12.9 - step 9.a)")]
        public void _15_2_3_6_4_339_2()
        {
            RunFile("15.2.3.6-4-339-2.js");
        }

        [Test(Description = "Object.defineProperty - Updating named data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false to an accessor property does not succeed, 'A' is an Array object (8.12.9 - step 9.a)")]
        public void _15_2_3_6_4_339_3()
        {
            RunFile("15.2.3.6-4-339-3.js");
        }

        [Test(Description = "Object.defineProperty - Updating indexed data property 'P' with attributes [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false to an accessor property does not succeed, 'O' is an Arguments object (8.12.9 - step 9.a)")]
        public void _15_2_3_6_4_339_4()
        {
            RunFile("15.2.3.6-4-339-4.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the data property ([[Writable]] is true, [[Enumerable]] is true, [[Configurable]] is false) to an accessor property")]
        public void _15_2_3_6_4_339()
        {
            RunFile("15.2.3.6-4-339.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Array object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_34()
        {
            RunFile("15.2.3.6-4-34.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) is writable")]
        public void _15_2_3_6_4_340()
        {
            RunFile("15.2.3.6-4-340.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_341()
        {
            RunFile("15.2.3.6-4-341.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_342()
        {
            RunFile("15.2.3.6-4-342.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Writable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_343()
        {
            RunFile("15.2.3.6-4-343.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_344()
        {
            RunFile("15.2.3.6-4-344.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_345()
        {
            RunFile("15.2.3.6-4-345.js");
        }

        [Test(Description = "ES5 Attributes - success to update the data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is true) to an accessor property")]
        public void _15_2_3_6_4_346()
        {
            RunFile("15.2.3.6-4-346.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) is writable")]
        public void _15_2_3_6_4_347()
        {
            RunFile("15.2.3.6-4-347.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_348()
        {
            RunFile("15.2.3.6-4-348.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_349()
        {
            RunFile("15.2.3.6-4-349.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a String object which implements its own [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_35()
        {
            RunFile("15.2.3.6-4-35.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Writable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_350()
        {
            RunFile("15.2.3.6-4-350.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_351()
        {
            RunFile("15.2.3.6-4-351.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_352()
        {
            RunFile("15.2.3.6-4-352.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the data property ([[Writable]] is true, [[Enumerable]] is false, [[Configurable]] is false) to an accessor property")]
        public void _15_2_3_6_4_353()
        {
            RunFile("15.2.3.6-4-353.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of named property 'P' successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is an Object object (8.12.9 step - Note)")]
        public void _15_2_3_6_4_354_1()
        {
            RunFile("15.2.3.6-4-354-1.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property 'P' successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is an Object object (8.12.9 step - Note)")]
        public void _15_2_3_6_4_354_10()
        {
            RunFile("15.2.3.6-4-354-10.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of named property 'P' successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'A' is an Array object (8.12.9 step - Note)")]
        public void _15_2_3_6_4_354_11()
        {
            RunFile("15.2.3.6-4-354-11.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is an Arguments object (8.12.9 - step Note)")]
        public void _15_2_3_6_4_354_12()
        {
            RunFile("15.2.3.6-4-354-12.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is the global object (8.12.9 - step Note)")]
        public void _15_2_3_6_4_354_13()
        {
            RunFile("15.2.3.6-4-354-13.js");
        }

        [Test(Description = "Object.defineProperty - Named property 'P' with attributes [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true is non-writable using simple assignment, 'A' is an Array object")]
        public void _15_2_3_6_4_354_15()
        {
            RunFile("15.2.3.6-4-354-15.js");
        }

        [Test(Description = "ES5 Attributes - property 'P' is an indexed data property with attributes [[Writable]]: false, [[Enumerable]]: true, [[Configurable]] : true) is non-writable using simple assignment, 'O' is an Arguments object")]
        public void _15_2_3_6_4_354_16()
        {
            RunFile("15.2.3.6-4-354-16.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute of indexed property 'P' successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'A' is an Array object (8.12.9 step - Note)")]
        public void _15_2_3_6_4_354_2()
        {
            RunFile("15.2.3.6-4-354-2.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is an Arguments object (8.12.9 - step Note)")]
        public void _15_2_3_6_4_354_3()
        {
            RunFile("15.2.3.6-4-354-3.js");
        }

        [Test(Description = "Object.defineProperty will update [[Value]] attribute successfully when [[Configurable]] attribute is true and [[Writable]] attribute is false, 'O' is the global object (8.12.9 - step Note)")]
        public void _15_2_3_6_4_354_4()
        {
            RunFile("15.2.3.6-4-354-4.js");
        }

        [Test(Description = "Object.defineProperty - Indexed property 'P' with attributes [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true is non-writable using simple assignment, 'A' is an Array object")]
        public void _15_2_3_6_4_354_6()
        {
            RunFile("15.2.3.6-4-354-6.js");
        }

        [Test(Description = "ES5 Attributes - property 'P' with attributes [[Writable]]: false, [[Enumerable]]: true, [[Configurable]] : true) is non-writable using simple assignment, 'O' is an Arguments object")]
        public void _15_2_3_6_4_354_7()
        {
            RunFile("15.2.3.6-4-354-7.js");
        }

        [Test(Description = "ES5 Attributes - property 'P' with attributes [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true is non-writable using simple assignment, 'O' is the global object")]
        public void _15_2_3_6_4_354_8()
        {
            RunFile("15.2.3.6-4-354-8.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) is unwritable")]
        public void _15_2_3_6_4_354()
        {
            RunFile("15.2.3.6-4-354.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_355()
        {
            RunFile("15.2.3.6-4-355.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_356()
        {
            RunFile("15.2.3.6-4-356.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Writable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_357()
        {
            RunFile("15.2.3.6-4-357.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_358()
        {
            RunFile("15.2.3.6-4-358.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_359()
        {
            RunFile("15.2.3.6-4-359.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a Boolean object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_36()
        {
            RunFile("15.2.3.6-4-36.js");
        }

        [Test(Description = "ES5 Attributes - Updating indexed data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'A' is an Array object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_1()
        {
            RunFile("15.2.3.6-4-360-1.js");
        }

        [Test(Description = "ES5 Attributes - Updating data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'O' is an Arguments object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_2()
        {
            RunFile("15.2.3.6-4-360-2.js");
        }

        [Test(Description = "ES5 Attributes - Updating data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'O' is the global object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_3()
        {
            RunFile("15.2.3.6-4-360-3.js");
        }

        [Test(Description = "ES5 Attributes - Updating named data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'A' is an Array object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_5()
        {
            RunFile("15.2.3.6-4-360-5.js");
        }

        [Test(Description = "ES5 Attributes - Updating indexed data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'O' is an Arguments object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_6()
        {
            RunFile("15.2.3.6-4-360-6.js");
        }

        [Test(Description = "ES5 Attributes - Updating indexed data property 'P' whose attributes are [[Writable]]: false, [[Enumerable]]: true, [[Configurable]]: true to an accessor property, 'O' is the global object (8.12.9 - step 9.b.i)")]
        public void _15_2_3_6_4_360_7()
        {
            RunFile("15.2.3.6-4-360-7.js");
        }

        [Test(Description = "ES5 Attributes - success to update the data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is true) to an accessor property")]
        public void _15_2_3_6_4_360()
        {
            RunFile("15.2.3.6-4-360.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) is unwritable")]
        public void _15_2_3_6_4_361()
        {
            RunFile("15.2.3.6-4-361.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_362()
        {
            RunFile("15.2.3.6-4-362.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_363()
        {
            RunFile("15.2.3.6-4-363.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Writable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_364()
        {
            RunFile("15.2.3.6-4-364.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_365()
        {
            RunFile("15.2.3.6-4-365.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_366()
        {
            RunFile("15.2.3.6-4-366.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the data property ([[Writable]] is false, [[Enumerable]] is true, [[Configurable]] is false) to an accessor property")]
        public void _15_2_3_6_4_367()
        {
            RunFile("15.2.3.6-4-367.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) is unwritable")]
        public void _15_2_3_6_4_368()
        {
            RunFile("15.2.3.6-4-368.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_369()
        {
            RunFile("15.2.3.6-4-369.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a Number object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_37()
        {
            RunFile("15.2.3.6-4-37.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_370()
        {
            RunFile("15.2.3.6-4-370.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Writable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_371()
        {
            RunFile("15.2.3.6-4-371.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_372()
        {
            RunFile("15.2.3.6-4-372.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_373()
        {
            RunFile("15.2.3.6-4-373.js");
        }

        [Test(Description = "ES5 Attributes - success to update the data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is true) to an accessor property")]
        public void _15_2_3_6_4_374()
        {
            RunFile("15.2.3.6-4-374.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) is unwritable")]
        public void _15_2_3_6_4_375()
        {
            RunFile("15.2.3.6-4-375.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_376()
        {
            RunFile("15.2.3.6-4-376.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_377()
        {
            RunFile("15.2.3.6-4-377.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Writable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_378()
        {
            RunFile("15.2.3.6-4-378.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_379()
        {
            RunFile("15.2.3.6-4-379.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is the Math object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_38()
        {
            RunFile("15.2.3.6-4-38.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_380()
        {
            RunFile("15.2.3.6-4-380.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the data property ([[Writable]] is false, [[Enumerable]] is false, [[Configurable]] is false) to an accessor property")]
        public void _15_2_3_6_4_381()
        {
            RunFile("15.2.3.6-4-381.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a number")]
        public void _15_2_3_6_4_382()
        {
            RunFile("15.2.3.6-4-382.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a string")]
        public void _15_2_3_6_4_383()
        {
            RunFile("15.2.3.6-4-383.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a boolean")]
        public void _15_2_3_6_4_384()
        {
            RunFile("15.2.3.6-4-384.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a generic object")]
        public void _15_2_3_6_4_385()
        {
            RunFile("15.2.3.6-4-385.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is an Array object")]
        public void _15_2_3_6_4_386()
        {
            RunFile("15.2.3.6-4-386.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a String object")]
        public void _15_2_3_6_4_387()
        {
            RunFile("15.2.3.6-4-387.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a Number object")]
        public void _15_2_3_6_4_388()
        {
            RunFile("15.2.3.6-4-388.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a Boolean Object")]
        public void _15_2_3_6_4_389()
        {
            RunFile("15.2.3.6-4-389.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a Date object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_39()
        {
            RunFile("15.2.3.6-4-39.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a Function object")]
        public void _15_2_3_6_4_390()
        {
            RunFile("15.2.3.6-4-390.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is an Error object")]
        public void _15_2_3_6_4_391()
        {
            RunFile("15.2.3.6-4-391.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a Date object")]
        public void _15_2_3_6_4_392()
        {
            RunFile("15.2.3.6-4-392.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is a RegExp object")]
        public void _15_2_3_6_4_393()
        {
            RunFile("15.2.3.6-4-393.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is undefined")]
        public void _15_2_3_6_4_394()
        {
            RunFile("15.2.3.6-4-394.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is null")]
        public void _15_2_3_6_4_395()
        {
            RunFile("15.2.3.6-4-395.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is NaN")]
        public void _15_2_3_6_4_396()
        {
            RunFile("15.2.3.6-4-396.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is Infinity")]
        public void _15_2_3_6_4_397()
        {
            RunFile("15.2.3.6-4-397.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is -Infinity")]
        public void _15_2_3_6_4_398()
        {
            RunFile("15.2.3.6-4-398.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of data property is the global object")]
        public void _15_2_3_6_4_399()
        {
            RunFile("15.2.3.6-4-399.js");
        }

        [Test(Description = "Object.defineProperty defines a data property if given a generic desc(8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_4()
        {
            RunFile("15.2.3.6-4-4.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is a RegExp object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_40()
        {
            RunFile("15.2.3.6-4-40.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of inherited property of [[Prototype]] internal property is correct (String instance)")]
        public void _15_2_3_6_4_402()
        {
            RunFile("15.2.3.6-4-402.js");
        }

        [Test(Description = "ES5 Attributes - Successfully add a property to an object when the object's prototype has a property with same name and [[Writable]] attribute is set to true (Array instance)")]
        public void _15_2_3_6_4_403()
        {
            RunFile("15.2.3.6-4-403.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to true is enumerable (Boolean instance)")]
        public void _15_2_3_6_4_404()
        {
            RunFile("15.2.3.6-4-404.js");
        }

        [Test(Description = "ES5 Attributes - Failed to add a property to an object when the object's object has a property with same name and [[Writable]] attribute is set to false (Number instance)")]
        public void _15_2_3_6_4_405()
        {
            RunFile("15.2.3.6-4-405.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to false is non-enumerable (Function instance)")]
        public void _15_2_3_6_4_406()
        {
            RunFile("15.2.3.6-4-406.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of inherited property of [[Prototype]] internal property is correct (Error Instance)")]
        public void _15_2_3_6_4_407()
        {
            RunFile("15.2.3.6-4-407.js");
        }

        [Test(Description = "ES5 Attributes - Successfully add a property to an object when the object's prototype has a property with same name and [[Writable]] attribute is set to true (Date instance)")]
        public void _15_2_3_6_4_408()
        {
            RunFile("15.2.3.6-4-408.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to false is enumerable (RegExp instance)")]
        public void _15_2_3_6_4_409()
        {
            RunFile("15.2.3.6-4-409.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is the JSON object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_41()
        {
            RunFile("15.2.3.6-4-41.js");
        }

        [Test(Description = "ES5 Attributes - Failed to add a property to an object when the object's prototype has a property with the same name and [[Writable]] set to false (JSON)")]
        public void _15_2_3_6_4_410()
        {
            RunFile("15.2.3.6-4-410.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to false is non-enumerable (Math)")]
        public void _15_2_3_6_4_411()
        {
            RunFile("15.2.3.6-4-411.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] field of inherited property of [[Prototype]] internal property is correct(Object.create)")]
        public void _15_2_3_6_4_412()
        {
            RunFile("15.2.3.6-4-412.js");
        }

        [Test(Description = "ES5 Attributes - Successfully add a property to an object when the object's prototype has a property with the same name and [[Writable]] set to true (Object.create)")]
        public void _15_2_3_6_4_413()
        {
            RunFile("15.2.3.6-4-413.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to true is enumerable (Object.create)")]
        public void _15_2_3_6_4_414()
        {
            RunFile("15.2.3.6-4-414.js");
        }

        [Test(Description = "ES5 Attributes - Failed to add properties to an object when the object's prototype has properties with the same name and [[Writable]] set to false (Object.create)")]
        public void _15_2_3_6_4_415()
        {
            RunFile("15.2.3.6-4-415.js");
        }

        [Test(Description = "ES5 Attributes - Inherited properties whose [[Enumerable]] attribute is set to false is non-enumerable (Object.create)")]
        public void _15_2_3_6_4_416()
        {
            RunFile("15.2.3.6-4-416.js");
        }

        [Test(Description = "ES5 Attributes - [[Value]] attribute of inherited property of [[Prototype]] internal property is correct(Function.prototype.bind)")]
        public void _15_2_3_6_4_417()
        {
            RunFile("15.2.3.6-4-417.js");
        }

        [Test(Description = "ES5 Attributes - Successfully add a property to an object when the object's prototype has a property with the same name and [[Writable]] set to true (Function.prototype.bind)")]
        public void _15_2_3_6_4_418()
        {
            RunFile("15.2.3.6-4-418.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to true is enumerable (Function.prototype.bind)")]
        public void _15_2_3_6_4_419()
        {
            RunFile("15.2.3.6-4-419.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Error object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_42()
        {
            RunFile("15.2.3.6-4-42.js");
        }

        [Test(Description = "ES5 Attributes - Failed to add a property to an object when the object's prototype has a property with the same name and [[Writable]] set to false(Function.prototype.bind)")]
        public void _15_2_3_6_4_420()
        {
            RunFile("15.2.3.6-4-420.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property whose [[Enumerable]] attribute is set to false is non-enumerable (Function.prototype.bind)")]
        public void _15_2_3_6_4_421()
        {
            RunFile("15.2.3.6-4-421.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_422()
        {
            RunFile("15.2.3.6-4-422.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_423()
        {
            RunFile("15.2.3.6-4-423.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_424()
        {
            RunFile("15.2.3.6-4-424.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_425()
        {
            RunFile("15.2.3.6-4-425.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_426()
        {
            RunFile("15.2.3.6-4-426.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_427()
        {
            RunFile("15.2.3.6-4-427.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_428()
        {
            RunFile("15.2.3.6-4-428.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_429()
        {
            RunFile("15.2.3.6-4-429.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is an Arguments object which implements its own [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_43()
        {
            RunFile("15.2.3.6-4-43.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_430()
        {
            RunFile("15.2.3.6-4-430.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_431()
        {
            RunFile("15.2.3.6-4-431.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_432()
        {
            RunFile("15.2.3.6-4-432.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_433()
        {
            RunFile("15.2.3.6-4-433.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_434()
        {
            RunFile("15.2.3.6-4-434.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_435()
        {
            RunFile("15.2.3.6-4-435.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_436()
        {
            RunFile("15.2.3.6-4-436.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_437()
        {
            RunFile("15.2.3.6-4-437.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_438()
        {
            RunFile("15.2.3.6-4-438.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_439()
        {
            RunFile("15.2.3.6-4-439.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_440()
        {
            RunFile("15.2.3.6-4-440.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_441()
        {
            RunFile("15.2.3.6-4-441.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_442()
        {
            RunFile("15.2.3.6-4-442.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_443()
        {
            RunFile("15.2.3.6-4-443.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_444()
        {
            RunFile("15.2.3.6-4-444.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_445()
        {
            RunFile("15.2.3.6-4-445.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_446()
        {
            RunFile("15.2.3.6-4-446.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_447()
        {
            RunFile("15.2.3.6-4-447.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_448()
        {
            RunFile("15.2.3.6-4-448.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_449()
        {
            RunFile("15.2.3.6-4-449.js");
        }

        [Test(Description = "Object.defineProperty - 'O' is the global object that uses Object's [[GetOwnProperty]] method to access the 'name' property (8.12.9 step 1)")]
        public void _15_2_3_6_4_45()
        {
            RunFile("15.2.3.6-4-45.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_450()
        {
            RunFile("15.2.3.6-4-450.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_451()
        {
            RunFile("15.2.3.6-4-451.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_452()
        {
            RunFile("15.2.3.6-4-452.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_453()
        {
            RunFile("15.2.3.6-4-453.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_454()
        {
            RunFile("15.2.3.6-4-454.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_455()
        {
            RunFile("15.2.3.6-4-455.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_456()
        {
            RunFile("15.2.3.6-4-456.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is undefined, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_457()
        {
            RunFile("15.2.3.6-4-457.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_458()
        {
            RunFile("15.2.3.6-4-458.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_459()
        {
            RunFile("15.2.3.6-4-459.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is defined as data property if 'name' property doesn't exist in 'O' and 'desc' is generic descriptor (8.12.9 step 4.a)")]
        public void _15_2_3_6_4_46()
        {
            RunFile("15.2.3.6-4-46.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_460()
        {
            RunFile("15.2.3.6-4-460.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_461()
        {
            RunFile("15.2.3.6-4-461.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_462()
        {
            RunFile("15.2.3.6-4-462.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_463()
        {
            RunFile("15.2.3.6-4-463.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_464()
        {
            RunFile("15.2.3.6-4-464.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_465()
        {
            RunFile("15.2.3.6-4-465.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_466()
        {
            RunFile("15.2.3.6-4-466.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_467()
        {
            RunFile("15.2.3.6-4-467.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_468()
        {
            RunFile("15.2.3.6-4-468.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_469()
        {
            RunFile("15.2.3.6-4-469.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', [[Value]] of 'name' property is set as undefined if it is absent in data descriptor 'desc' (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_47()
        {
            RunFile("15.2.3.6-4-47.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_470()
        {
            RunFile("15.2.3.6-4-470.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_471()
        {
            RunFile("15.2.3.6-4-471.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_472()
        {
            RunFile("15.2.3.6-4-472.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_473()
        {
            RunFile("15.2.3.6-4-473.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_474()
        {
            RunFile("15.2.3.6-4-474.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_475()
        {
            RunFile("15.2.3.6-4-475.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_476()
        {
            RunFile("15.2.3.6-4-476.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_477()
        {
            RunFile("15.2.3.6-4-477.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_478()
        {
            RunFile("15.2.3.6-4-478.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_479()
        {
            RunFile("15.2.3.6-4-479.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Writable]] of 'name' property of 'Attributes' is set as false value if absent in data descriptor 'desc' (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_48()
        {
            RunFile("15.2.3.6-4-48.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_480()
        {
            RunFile("15.2.3.6-4-480.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_481()
        {
            RunFile("15.2.3.6-4-481.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_482()
        {
            RunFile("15.2.3.6-4-482.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_483()
        {
            RunFile("15.2.3.6-4-483.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_484()
        {
            RunFile("15.2.3.6-4-484.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_485()
        {
            RunFile("15.2.3.6-4-485.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_486()
        {
            RunFile("15.2.3.6-4-486.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_487()
        {
            RunFile("15.2.3.6-4-487.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_488()
        {
            RunFile("15.2.3.6-4-488.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_489()
        {
            RunFile("15.2.3.6-4-489.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Enumerable]] of 'name' property of 'Attributes' is set as false value if absent in data descriptor 'desc' (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_49()
        {
            RunFile("15.2.3.6-4-49.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_490()
        {
            RunFile("15.2.3.6-4-490.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_491()
        {
            RunFile("15.2.3.6-4-491.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_492()
        {
            RunFile("15.2.3.6-4-492.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is undefined, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_493()
        {
            RunFile("15.2.3.6-4-493.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_494()
        {
            RunFile("15.2.3.6-4-494.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_495()
        {
            RunFile("15.2.3.6-4-495.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_496()
        {
            RunFile("15.2.3.6-4-496.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_497()
        {
            RunFile("15.2.3.6-4-497.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_498()
        {
            RunFile("15.2.3.6-4-498.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_499()
        {
            RunFile("15.2.3.6-4-499.js");
        }

        [Test(Description = "Object.defineProperty is no-op if current and desc are the same data desc")]
        public void _15_2_3_6_4_5()
        {
            RunFile("15.2.3.6-4-5.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Configurable]] of 'name' property is set as false if it is absent in data descriptor 'desc' (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_50()
        {
            RunFile("15.2.3.6-4-50.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is  Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_500()
        {
            RunFile("15.2.3.6-4-500.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_501()
        {
            RunFile("15.2.3.6-4-501.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_502()
        {
            RunFile("15.2.3.6-4-502.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_503()
        {
            RunFile("15.2.3.6-4-503.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_504()
        {
            RunFile("15.2.3.6-4-504.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_505()
        {
            RunFile("15.2.3.6-4-505.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_506()
        {
            RunFile("15.2.3.6-4-506.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_507()
        {
            RunFile("15.2.3.6-4-507.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_508()
        {
            RunFile("15.2.3.6-4-508.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_509()
        {
            RunFile("15.2.3.6-4-509.js");
        }

        [Test(Description = "Object.defineProperty - desc is data descriptor, test updating all attribute values of 'name' (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_51()
        {
            RunFile("15.2.3.6-4-51.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_510()
        {
            RunFile("15.2.3.6-4-510.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is true, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_511()
        {
            RunFile("15.2.3.6-4-511.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_512()
        {
            RunFile("15.2.3.6-4-512.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is undefined")]
        public void _15_2_3_6_4_513()
        {
            RunFile("15.2.3.6-4-513.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_514()
        {
            RunFile("15.2.3.6-4-514.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_515()
        {
            RunFile("15.2.3.6-4-515.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_516()
        {
            RunFile("15.2.3.6-4-516.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_517()
        {
            RunFile("15.2.3.6-4-517.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_518()
        {
            RunFile("15.2.3.6-4-518.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_519()
        {
            RunFile("15.2.3.6-4-519.js");
        }

        [Test(Description = "Object.defineProperty - 'desc' is generic descriptor without any attribute, test 'name' is defined in 'obj' with all default attribute values (8.12.9 step 4.a.i)")]
        public void _15_2_3_6_4_52()
        {
            RunFile("15.2.3.6-4-52.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_520()
        {
            RunFile("15.2.3.6-4-520.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_521()
        {
            RunFile("15.2.3.6-4-521.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is undefined")]
        public void _15_2_3_6_4_522()
        {
            RunFile("15.2.3.6-4-522.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_523()
        {
            RunFile("15.2.3.6-4-523.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_524()
        {
            RunFile("15.2.3.6-4-524.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_525()
        {
            RunFile("15.2.3.6-4-525.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_526()
        {
            RunFile("15.2.3.6-4-526.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_527()
        {
            RunFile("15.2.3.6-4-527.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_528()
        {
            RunFile("15.2.3.6-4-528.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is a Function, [[Set]] is undefined, [[Enumerable]] is false, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_529()
        {
            RunFile("15.2.3.6-4-529.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Get]] of 'name' property is set as undefined if it is absent in accessor descriptor 'desc' (8.12.9 step 4.b)")]
        public void _15_2_3_6_4_53()
        {
            RunFile("15.2.3.6-4-53.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_530()
        {
            RunFile("15.2.3.6-4-530.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of named accessor property 'P' successfully when [[Configurable]] attribute is true, 'O' is an Object object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_1()
        {
            RunFile("15.2.3.6-4-531-1.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of indexed accessor property 'P' successfully when [[Configurable]] attribute is true, 'O' is an Object object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_10()
        {
            RunFile("15.2.3.6-4-531-10.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of named accessor property 'P' successfully when [[Configurable]] attribute is true, 'A' is an Array object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_11()
        {
            RunFile("15.2.3.6-4-531-11.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of indexed accessor property successfully when [[Configurable]] attribute is true, 'O' is an Arguments object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_12()
        {
            RunFile("15.2.3.6-4-531-12.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of indexed accessor property 'P' successfully when [[Configurable]] attribute is true, 'O' is the global object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_13()
        {
            RunFile("15.2.3.6-4-531-13.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' using simple assignment is successful, 'A' is an Array object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_15()
        {
            RunFile("15.2.3.6-4-531-15.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' using simple assignment, 'O' is an Arguments object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_16()
        {
            RunFile("15.2.3.6-4-531-16.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' using simple assignment is successful, 'O' is the global object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_17()
        {
            RunFile("15.2.3.6-4-531-17.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of indexed accessor property 'P' successfully when [[Configurable]] attribute is true, 'A' is an Array object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_2()
        {
            RunFile("15.2.3.6-4-531-2.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of named accessor property successfully when [[Configurable]] attribute is true, 'O' is an Arguments object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_3()
        {
            RunFile("15.2.3.6-4-531-3.js");
        }

        [Test(Description = "Object.defineProperty will update [[Get]] and [[Set]] attributes of named accessor property 'P' successfully when [[Configurable]] attribute is true, 'O' is the global object (8.12.9 step 11)")]
        public void _15_2_3_6_4_531_4()
        {
            RunFile("15.2.3.6-4-531-4.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' without [[Set]] using simple assignment is failed, 'A' is an Array object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_6()
        {
            RunFile("15.2.3.6-4-531-6.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' without [[Set]] using simple assignment is failed, 'O' is an Arguments object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_7()
        {
            RunFile("15.2.3.6-4-531-7.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' without [[Set]] using simple assignment is failed, 'O' is the global object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_531_8()
        {
            RunFile("15.2.3.6-4-531-8.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_531()
        {
            RunFile("15.2.3.6-4-531.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is enumerable")]
        public void _15_2_3_6_4_532()
        {
            RunFile("15.2.3.6-4-532.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_533()
        {
            RunFile("15.2.3.6-4-533.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_534()
        {
            RunFile("15.2.3.6-4-534.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_535()
        {
            RunFile("15.2.3.6-4-535.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_536()
        {
            RunFile("15.2.3.6-4-536.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_537()
        {
            RunFile("15.2.3.6-4-537.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed 'P' whose [[Configurable]] attribute is true to a data property is successful, 'A' is an Array object (8.12.9 - step 9.c.i)")]
        public void _15_2_3_6_4_538_1()
        {
            RunFile("15.2.3.6-4-538-1.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' whose [[Configurable]] attribute is true to a data property is successful, 'O' is an Arguments object")]
        public void _15_2_3_6_4_538_2()
        {
            RunFile("15.2.3.6-4-538-2.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' whose [[Configurable]] attribute is true to a data property is successful, 'O' is the global object")]
        public void _15_2_3_6_4_538_3()
        {
            RunFile("15.2.3.6-4-538-3.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' whose [[Configurable]] attribute is true to a data property is successful, 'A' is an Array object (8.12.9 - step 9.c.i)")]
        public void _15_2_3_6_4_538_5()
        {
            RunFile("15.2.3.6-4-538-5.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' whose [[Configurable]] attribute is true to a data property is successful, 'O' is an Arguments object")]
        public void _15_2_3_6_4_538_6()
        {
            RunFile("15.2.3.6-4-538-6.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' whose [[Configurable]] attribute is true to a data property is successful, 'O' is the global object")]
        public void _15_2_3_6_4_538_7()
        {
            RunFile("15.2.3.6-4-538-7.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_538()
        {
            RunFile("15.2.3.6-4-538.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_539()
        {
            RunFile("15.2.3.6-4-539.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Set]] of 'name' property of 'Attributes' is set as undefined value if absent in accessor descriptor 'desc' (8.12.9 step 4.b.i)")]
        public void _15_2_3_6_4_54()
        {
            RunFile("15.2.3.6-4-54.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of a named accessor property 'P' whose [[Configurable]] attribute is false and throws TypeError exception, 'O' is an Object object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_1()
        {
            RunFile("15.2.3.6-4-540-1.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' using simple assignment is successful, 'O' is an Arguments object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_540_10()
        {
            RunFile("15.2.3.6-4-540-10.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of an indexed property 'P' whose [[Configurable]] attribute is false and throws TypeError exception, 'A' is an Array object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_2()
        {
            RunFile("15.2.3.6-4-540-2.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of a named accessor property 'P' whose [[Configurable]] attribute is false, 'O' is an Arguments object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_3()
        {
            RunFile("15.2.3.6-4-540-3.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' using simple assignment is successful, 'A' is an Array object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_540_4()
        {
            RunFile("15.2.3.6-4-540-4.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' using simple assignment is successful, 'O' is an Arguments object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_540_5()
        {
            RunFile("15.2.3.6-4-540-5.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of an indexed accessor property 'P' whose [[Configurable]] attribute is false and throws TypeError exception, 'O' is an Object object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_6()
        {
            RunFile("15.2.3.6-4-540-6.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of a named property 'P' whose [[Configurable]] attribute is false and throws TypeError exception, 'A' is an Array object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_7()
        {
            RunFile("15.2.3.6-4-540-7.js");
        }

        [Test(Description = "Object.defineProperty fails to update [[Get]] and [[Set]] attributes of an indexed accessor property 'P' whose [[Configurable]] attribute is false, 'O' is an Arguments object (8.12.9 step 11.a)")]
        public void _15_2_3_6_4_540_8()
        {
            RunFile("15.2.3.6-4-540-8.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' using simple assignment is successful, 'A' is an Array object (8.12.5 step 5.b)")]
        public void _15_2_3_6_4_540_9()
        {
            RunFile("15.2.3.6-4-540-9.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_540()
        {
            RunFile("15.2.3.6-4-540.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is enumerable")]
        public void _15_2_3_6_4_541()
        {
            RunFile("15.2.3.6-4-541.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_542()
        {
            RunFile("15.2.3.6-4-542.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_543()
        {
            RunFile("15.2.3.6-4-543.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_544()
        {
            RunFile("15.2.3.6-4-544.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_545()
        {
            RunFile("15.2.3.6-4-545.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_546()
        {
            RunFile("15.2.3.6-4-546.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' whose [[Configurable]] attribute is false to a data property does not succeed, 'A' is an Array object (8.12.9 step 9.a)")]
        public void _15_2_3_6_4_547_1()
        {
            RunFile("15.2.3.6-4-547-1.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' whose [[Configurable]] attribute is false to a data property does not succeed, 'A' is an Arguments object (8.12.9 step 9.a)")]
        public void _15_2_3_6_4_547_2()
        {
            RunFile("15.2.3.6-4-547-2.js");
        }

        [Test(Description = "ES5 Attributes - Updating a named accessor property 'P' whose [[Configurable]] attribute is false to a data property does not succeed, 'A' is an Array object (8.12.9 step 9.a)")]
        public void _15_2_3_6_4_547_3()
        {
            RunFile("15.2.3.6-4-547-3.js");
        }

        [Test(Description = "ES5 Attributes - Updating an indexed accessor property 'P' whose [[Configurable]] attribute is false to a data property does not succeed, 'A' is an Arguments object (8.12.9 step 9.a)")]
        public void _15_2_3_6_4_547_4()
        {
            RunFile("15.2.3.6-4-547-4.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is true, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_547()
        {
            RunFile("15.2.3.6-4-547.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_548()
        {
            RunFile("15.2.3.6-4-548.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is the expected function")]
        public void _15_2_3_6_4_549()
        {
            RunFile("15.2.3.6-4-549.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Enumerable]] of 'name' property of 'Attributes' is set as false value if absent in accessor descriptor 'desc' (8.12.9 step 4.b.i)")]
        public void _15_2_3_6_4_55()
        {
            RunFile("15.2.3.6-4-55.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is non-enumerable")]
        public void _15_2_3_6_4_550()
        {
            RunFile("15.2.3.6-4-550.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) is deletable")]
        public void _15_2_3_6_4_551()
        {
            RunFile("15.2.3.6-4-551.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_552()
        {
            RunFile("15.2.3.6-4-552.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_553()
        {
            RunFile("15.2.3.6-4-553.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_554()
        {
            RunFile("15.2.3.6-4-554.js");
        }

        [Test(Description = "ES5 Attributes - success to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to different value")]
        public void _15_2_3_6_4_555()
        {
            RunFile("15.2.3.6-4-555.js");
        }

        [Test(Description = "ES5 Attributes - success to update the accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is true) to a data property")]
        public void _15_2_3_6_4_556()
        {
            RunFile("15.2.3.6-4-556.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_557()
        {
            RunFile("15.2.3.6-4-557.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is the expected function")]
        public void _15_2_3_6_4_558()
        {
            RunFile("15.2.3.6-4-558.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is non-enumerable")]
        public void _15_2_3_6_4_559()
        {
            RunFile("15.2.3.6-4-559.js");
        }

        [Test(Description = "Object.defineProperty - 'name' property doesn't exist in 'O', test [[Configurable]] of 'name' property is set as false if it is absent in accessor descriptor 'desc' (8.12.9 step 4.b.i)")]
        public void _15_2_3_6_4_56()
        {
            RunFile("15.2.3.6-4-56.js");
        }

        [Test(Description = "ES5 Attributes - property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) is undeletable")]
        public void _15_2_3_6_4_560()
        {
            RunFile("15.2.3.6-4-560.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Get]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_561()
        {
            RunFile("15.2.3.6-4-561.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Set]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_562()
        {
            RunFile("15.2.3.6-4-562.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Enumerable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_563()
        {
            RunFile("15.2.3.6-4-563.js");
        }

        [Test(Description = "ES5 Attributes - fail to update [[Configurable]] attribute of accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to different value")]
        public void _15_2_3_6_4_564()
        {
            RunFile("15.2.3.6-4-564.js");
        }

        [Test(Description = "ES5 Attributes - fail to update the accessor property ([[Get]] is a Function, [[Set]] is a Function, [[Enumerable]] is false, [[Configurable]] is false) to a data property")]
        public void _15_2_3_6_4_565()
        {
            RunFile("15.2.3.6-4-565.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which has zero argument")]
        public void _15_2_3_6_4_566()
        {
            RunFile("15.2.3.6-4-566.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which has one argument")]
        public void _15_2_3_6_4_567()
        {
            RunFile("15.2.3.6-4-567.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which has two arguments")]
        public void _15_2_3_6_4_568()
        {
            RunFile("15.2.3.6-4-568.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which contains global variable")]
        public void _15_2_3_6_4_569()
        {
            RunFile("15.2.3.6-4-569.js");
        }

        [Test(Description = "Object.defineProperty - 'desc' is accessor descriptor, test updating all attribute values of 'name' (8.12.9 step 4.b.i)")]
        public void _15_2_3_6_4_57()
        {
            RunFile("15.2.3.6-4-57.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which doesn't contains return statement")]
        public void _15_2_3_6_4_570()
        {
            RunFile("15.2.3.6-4-570.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] attribute is a function which involves 'this' object into statement(s)")]
        public void _15_2_3_6_4_571()
        {
            RunFile("15.2.3.6-4-571.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which has zero argument")]
        public void _15_2_3_6_4_572()
        {
            RunFile("15.2.3.6-4-572.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which has one argument")]
        public void _15_2_3_6_4_573()
        {
            RunFile("15.2.3.6-4-573.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which has two arguments")]
        public void _15_2_3_6_4_574()
        {
            RunFile("15.2.3.6-4-574.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which contains global variable")]
        public void _15_2_3_6_4_575()
        {
            RunFile("15.2.3.6-4-575.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which contains return statement")]
        public void _15_2_3_6_4_576()
        {
            RunFile("15.2.3.6-4-576.js");
        }

        [Test(Description = "ES5 Attributes - [[Set]] attribute is a function which involves 'this' object into statement(s)")]
        public void _15_2_3_6_4_577()
        {
            RunFile("15.2.3.6-4-577.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] field of inherited property of [[Prototype]] internal property is correct (String instance)")]
        public void _15_2_3_6_4_578()
        {
            RunFile("15.2.3.6-4-578.js");
        }

        [Test(Description = "ES5 Attributes - Success to add property into object (Array instance)")]
        public void _15_2_3_6_4_579()
        {
            RunFile("15.2.3.6-4-579.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is data descriptor and every fields in 'desc' is absent (8.12.9 step 5)")]
        public void _15_2_3_6_4_58()
        {
            RunFile("15.2.3.6-4-58.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is enumerable (Boolean instance)")]
        public void _15_2_3_6_4_580()
        {
            RunFile("15.2.3.6-4-580.js");
        }

        [Test(Description = "ES5 Attributes - Fail to add property into object (Number instance)")]
        public void _15_2_3_6_4_581()
        {
            RunFile("15.2.3.6-4-581.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is non-enumerable (Function instance)")]
        public void _15_2_3_6_4_582()
        {
            RunFile("15.2.3.6-4-582.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] field of inherited property of [[Prototype]] internal property is correct (Error Instance)")]
        public void _15_2_3_6_4_583()
        {
            RunFile("15.2.3.6-4-583.js");
        }

        [Test(Description = "ES5 Attributes - Failed to add property into object (Date instance)")]
        public void _15_2_3_6_4_584()
        {
            RunFile("15.2.3.6-4-584.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is enumerable (RegExp instance)")]
        public void _15_2_3_6_4_585()
        {
            RunFile("15.2.3.6-4-585.js");
        }

        [Test(Description = "ES5 Attributes - Fail to update value of property into of [[Proptotype]] internal property  (JSON)")]
        public void _15_2_3_6_4_586()
        {
            RunFile("15.2.3.6-4-586.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is non-enumerable (Math)")]
        public void _15_2_3_6_4_587()
        {
            RunFile("15.2.3.6-4-587.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] field of inherited property of [[Prototype]] internal property is correct (Object.create)")]
        public void _15_2_3_6_4_588()
        {
            RunFile("15.2.3.6-4-588.js");
        }

        [Test(Description = "ES5 Attributes - Success to update value of property into of [[Proptotype]] internal property (Object.create)")]
        public void _15_2_3_6_4_589()
        {
            RunFile("15.2.3.6-4-589.js");
        }

        [Test(Description = "Object.defineProperty - 'name' is accessor descriptor and every fields in 'desc' is absent (8.12.9 step 5)")]
        public void _15_2_3_6_4_59()
        {
            RunFile("15.2.3.6-4-59.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is enumerable (Object.create)")]
        public void _15_2_3_6_4_590()
        {
            RunFile("15.2.3.6-4-590.js");
        }

        [Test(Description = "ES5 Attributes - Fail to update value of property of [[Proptotype]] internal property (Object.create)")]
        public void _15_2_3_6_4_591()
        {
            RunFile("15.2.3.6-4-591.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is non-enumerable (Object.create)")]
        public void _15_2_3_6_4_592()
        {
            RunFile("15.2.3.6-4-592.js");
        }

        [Test(Description = "ES5 Attributes - [[Get]] field of inherited property of [[Prototype]] internal property is correct (Function.prototype.bind)")]
        public void _15_2_3_6_4_593()
        {
            RunFile("15.2.3.6-4-593.js");
        }

        [Test(Description = "ES5 Attributes - Success to update value of property into of [[Proptotype]] internal property (Function.prototype.bind)")]
        public void _15_2_3_6_4_594()
        {
            RunFile("15.2.3.6-4-594.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is enumerable (Function.prototype.bind)")]
        public void _15_2_3_6_4_595()
        {
            RunFile("15.2.3.6-4-595.js");
        }

        [Test(Description = "ES5 Attributes - Fail to update value of property into of [[Proptotype]] internal property (Function.prototype.bind)")]
        public void _15_2_3_6_4_596()
        {
            RunFile("15.2.3.6-4-596.js");
        }

        [Test(Description = "ES5 Attributes - Inherited property is non-enumerable (Function.prototype.bind)")]
        public void _15_2_3_6_4_597()
        {
            RunFile("15.2.3.6-4-597.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.getPrototypeOf are correct")]
        public void _15_2_3_6_4_598()
        {
            RunFile("15.2.3.6-4-598.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.getOwnPropertyDescriptor are correct")]
        public void _15_2_3_6_4_599()
        {
            RunFile("15.2.3.6-4-599.js");
        }

        [Test(Description = "Object.defineProperty is no-op if current and desc are the same accessor desc")]
        public void _15_2_3_6_4_6()
        {
            RunFile("15.2.3.6-4-6.js");
        }

        [Test(Description = "Object.defineProperty - type of desc.value is different from type of name.value (8.12.9 step 6)")]
        public void _15_2_3_6_4_60()
        {
            RunFile("15.2.3.6-4-60.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.getOwnPropertyNames are correct")]
        public void _15_2_3_6_4_600()
        {
            RunFile("15.2.3.6-4-600.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.create are correct")]
        public void _15_2_3_6_4_601()
        {
            RunFile("15.2.3.6-4-601.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.defineProperty are correct")]
        public void _15_2_3_6_4_602()
        {
            RunFile("15.2.3.6-4-602.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.defineProperties are correct")]
        public void _15_2_3_6_4_603()
        {
            RunFile("15.2.3.6-4-603.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.seal are correct")]
        public void _15_2_3_6_4_604()
        {
            RunFile("15.2.3.6-4-604.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.freeze are correct")]
        public void _15_2_3_6_4_605()
        {
            RunFile("15.2.3.6-4-605.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.preventExtensions are correct")]
        public void _15_2_3_6_4_606()
        {
            RunFile("15.2.3.6-4-606.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.isSealed are correct")]
        public void _15_2_3_6_4_607()
        {
            RunFile("15.2.3.6-4-607.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.isFrozen are correct")]
        public void _15_2_3_6_4_608()
        {
            RunFile("15.2.3.6-4-608.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.isExtensible are correct")]
        public void _15_2_3_6_4_609()
        {
            RunFile("15.2.3.6-4-609.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are undefined (8.12.9 step 6)")]
        public void _15_2_3_6_4_61()
        {
            RunFile("15.2.3.6-4-61.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.keys are correct")]
        public void _15_2_3_6_4_610()
        {
            RunFile("15.2.3.6-4-610.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Function.prototype.bind are correct")]
        public void _15_2_3_6_4_611()
        {
            RunFile("15.2.3.6-4-611.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.indexOf are correct")]
        public void _15_2_3_6_4_612()
        {
            RunFile("15.2.3.6-4-612.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Object.lastIndexOf are correct")]
        public void _15_2_3_6_4_613()
        {
            RunFile("15.2.3.6-4-613.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.every are correct")]
        public void _15_2_3_6_4_614()
        {
            RunFile("15.2.3.6-4-614.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.some are correct")]
        public void _15_2_3_6_4_615()
        {
            RunFile("15.2.3.6-4-615.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.forEach are correct")]
        public void _15_2_3_6_4_616()
        {
            RunFile("15.2.3.6-4-616.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.map are correct")]
        public void _15_2_3_6_4_617()
        {
            RunFile("15.2.3.6-4-617.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.filter are correct")]
        public void _15_2_3_6_4_618()
        {
            RunFile("15.2.3.6-4-618.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.reduce are correct")]
        public void _15_2_3_6_4_619()
        {
            RunFile("15.2.3.6-4-619.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are null (8.12.9 step 6)")]
        public void _15_2_3_6_4_62()
        {
            RunFile("15.2.3.6-4-62.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Array.prototype.reduceRight are correct")]
        public void _15_2_3_6_4_620()
        {
            RunFile("15.2.3.6-4-620.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in String.prototype.trim are correct")]
        public void _15_2_3_6_4_621()
        {
            RunFile("15.2.3.6-4-621.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Date.now are correct")]
        public void _15_2_3_6_4_622()
        {
            RunFile("15.2.3.6-4-622.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Date.prototype.toISOString are correct")]
        public void _15_2_3_6_4_623()
        {
            RunFile("15.2.3.6-4-623.js");
        }

        [Test(Description = "ES5 Attributes - all attributes in Date.prototype.toJSON are correct")]
        public void _15_2_3_6_4_624()
        {
            RunFile("15.2.3.6-4-624.js");
        }

        [Test(Description = "Globally declared variable should take precedence over Object.prototype property of the same name")]
        public void _15_2_3_6_4_625gs()
        {
            RunFile("15.2.3.6-4-625gs.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are NaN (8.12.9 step 6)")]
        public void _15_2_3_6_4_63()
        {
            RunFile("15.2.3.6-4-63.js");
        }

        [Test(Description = "Object.defineProperty - desc.value = +0 and name.value = -0 (8.12.9 step 6)")]
        public void _15_2_3_6_4_64()
        {
            RunFile("15.2.3.6-4-64.js");
        }

        [Test(Description = "Object.defineProperty - desc.value = -0 and name.value = +0 (8.12.9 step 6)")]
        public void _15_2_3_6_4_65()
        {
            RunFile("15.2.3.6-4-65.js");
        }

        [Test(Description = "Object.defineProperty - desc.value and name.value are two numbers with different values (8.12.9 step 6)")]
        public void _15_2_3_6_4_66()
        {
            RunFile("15.2.3.6-4-66.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are two strings which have same length and same characters in corresponding positions (8.12.9 step 6)")]
        public void _15_2_3_6_4_67()
        {
            RunFile("15.2.3.6-4-67.js");
        }

        [Test(Description = "Object.defineProperty - desc.value and name.value are two strings with different values (8.12.9 step 6)")]
        public void _15_2_3_6_4_68()
        {
            RunFile("15.2.3.6-4-68.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are boolean values with the same value (8.12.9 step 6)")]
        public void _15_2_3_6_4_69()
        {
            RunFile("15.2.3.6-4-69.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing [[Configurable]] from false to true")]
        public void _15_2_3_6_4_7()
        {
            RunFile("15.2.3.6-4-7.js");
        }

        [Test(Description = "Object.defineProperty - desc.value and name.value are two boolean values with different values (8.12.9 step 6)")]
        public void _15_2_3_6_4_70()
        {
            RunFile("15.2.3.6-4-70.js");
        }

        [Test(Description = "Object.defineProperty - both desc.value and name.value are Ojbects which refer to the same Object (8.12.9 step 6)")]
        public void _15_2_3_6_4_71()
        {
            RunFile("15.2.3.6-4-71.js");
        }

        [Test(Description = "Object.defineProperty - desc.value and name.value are two Ojbects which refer to the different objects (8.12.9 step 6)")]
        public void _15_2_3_6_4_72()
        {
            RunFile("15.2.3.6-4-72.js");
        }

        [Test(Description = "Object.defineProperty - both desc.writable and name.writable are boolean values with the same value (8.12.9 step 6)")]
        public void _15_2_3_6_4_73()
        {
            RunFile("15.2.3.6-4-73.js");
        }

        [Test(Description = "Object.defineProperty - desc.writable and name.writable are two boolean values with different values (8.12.9 step 6)")]
        public void _15_2_3_6_4_74()
        {
            RunFile("15.2.3.6-4-74.js");
        }

        [Test(Description = "Object.defineProperty - both desc.[[Get]] and name.[[Get]] are two objects which refer to the same object (8.12.9 step 6)")]
        public void _15_2_3_6_4_75()
        {
            RunFile("15.2.3.6-4-75.js");
        }

        [Test(Description = "Object.defineProperty - desc.[[Get]] and name.[[Get]] are two objects which refer to the different objects (8.12.9 step 6)")]
        public void _15_2_3_6_4_76()
        {
            RunFile("15.2.3.6-4-76.js");
        }

        [Test(Description = "Object.defineProperty - both desc.[[Set]] and name.[[Set]] are two objects which refer to the same object (8.12.9 step 6)")]
        public void _15_2_3_6_4_77()
        {
            RunFile("15.2.3.6-4-77.js");
        }

        [Test(Description = "Object.defineProperty - desc.[[Set]] and name.[[Set]] are two objects which refer to the different objects (8.12.9 step 6)")]
        public void _15_2_3_6_4_78()
        {
            RunFile("15.2.3.6-4-78.js");
        }

        [Test(Description = "Object.defineProperty - both desc.enumerable and name.enumerable are boolean values with the same value (8.12.9 step 6)")]
        public void _15_2_3_6_4_79()
        {
            RunFile("15.2.3.6-4-79.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing [[Enumerable]] from false to true on non-configurable data properties")]
        public void _15_2_3_6_4_8()
        {
            RunFile("15.2.3.6-4-8.js");
        }

        [Test(Description = "Object.defineProperty - desc.enumerable and name.enumerable are boolean negation of each other (8.12.9 step 6)")]
        public void _15_2_3_6_4_80()
        {
            RunFile("15.2.3.6-4-80.js");
        }

        [Test(Description = "Object.defineProperty - both desc.configurable and name.configurable are booleans with the same value (8.12.9 step 6)")]
        public void _15_2_3_6_4_81()
        {
            RunFile("15.2.3.6-4-81.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as false, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_1()
        {
            RunFile("15.2.3.6-4-82-1.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as true and [[Configurable]] attribute is false, 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_10()
        {
            RunFile("15.2.3.6-4-82-10.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] and [[Configurable]] attributes of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] and [[Configurable]] attributes as false, 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_11()
        {
            RunFile("15.2.3.6-4-82-11.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attributes of 'name' property to true successfully when [[Enumerable]] attribute of 'name' is false and [[Configurable]] attribute of 'name' is true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as true, 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_12()
        {
            RunFile("15.2.3.6-4-82-12.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as false, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_13()
        {
            RunFile("15.2.3.6-4-82-13.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as false and [[Configurable]] attribute as true, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_14()
        {
            RunFile("15.2.3.6-4-82-14.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Configurable]] attribute of 'name' property is true,  the 'desc' is a generic descriptor which contains [[Configurable]] attribute as false, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_15()
        {
            RunFile("15.2.3.6-4-82-15.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as true and [[Configurable]] attribute as false, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_16()
        {
            RunFile("15.2.3.6-4-82-16.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] and [[Configurable]] attributes of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true, the 'desc' is a generic descriptor which contains [[Enumerable]] and [[Configurable]] attributes as false, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_17()
        {
            RunFile("15.2.3.6-4-82-17.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to true successfully when [[Enumerable]] attribute of 'name' is false and [[Configurable]] attribute of 'name' is true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as true, 'name' property is an index data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_18()
        {
            RunFile("15.2.3.6-4-82-18.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [Enumerable]] attribute as false and 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_19()
        {
            RunFile("15.2.3.6-4-82-19.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as false and [[Configurable]] attribute as true, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_2()
        {
            RunFile("15.2.3.6-4-82-2.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [Enumerable]] attribute as false and [[Configurable]] property is true, 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_20()
        {
            RunFile("15.2.3.6-4-82-20.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [[Configurable]] attribute as false, 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_21()
        {
            RunFile("15.2.3.6-4-82-21.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as true and [[Configurable]] attribute is false, 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_22()
        {
            RunFile("15.2.3.6-4-82-22.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] and [[Configurable]] attributes of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] and [[Configurable]] attributes as false, 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_23()
        {
            RunFile("15.2.3.6-4-82-23.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attributes of 'name' property to true successfully when [[Enumerable]] attribute of 'name' is false and [[Configurable]] attribute of 'name' is true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as true, 'name' property is an index accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_24()
        {
            RunFile("15.2.3.6-4-82-24.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Configurable]] attribute of 'name' property is true,  the 'desc' is a generic descriptor which contains [[Configurable]] attribute as false, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_3()
        {
            RunFile("15.2.3.6-4-82-3.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [[Enumerable]] attribute as true and [[Configurable]] attribute as false, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_4()
        {
            RunFile("15.2.3.6-4-82-4.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] and [[Configurable]] attributes of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true, the 'desc' is a generic descriptor which contains [[Enumerable]] and [[Configurable]] attributes as false, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_5()
        {
            RunFile("15.2.3.6-4-82-5.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to true successfully when [[Enumerable]] attribute of 'name' is false and [[Configurable]] attribute of 'name' is true,  the 'desc' is a generic descriptor which only contains [[Enumerable]] attribute as true, 'name' property is a data property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_6()
        {
            RunFile("15.2.3.6-4-82-6.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [Enumerable]] attribute as false and 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_7()
        {
            RunFile("15.2.3.6-4-82-7.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Enumerable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which contains [Enumerable]] attribute as false and [[Configurable]] property is true, 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_8()
        {
            RunFile("15.2.3.6-4-82-8.js");
        }

        [Test(Description = "Object.defineProperty - Update [[Configurable]] attribute of 'name' property to false successfully when [[Enumerable]] and [[Configurable]] attributes of 'name' property are true,  the 'desc' is a generic descriptor which only contains [[Configurable]] attribute as false, 'name' property is an accessor property (8.12.9 step 8)")]
        public void _15_2_3_6_4_82_9()
        {
            RunFile("15.2.3.6-4-82-9.js");
        }

        [Test(Description = "Object.defineProperty - desc.configurable and name.configurable are boolean negation of each other (8.12.9 step 6)")]
        public void _15_2_3_6_4_82()
        {
            RunFile("15.2.3.6-4-82.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError if name.configurable = false, name.writable = false, name.value = undefined and desc.value = undefined (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_83()
        {
            RunFile("15.2.3.6-4-83.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError if name.configurable = false, name.writable = false, name.value = null and desc.value = null (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_84()
        {
            RunFile("15.2.3.6-4-84.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError if name.configurable = false, name.writable = false, name.value = NaN and desc.value = NaN (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_85()
        {
            RunFile("15.2.3.6-4-85.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value = +0 and name.value = -0 (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_86()
        {
            RunFile("15.2.3.6-4-86.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value = -0 and name.value = +0 (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_87()
        {
            RunFile("15.2.3.6-4-87.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two numbers with the same value (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_88()
        {
            RunFile("15.2.3.6-4-88.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two numbers with different values (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_89()
        {
            RunFile("15.2.3.6-4-89.js");
        }

        [Test(Description = "Object.defineProperty throws TypeError when changing [[Enumerable]] from true to false on non-configurable data properties")]
        public void _15_2_3_6_4_9()
        {
            RunFile("15.2.3.6-4-9.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two strings with the same value (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_90()
        {
            RunFile("15.2.3.6-4-90.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two strings with different values (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_91()
        {
            RunFile("15.2.3.6-4-91.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two booleans with the same value (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_92()
        {
            RunFile("15.2.3.6-4-92.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two booleans with different values (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_93()
        {
            RunFile("15.2.3.6-4-93.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two Objects refer to the same object (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_94()
        {
            RunFile("15.2.3.6-4-94.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.writable = false, desc.value and name.value are two objects which refer to the different objects (8.12.9 step 10.a.ii.1)")]
        public void _15_2_3_6_4_95()
        {
            RunFile("15.2.3.6-4-95.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, both desc.[[Set]] and name.[[Set]] are two objects which refer to the same object (8.12.9 step 11.a.i)")]
        public void _15_2_3_6_4_96()
        {
            RunFile("15.2.3.6-4-96.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.[[Set]] is undefined, desc.[[Set]] refers to an object (8.12.9 step 11.a.i)")]
        public void _15_2_3_6_4_97()
        {
            RunFile("15.2.3.6-4-97.js");
        }

        [Test(Description = "Object.defineProperty will not throw TypeError when name.configurable = false, both desc.[[Get]] and name.[[Get]] are two objects which refer to the same object (8.12.9 step 11.a.ii)")]
        public void _15_2_3_6_4_98()
        {
            RunFile("15.2.3.6-4-98.js");
        }

        [Test(Description = "Object.defineProperty will throw TypeError when name.configurable = false, name.[[Get]] is undefined, desc.[[Get]] refers to an object (8.12.9 step 11.a.ii)")]
        public void _15_2_3_6_4_99()
        {
            RunFile("15.2.3.6-4-99.js");
        }

        [Test(Description = "Do getters on HTMLFormElements disappear?")]
        public void S15_2_3_6_A1()
        {
            RunFile("S15.2.3.6_A1.js");
        }

        [Test(Description = "Checks if an inherited accessor property appears to be")]
        public void S15_2_3_6_A2()
        {
            RunFile("S15.2.3.6_A2.js");
        }
    }
}
