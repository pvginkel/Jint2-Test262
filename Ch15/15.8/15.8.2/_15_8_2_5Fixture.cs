//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_8._15_8_2
{
    [TestFixture]
    public class _15_8_2_5Fixture : Test262Fixture
    {
        public _15_8_2_5Fixture()
            : base("ch15\\15.8\\15.8.2\\15.8.2.5")
        {
        }

        [Test(Description = "Checking if Math.atan2(NaN,y) and Math.atan2(x,NaN) is NaN for different x and y values")]
        public void S15_8_2_5_A1()
        {
            RunFile("S15.8.2.5_A1.js");
        }

        [Test(Description = "Checking if Math.atan2(-0,-0) is an approximation to -PI")]
        public void S15_8_2_5_A10()
        {
            RunFile("S15.8.2.5_A10.js");
        }

        [Test(Description = "Checking if Math.atan2(-0,x) is an approximation to -PI, where x<0")]
        public void S15_8_2_5_A11()
        {
            RunFile("S15.8.2.5_A11.js");
        }

        [Test(Description = "Checking if Math.atan2(y,+0) is an approximation to -PI/2, where y<0")]
        public void S15_8_2_5_A12()
        {
            RunFile("S15.8.2.5_A12.js");
        }

        [Test(Description = "Checking if Math.atan2(y,-0) is an approximation to -PI/2, where y<0")]
        public void S15_8_2_5_A13()
        {
            RunFile("S15.8.2.5_A13.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) equals to +0, where y>0 and y is finite and x is equal to +Infinity")]
        public void S15_8_2_5_A14()
        {
            RunFile("S15.8.2.5_A14.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI, where y>0 and y is finite and x is equal to -Infinity")]
        public void S15_8_2_5_A15()
        {
            RunFile("S15.8.2.5_A15.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is -0, where y<0 and y is finite and x is equal to +Infinity")]
        public void S15_8_2_5_A16()
        {
            RunFile("S15.8.2.5_A16.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to -PI, where y<0 and y is finite and x is equal to -Infinity")]
        public void S15_8_2_5_A17()
        {
            RunFile("S15.8.2.5_A17.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI/2, where y is +Infinity and x is finite")]
        public void S15_8_2_5_A18()
        {
            RunFile("S15.8.2.5_A18.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to -PI/2, where y is -Infinity and x is finite")]
        public void S15_8_2_5_A19()
        {
            RunFile("S15.8.2.5_A19.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI/2, where y>0 and x is +0")]
        public void S15_8_2_5_A2()
        {
            RunFile("S15.8.2.5_A2.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI/4, where y is equal to +Infinity and x is equal to +Infinity")]
        public void S15_8_2_5_A20()
        {
            RunFile("S15.8.2.5_A20.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +3*PI/4, where y is equal to +Infinity and x is equal to -Infinity")]
        public void S15_8_2_5_A21()
        {
            RunFile("S15.8.2.5_A21.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to -PI/4, where y is equal to -Infinity and x is equal to +Infinity")]
        public void S15_8_2_5_A22()
        {
            RunFile("S15.8.2.5_A22.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to -3*PI/4, where y is equal to -Infinity and x is equal to -Infinity")]
        public void S15_8_2_5_A23()
        {
            RunFile("S15.8.2.5_A23.js");
        }

        [Test(Description = "Checking if Math.atan2(argument1, argument2) is approximately equals to its mathematical values on the set of 64 argument1 values and 64 argument2 values; all the sample values is calculated with LibC")]
        public void S15_8_2_5_A24()
        {
            RunFile("S15.8.2.5_A24.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI/2, where y>0 and x is -0")]
        public void S15_8_2_5_A3()
        {
            RunFile("S15.8.2.5_A3.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) equals to +0, where y is +0 and x>0")]
        public void S15_8_2_5_A4()
        {
            RunFile("S15.8.2.5_A4.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is +0, where y is +0 and x is +0")]
        public void S15_8_2_5_A5()
        {
            RunFile("S15.8.2.5_A5.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI, where y is +0 and x is -0")]
        public void S15_8_2_5_A6()
        {
            RunFile("S15.8.2.5_A6.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is an approximation to +PI, where y is equal to +0 and x<0")]
        public void S15_8_2_5_A7()
        {
            RunFile("S15.8.2.5_A7.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is -0, where y is equal to -0 and x>0")]
        public void S15_8_2_5_A8()
        {
            RunFile("S15.8.2.5_A8.js");
        }

        [Test(Description = "Checking if Math.atan2(y,x) is -0, where y is -0 and x is +0")]
        public void S15_8_2_5_A9()
        {
            RunFile("S15.8.2.5_A9.js");
        }
    }
}
