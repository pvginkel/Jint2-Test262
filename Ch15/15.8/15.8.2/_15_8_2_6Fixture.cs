//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_8._15_8_2
{
    [TestFixture]
    public class _15_8_2_6Fixture : Test262Fixture
    {
        public _15_8_2_6Fixture()
            : base("ch15\\15.8\\15.8.2\\15.8.2.6")
        {
        }

        [Test(Description = "Checking if Math.ceil(NaN) is NaN")]
        public void S15_8_2_6_A1()
        {
            RunFile("S15.8.2.6_A1.js");
        }

        [Test(Description = "Checking if Math.ceil(x) is +0, where x is +0")]
        public void S15_8_2_6_A2()
        {
            RunFile("S15.8.2.6_A2.js");
        }

        [Test(Description = "Checking if Math.ceil(x) is -0, where x is -0")]
        public void S15_8_2_6_A3()
        {
            RunFile("S15.8.2.6_A3.js");
        }

        [Test(Description = "Checking if Math.ceil(x) is +Infinity, where x is +Infinity")]
        public void S15_8_2_6_A4()
        {
            RunFile("S15.8.2.6_A4.js");
        }

        [Test(Description = "Checking if Math.ceil(x) is -Infinity, where x is -Infinity")]
        public void S15_8_2_6_A5()
        {
            RunFile("S15.8.2.6_A5.js");
        }

        [Test(Description = "Checking if Math.ceil(x) is -0, where x is less than 0 but greater than -1")]
        public void S15_8_2_6_A6()
        {
            RunFile("S15.8.2.6_A6.js");
        }

        [Test(Description = "Checking if Math.ceil(x) equals to -Math.floor(-x) on 2000 floating point argument values")]
        public void S15_8_2_6_A7()
        {
            RunFile("S15.8.2.6_A7.js");
        }
    }
}
