//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_5._15_5_4
{
    [TestFixture]
    public class _15_5_4_12Fixture : Test262Fixture
    {
        public _15_5_4_12Fixture()
            : base("ch15\\15.5\\15.5.4\\15.5.4.12")
        {
        }

        [Test(Description = "Call search() is the same search(undefined)")]
        public void S15_5_4_12_A1_1_T1()
        {
            RunFile("S15.5.4.12_A1.1_T1.js");
        }

        [Test(Description = "Checking if varying the String.prototype.search.length property fails")]
        public void S15_5_4_12_A10()
        {
            RunFile("S15.5.4.12_A10.js");
        }

        [Test(Description = "Checking String.prototype.search.length")]
        public void S15_5_4_12_A11()
        {
            RunFile("S15.5.4.12_A11.js");
        }

        [Test(Description = "Argument is true, and instance is object")]
        public void S15_5_4_12_A1_T1()
        {
            RunFile("S15.5.4.12_A1_T1.js");
        }

        [Test(Description = "Argument is object, and instance is string.")]
        public void S15_5_4_12_A1_T10()
        {
            RunFile("S15.5.4.12_A1_T10.js");
        }

        [Test(Description = "Argument is object, and instance is string.")]
        public void S15_5_4_12_A1_T11()
        {
            RunFile("S15.5.4.12_A1_T11.js");
        }

        [Test(Description = "Argument is object, and instance is string.")]
        public void S15_5_4_12_A1_T12()
        {
            RunFile("S15.5.4.12_A1_T12.js");
        }

        [Test(Description = "Argument is object, and instance is string.")]
        public void S15_5_4_12_A1_T13()
        {
            RunFile("S15.5.4.12_A1_T13.js");
        }

        [Test(Description = "Instance is string, argument is regular expression")]
        public void S15_5_4_12_A1_T14()
        {
            RunFile("S15.5.4.12_A1_T14.js");
        }

        [Test(Description = "Argument is function call, and instance is Boolean")]
        public void S15_5_4_12_A1_T2()
        {
            RunFile("S15.5.4.12_A1_T2.js");
        }

        [Test(Description = "Call search (regexp) without arguments")]
        public void S15_5_4_12_A1_T4()
        {
            RunFile("S15.5.4.12_A1_T4.js");
        }

        [Test(Description = "Argument is null, and instance is function call, that return string")]
        public void S15_5_4_12_A1_T5()
        {
            RunFile("S15.5.4.12_A1_T5.js");
        }

        [Test(Description = "Argument is x, and instance is new String, x is undefined variable")]
        public void S15_5_4_12_A1_T6()
        {
            RunFile("S15.5.4.12_A1_T6.js");
        }

        [Test(Description = "Argument is undefined, and instance is new String")]
        public void S15_5_4_12_A1_T7()
        {
            RunFile("S15.5.4.12_A1_T7.js");
        }

        [Test(Description = "Argument is void 0, and instance is String object with overrided toString function")]
        public void S15_5_4_12_A1_T8()
        {
            RunFile("S15.5.4.12_A1_T8.js");
        }

        [Test(Description = "Argument is function call, and instance is String object with overrided toString and valueOf functions")]
        public void S15_5_4_12_A1_T9()
        {
            RunFile("S15.5.4.12_A1_T9.js");
        }

        [Test(Description = "Simple search substring inside string")]
        public void S15_5_4_12_A2_T1()
        {
            RunFile("S15.5.4.12_A2_T1.js");
        }

        [Test(Description = "Checking case sensitive of search, argument is string")]
        public void S15_5_4_12_A2_T2()
        {
            RunFile("S15.5.4.12_A2_T2.js");
        }

        [Test(Description = "Checking disabling of case sensitive of search, argument is RegExp")]
        public void S15_5_4_12_A2_T3()
        {
            RunFile("S15.5.4.12_A2_T3.js");
        }

        [Test(Description = "Checking case sensitive of search, argument is RegExp with uppercase symbols")]
        public void S15_5_4_12_A2_T4()
        {
            RunFile("S15.5.4.12_A2_T4.js");
        }

        [Test(Description = "Checking case sensitive of search, argument is RegExp without uppercase symbols")]
        public void S15_5_4_12_A2_T5()
        {
            RunFile("S15.5.4.12_A2_T5.js");
        }

        [Test(Description = "Searching the non-existent \"notexist\" substring")]
        public void S15_5_4_12_A2_T6()
        {
            RunFile("S15.5.4.12_A2_T6.js");
        }

        [Test(Description = "Simple search sentence inside string")]
        public void S15_5_4_12_A2_T7()
        {
            RunFile("S15.5.4.12_A2_T7.js");
        }

        [Test(Description = "Checking results of search regexp with and without global properties")]
        public void S15_5_4_12_A3_T1()
        {
            RunFile("S15.5.4.12_A3_T1.js");
        }

        [Test(Description = "Checking results of search regexp with and without global properties. Unicode symbols used")]
        public void S15_5_4_12_A3_T2()
        {
            RunFile("S15.5.4.12_A3_T2.js");
        }

        [Test(Description = "Checking String.prototype.search.prototype")]
        public void S15_5_4_12_A6()
        {
            RunFile("S15.5.4.12_A6.js");
        }

        [Test(Description = "Checking if creating the String.prototype.search object fails")]
        public void S15_5_4_12_A7()
        {
            RunFile("S15.5.4.12_A7.js");
        }

        [Test(Description = "Checking if enumerating the String.prototype.search.length property fails")]
        public void S15_5_4_12_A8()
        {
            RunFile("S15.5.4.12_A8.js");
        }

        [Test(Description = "Checking if deleting the String.prototype.search.length property fails")]
        public void S15_5_4_12_A9()
        {
            RunFile("S15.5.4.12_A9.js");
        }
    }
}
