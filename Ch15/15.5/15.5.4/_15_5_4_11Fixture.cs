//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_5._15_5_4
{
    [TestFixture]
    public class _15_5_4_11Fixture : Test262Fixture
    {
        public _15_5_4_11Fixture()
            : base("ch15\\15.5\\15.5.4\\15.5.4.11")
        {
        }

        [Test(Description = "'this' object used by the replaceValue function of a String.prototype.replace invocation")]
        public void _15_5_4_11_1()
        {
            RunFile("15.5.4.11-1.js");
        }

        [Test(Description = "Checking if varying the String.prototype.replace.length property fails")]
        public void S15_5_4_11_A10()
        {
            RunFile("S15.5.4.11_A10.js");
        }

        [Test(Description = "Checking String.prototype.replace.length")]
        public void S15_5_4_11_A11()
        {
            RunFile("S15.5.4.11_A11.js");
        }

        [Test(Description = "replaceValue tests that its this value is undefined")]
        public void S15_5_4_11_A12()
        {
            RunFile("S15.5.4.11_A12.js");
        }

        [Test(Description = "Arguments are true and 1, and instance is object")]
        public void S15_5_4_11_A1_T1()
        {
            RunFile("S15.5.4.11_A1_T1.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with object and function arguments of string. Object have overrided toString function")]
        public void S15_5_4_11_A1_T10()
        {
            RunFile("S15.5.4.11_A1_T10.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with objects arguments of string object. Objects have overrided toString function, that throw exception")]
        public void S15_5_4_11_A1_T11()
        {
            RunFile("S15.5.4.11_A1_T11.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with objects arguments of String object.")]
        public void S15_5_4_11_A1_T12()
        {
            RunFile("S15.5.4.11_A1_T12.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with objects arguments of string.")]
        public void S15_5_4_11_A1_T13()
        {
            RunFile("S15.5.4.11_A1_T13.js");
        }

        [Test(Description = "Instance is string, searchValue is regular expression")]
        public void S15_5_4_11_A1_T14()
        {
            RunFile("S15.5.4.11_A1_T14.js");
        }

        [Test(Description = "Instance is Object, searchValue is regular expression")]
        public void S15_5_4_11_A1_T15()
        {
            RunFile("S15.5.4.11_A1_T15.js");
        }

        [Test(Description = "Instance is Number, searchValue is regular expression")]
        public void S15_5_4_11_A1_T16()
        {
            RunFile("S15.5.4.11_A1_T16.js");
        }

        [Test(Description = "Instance is String object, searchValue is regular expression")]
        public void S15_5_4_11_A1_T17()
        {
            RunFile("S15.5.4.11_A1_T17.js");
        }

        [Test(Description = "Argument is function that return boolean, and instance is Boolean object")]
        public void S15_5_4_11_A1_T2()
        {
            RunFile("S15.5.4.11_A1_T2.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with null and function(a1,a2,a3){return a2+\"\";} arguments of function object")]
        public void S15_5_4_11_A1_T4()
        {
            RunFile("S15.5.4.11_A1_T4.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with null and Function() arguments of function object")]
        public void S15_5_4_11_A1_T5()
        {
            RunFile("S15.5.4.11_A1_T5.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with x and Function(\"return arguments[1]+42;\") arguments of new String object. x is undefined variable")]
        public void S15_5_4_11_A1_T6()
        {
            RunFile("S15.5.4.11_A1_T6.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with string and undefined arguments of String object")]
        public void S15_5_4_11_A1_T7()
        {
            RunFile("S15.5.4.11_A1_T7.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with regular expression and void 0 arguments of String object")]
        public void S15_5_4_11_A1_T8()
        {
            RunFile("S15.5.4.11_A1_T8.js");
        }

        [Test(Description = "Call replace (searchValue, replaceValue) function with functions arguments of new String object")]
        public void S15_5_4_11_A1_T9()
        {
            RunFile("S15.5.4.11_A1_T9.js");
        }

        [Test(Description = "Don`t use $ in replaceValue, searchValue is regular expression /sh/g")]
        public void S15_5_4_11_A2_T1()
        {
            RunFile("S15.5.4.11_A2_T1.js");
        }

        [Test(Description = "Use $' in replaceValue, searchValue is regular expression /sh/")]
        public void S15_5_4_11_A2_T10()
        {
            RunFile("S15.5.4.11_A2_T10.js");
        }

        [Test(Description = "Use $$ in replaceValue, searchValue is regular expression /sh/g")]
        public void S15_5_4_11_A2_T2()
        {
            RunFile("S15.5.4.11_A2_T2.js");
        }

        [Test(Description = "Use $& in replaceValue, searchValue is regular expression /sh/g")]
        public void S15_5_4_11_A2_T3()
        {
            RunFile("S15.5.4.11_A2_T3.js");
        }

        [Test(Description = "Use $` in replaceValue, searchValue is regular expression /sh/g")]
        public void S15_5_4_11_A2_T4()
        {
            RunFile("S15.5.4.11_A2_T4.js");
        }

        [Test(Description = "Use $' in replaceValue, searchValue is regular expression /sh/g")]
        public void S15_5_4_11_A2_T5()
        {
            RunFile("S15.5.4.11_A2_T5.js");
        }

        [Test(Description = "Don`t use $ in replaceValue, searchValue is regular expression /sh/")]
        public void S15_5_4_11_A2_T6()
        {
            RunFile("S15.5.4.11_A2_T6.js");
        }

        [Test(Description = "Use $$ in replaceValue, searchValue is regular expression /sh/")]
        public void S15_5_4_11_A2_T7()
        {
            RunFile("S15.5.4.11_A2_T7.js");
        }

        [Test(Description = "Use $& in replaceValue, searchValue is regular expression /sh/")]
        public void S15_5_4_11_A2_T8()
        {
            RunFile("S15.5.4.11_A2_T8.js");
        }

        [Test(Description = "Use $` in replaceValue, searchValue is regular expression /sh/")]
        public void S15_5_4_11_A2_T9()
        {
            RunFile("S15.5.4.11_A2_T9.js");
        }

        [Test(Description = "replaceValue is \"$11\" + 15")]
        public void S15_5_4_11_A3_T1()
        {
            RunFile("S15.5.4.11_A3_T1.js");
        }

        [Test(Description = "replaceValue is \"$11\" + '15'")]
        public void S15_5_4_11_A3_T2()
        {
            RunFile("S15.5.4.11_A3_T2.js");
        }

        [Test(Description = "replaceValue is \"$11\" + 'A15'")]
        public void S15_5_4_11_A3_T3()
        {
            RunFile("S15.5.4.11_A3_T3.js");
        }

        [Test(Description = "searchValue is /([a-z]+)([0-9]+)/")]
        public void S15_5_4_11_A4_T1()
        {
            RunFile("S15.5.4.11_A4_T1.js");
        }

        [Test(Description = "searchValue is /([a-z]+)([0-9]+)/g")]
        public void S15_5_4_11_A4_T2()
        {
            RunFile("S15.5.4.11_A4_T2.js");
        }

        [Test(Description = "searchValue is /([a-z]+)([0-9]+)/i")]
        public void S15_5_4_11_A4_T3()
        {
            RunFile("S15.5.4.11_A4_T3.js");
        }

        [Test(Description = "searchValue is /([a-z]+)([0-9]+)/ig")]
        public void S15_5_4_11_A4_T4()
        {
            RunFile("S15.5.4.11_A4_T4.js");
        }

        [Test(Description = "searchValue is  regexp /^(a+)\\1*,\\1+$/ and replaceValue is \"$1\"")]
        public void S15_5_4_11_A5_T1()
        {
            RunFile("S15.5.4.11_A5_T1.js");
        }

        [Test(Description = "Checking String.prototype.replace.prototype;")]
        public void S15_5_4_11_A6()
        {
            RunFile("S15.5.4.11_A6.js");
        }

        [Test(Description = "Checking if creating the String.prototype.replace object fails")]
        public void S15_5_4_11_A7()
        {
            RunFile("S15.5.4.11_A7.js");
        }

        [Test(Description = "Checking if enumerating the String.prototype.replace.length property fails")]
        public void S15_5_4_11_A8()
        {
            RunFile("S15.5.4.11_A8.js");
        }

        [Test(Description = "Checking if deleting the String.prototype.replace.length property fails")]
        public void S15_5_4_11_A9()
        {
            RunFile("S15.5.4.11_A9.js");
        }
    }
}
