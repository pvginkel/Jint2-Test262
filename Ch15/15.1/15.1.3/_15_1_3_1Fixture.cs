//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_1._15_1_3
{
    [TestFixture]
    public class _15_1_3_1Fixture : Test262Fixture
    {
        public _15_1_3_1Fixture()
            : base("ch15\\15.1\\15.1.3\\15.1.3.1")
        {
        }

        [Test(Description = "Complex tests")]
        public void S15_1_3_1_A1_10_T1()
        {
            RunFile("S15.1.3.1_A1.10_T1.js");
        }

        [Test(Description = "Complex tests, string.charAt(k + 4) and string.charAt(k + 5)")]
        public void S15_1_3_1_A1_11_T1()
        {
            RunFile("S15.1.3.1_A1.11_T1.js");
        }

        [Test(Description = "Complex tests, string.charAt(k + 7) and string.charAt(k + 8)")]
        public void S15_1_3_1_A1_11_T2()
        {
            RunFile("S15.1.3.1_A1.11_T2.js");
        }

        [Test(Description = "Complex tests, string.charAt(k + 4) and string.charAt(k + 5)")]
        public void S15_1_3_1_A1_12_T1()
        {
            RunFile("S15.1.3.1_A1.12_T1.js");
        }

        [Test(Description = "Complex tests, string.charAt(k + 7) and string.charAt(k + 7)")]
        public void S15_1_3_1_A1_12_T2()
        {
            RunFile("S15.1.3.1_A1.12_T2.js");
        }

        [Test(Description = "Complex tests, string.charAt(k + 10) and string.charAt(k + 11)")]
        public void S15_1_3_1_A1_12_T3()
        {
            RunFile("S15.1.3.1_A1.12_T3.js");
        }

        [Test(Description = "Complex tests. B = [0xC0 - 0xDF], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_13_T1()
        {
            RunFile("S15.1.3.1_A1.13_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xC0 - 0xDF], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_13_T2()
        {
            RunFile("S15.1.3.1_A1.13_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_14_T1()
        {
            RunFile("S15.1.3.1_A1.14_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_14_T2()
        {
            RunFile("S15.1.3.1_A1.14_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_14_T3()
        {
            RunFile("S15.1.3.1_A1.14_T3.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_14_T4()
        {
            RunFile("S15.1.3.1_A1.14_T4.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_15_T1()
        {
            RunFile("S15.1.3.1_A1.15_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_15_T2()
        {
            RunFile("S15.1.3.1_A1.15_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]")]
        public void S15_1_3_1_A1_15_T3()
        {
            RunFile("S15.1.3.1_A1.15_T3.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_15_T4()
        {
            RunFile("S15.1.3.1_A1.15_T4.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_15_T5()
        {
            RunFile("S15.1.3.1_A1.15_T5.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]")]
        public void S15_1_3_1_A1_15_T6()
        {
            RunFile("S15.1.3.1_A1.15_T6.js");
        }

        [Test(Description = "Complex tests")]
        public void S15_1_3_1_A1_1_T1()
        {
            RunFile("S15.1.3.1_A1.1_T1.js");
        }

        [Test(Description = "Complex tests")]
        public void S15_1_3_1_A1_2_T1()
        {
            RunFile("S15.1.3.1_A1.2_T1.js");
        }

        [Test(Description = "Complex tests")]
        public void S15_1_3_1_A1_2_T2()
        {
            RunFile("S15.1.3.1_A1.2_T2.js");
        }

        [Test(Description = "Complex tests. B = 10xxxxxx -> B in [0x80 - 0xBF]")]
        public void S15_1_3_1_A1_3_T1()
        {
            RunFile("S15.1.3.1_A1.3_T1.js");
        }

        [Test(Description = "Complex tests. B = 11111xxx -> B in [0xF8 - 0xFF]")]
        public void S15_1_3_1_A1_3_T2()
        {
            RunFile("S15.1.3.1_A1.3_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xC0 - 0xDF]")]
        public void S15_1_3_1_A1_4_T1()
        {
            RunFile("S15.1.3.1_A1.4_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF]")]
        public void S15_1_3_1_A1_5_T1()
        {
            RunFile("S15.1.3.1_A1.5_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0xF7]")]
        public void S15_1_3_1_A1_6_T1()
        {
            RunFile("S15.1.3.1_A1.6_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xC0 - 0xDF]")]
        public void S15_1_3_1_A1_7_T1()
        {
            RunFile("S15.1.3.1_A1.7_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF],")]
        public void S15_1_3_1_A1_8_T1()
        {
            RunFile("S15.1.3.1_A1.8_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xE0 - 0xEF],")]
        public void S15_1_3_1_A1_8_T2()
        {
            RunFile("S15.1.3.1_A1.8_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7],")]
        public void S15_1_3_1_A1_9_T1()
        {
            RunFile("S15.1.3.1_A1.9_T1.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7],")]
        public void S15_1_3_1_A1_9_T2()
        {
            RunFile("S15.1.3.1_A1.9_T2.js");
        }

        [Test(Description = "Complex tests. B = [0xF0 - 0x0F7],")]
        public void S15_1_3_1_A1_9_T3()
        {
            RunFile("S15.1.3.1_A1.9_T3.js");
        }

        [Test(Description = "Complex tests")]
        public void S15_1_3_1_A2_1_T1()
        {
            RunFile("S15.1.3.1_A2.1_T1.js");
        }

        [Test(Description = "Complex tests, use RFC 3629")]
        public void S15_1_3_1_A2_2_T1()
        {
            RunFile("S15.1.3.1_A2.2_T1.js");
        }

        [Test(Description = "Complex tests, use RFC 3629")]
        public void S15_1_3_1_A2_3_T1()
        {
            RunFile("S15.1.3.1_A2.3_T1.js");
        }

        [Test(Description = "Complex tests, use RFC 3629")]
        public void S15_1_3_1_A2_4_T1()
        {
            RunFile("S15.1.3.1_A2.4_T1.js");
        }

        [Test(Description = "Complex tests, use RFC 3629")]
        public void S15_1_3_1_A2_5_T1()
        {
            RunFile("S15.1.3.1_A2.5_T1.js");
        }

        [Test(Description = "Checking all character in reservedURISet. HexDigit in [0..9, A..F]")]
        public void S15_1_3_1_A3_T1()
        {
            RunFile("S15.1.3.1_A3_T1.js");
        }

        [Test(Description = "Checking all character in reservedURISet. HexDigit in [0..9, a..f]")]
        public void S15_1_3_1_A3_T2()
        {
            RunFile("S15.1.3.1_A3_T2.js");
        }

        [Test(Description = "Complex test")]
        public void S15_1_3_1_A3_T3()
        {
            RunFile("S15.1.3.1_A3_T3.js");
        }

        [Test(Description = "Checking ENGLISH ALPHABET")]
        public void S15_1_3_1_A4_T1()
        {
            RunFile("S15.1.3.1_A4_T1.js");
        }

        [Test(Description = "Checking RUSSIAN ALPHABET")]
        public void S15_1_3_1_A4_T2()
        {
            RunFile("S15.1.3.1_A4_T2.js");
        }

        [Test(Description = "Checking URL with Line Terminator")]
        public void S15_1_3_1_A4_T3()
        {
            RunFile("S15.1.3.1_A4_T3.js");
        }

        [Test(Description = "Test some url")]
        public void S15_1_3_1_A4_T4()
        {
            RunFile("S15.1.3.1_A4_T4.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_1_3_1_A5_1()
        {
            RunFile("S15.1.3.1_A5.1.js");
        }

        [Test(Description = "Checking use hasOwnProperty, delete")]
        public void S15_1_3_1_A5_2()
        {
            RunFile("S15.1.3.1_A5.2.js");
        }

        [Test(Description = "Checking if varying the length property fails")]
        public void S15_1_3_1_A5_3()
        {
            RunFile("S15.1.3.1_A5.3.js");
        }

        [Test(Description = "decodeURI.length === 1")]
        public void S15_1_3_1_A5_4()
        {
            RunFile("S15.1.3.1_A5.4.js");
        }

        [Test(Description = "Checking use propertyIsEnumerable, for-in")]
        public void S15_1_3_1_A5_5()
        {
            RunFile("S15.1.3.1_A5.5.js");
        }

        [Test(Description = "Checking decodeURI.prototype")]
        public void S15_1_3_1_A5_6()
        {
            RunFile("S15.1.3.1_A5.6.js");
        }

        [Test(Description = "If property does not implement the internal [[Construct]] method, throw a TypeError exception")]
        public void S15_1_3_1_A5_7()
        {
            RunFile("S15.1.3.1_A5.7.js");
        }

        [Test(Description = "If Type(value) is Object, evaluate ToPrimitive(value, String)")]
        public void S15_1_3_1_A6_T1()
        {
            RunFile("S15.1.3.1_A6_T1.js");
        }
    }
}
