//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_10._15_10_6
{
    [TestFixture]
    public class _15_10_6_3Fixture : Test262Fixture
    {
        public _15_10_6_3Fixture()
            : base("ch15\\15.10\\15.10.6\\15.10.6.3")
        {
        }

        [Test(Description = "Checking if varying the RegExp.prototype.test.length property fails")]
        public void S15_10_6_3_A10()
        {
            RunFile("S15.10.6.3_A10.js");
        }

        [Test(Description = "Checking RegExp.prototype.test.length")]
        public void S15_10_6_3_A11()
        {
            RunFile("S15.10.6.3_A11.js");
        }

        [Test(Description = "RegExp is /1|12/ and tested string is \"123\"")]
        public void S15_10_6_3_A1_T1()
        {
            RunFile("S15.10.6.3_A1_T1.js");
        }

        [Test(Description = "RegExp is /1|12/ and tested string is 1.01")]
        public void S15_10_6_3_A1_T10()
        {
            RunFile("S15.10.6.3_A1_T10.js");
        }

        [Test(Description = "RegExp is /2|12/ and tested string is new Number(1.012)")]
        public void S15_10_6_3_A1_T11()
        {
            RunFile("S15.10.6.3_A1_T11.js");
        }

        [Test(Description = "RegExp is /\\.14/ and tested string is {toString:function(){return Math.PI;}}")]
        public void S15_10_6_3_A1_T12()
        {
            RunFile("S15.10.6.3_A1_T12.js");
        }

        [Test(Description = "RegExp is /t[a-b|q-s]/ and tested string is true")]
        public void S15_10_6_3_A1_T13()
        {
            RunFile("S15.10.6.3_A1_T13.js");
        }

        [Test(Description = "RegExp is /AL|se/ and tested string is new Boolean")]
        public void S15_10_6_3_A1_T14()
        {
            RunFile("S15.10.6.3_A1_T14.js");
        }

        [Test(Description = "RegExp is /LS/i and tested string is {toString:function(){return false;}}")]
        public void S15_10_6_3_A1_T15()
        {
            RunFile("S15.10.6.3_A1_T15.js");
        }

        [Test(Description = "RegExp is /undefined/ and call test() without arguments")]
        public void S15_10_6_3_A1_T16()
        {
            RunFile("S15.10.6.3_A1_T16.js");
        }

        [Test(Description = "RegExp is /ll|l/ and tested string is null")]
        public void S15_10_6_3_A1_T17()
        {
            RunFile("S15.10.6.3_A1_T17.js");
        }

        [Test(Description = "RegExp is /nd|ne/ and tested string is undefined")]
        public void S15_10_6_3_A1_T18()
        {
            RunFile("S15.10.6.3_A1_T18.js");
        }

        [Test(Description = "RegExp is /e{1}/ and tested string is void 0")]
        public void S15_10_6_3_A1_T19()
        {
            RunFile("S15.10.6.3_A1_T19.js");
        }

        [Test(Description = "RegExp is /((1)|(12))((3)|(23))/ and tested string is new String(\"123\")")]
        public void S15_10_6_3_A1_T2()
        {
            RunFile("S15.10.6.3_A1_T2.js");
        }

        [Test(Description = "RegExp is /[a-f]d/ and tested string is x, where x is undefined")]
        public void S15_10_6_3_A1_T20()
        {
            RunFile("S15.10.6.3_A1_T20.js");
        }

        [Test(Description = "RegExp is /[a-z]n/ and tested string is x, where x is function(){}()")]
        public void S15_10_6_3_A1_T21()
        {
            RunFile("S15.10.6.3_A1_T21.js");
        }

        [Test(Description = "RegExp is /a[a-z]{2,4}/ and tested string is new Object(\"abcdefghi\")")]
        public void S15_10_6_3_A1_T3()
        {
            RunFile("S15.10.6.3_A1_T3.js");
        }

        [Test(Description = "RegExp is /a[a-z]{2,4}?/ and tested string is {toString:function(){return \"abcdefghi\";}}")]
        public void S15_10_6_3_A1_T4()
        {
            RunFile("S15.10.6.3_A1_T4.js");
        }

        [Test(Description = "RegExp is /(aa|aabaac|ba|b|c)* / and tested string is {toString:function(){return {};}, valueOf:function(){return \"aabaac\";}}")]
        public void S15_10_6_3_A1_T5()
        {
            RunFile("S15.10.6.3_A1_T5.js");
        }

        [Test(Description = "RegExp is /(z)((a+)?(b+)?(c))* / and tested string is (function(){return \"zaacbbbcac\"})()")]
        public void S15_10_6_3_A1_T6()
        {
            RunFile("S15.10.6.3_A1_T6.js");
        }

        [Test(Description = "RegExp is /[a-z]/ and tested string is {toString:function(){throw \"intostr\";}}")]
        public void S15_10_6_3_A1_T7()
        {
            RunFile("S15.10.6.3_A1_T7.js");
        }

        [Test(Description = "RegExp is /[a-z]/ and tested string is {toString:void 0, valueOf:function(){throw \"invalof\";}}")]
        public void S15_10_6_3_A1_T8()
        {
            RunFile("S15.10.6.3_A1_T8.js");
        }

        [Test(Description = "RegExp is /1|12/ and tested string is function object")]
        public void S15_10_6_3_A1_T9()
        {
            RunFile("S15.10.6.3_A1_T9.js");
        }

        [Test(Description = "The tested object is new Object")]
        public void S15_10_6_3_A2_T1()
        {
            RunFile("S15.10.6.3_A2_T1.js");
        }

        [Test(Description = "The tested object is undefined")]
        public void S15_10_6_3_A2_T10()
        {
            RunFile("S15.10.6.3_A2_T10.js");
        }

        [Test(Description = "The tested object is Math")]
        public void S15_10_6_3_A2_T2()
        {
            RunFile("S15.10.6.3_A2_T2.js");
        }

        [Test(Description = "The tested object is function object")]
        public void S15_10_6_3_A2_T3()
        {
            RunFile("S15.10.6.3_A2_T3.js");
        }

        [Test(Description = "The tested object is new String(\"[a-b]\")")]
        public void S15_10_6_3_A2_T4()
        {
            RunFile("S15.10.6.3_A2_T4.js");
        }

        [Test(Description = "The tested object is new Boolean(false)")]
        public void S15_10_6_3_A2_T5()
        {
            RunFile("S15.10.6.3_A2_T5.js");
        }

        [Test(Description = "The tested object is new Number(1.0)")]
        public void S15_10_6_3_A2_T6()
        {
            RunFile("S15.10.6.3_A2_T6.js");
        }

        [Test(Description = "The tested object is false")]
        public void S15_10_6_3_A2_T7()
        {
            RunFile("S15.10.6.3_A2_T7.js");
        }

        [Test(Description = "The tested object is \".\"")]
        public void S15_10_6_3_A2_T8()
        {
            RunFile("S15.10.6.3_A2_T8.js");
        }

        [Test(Description = "The tested object is 1.0")]
        public void S15_10_6_3_A2_T9()
        {
            RunFile("S15.10.6.3_A2_T9.js");
        }

        [Test(Description = "Checking RegExp.prototype.test.prototype")]
        public void S15_10_6_3_A6()
        {
            RunFile("S15.10.6.3_A6.js");
        }

        [Test(Description = "Checking if creating the RegExp.prototype.test object fails")]
        public void S15_10_6_3_A7()
        {
            RunFile("S15.10.6.3_A7.js");
        }

        [Test(Description = "Checking if enumerating the RegExp.prototype.test.length property fails")]
        public void S15_10_6_3_A8()
        {
            RunFile("S15.10.6.3_A8.js");
        }

        [Test(Description = "Checking if deleting RegExp.prototype.test.length property fails")]
        public void S15_10_6_3_A9()
        {
            RunFile("S15.10.6.3_A9.js");
        }
    }
}
