//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch15._15_10
{
    [TestFixture]
    public class _15_10_1Fixture : Test262Fixture
    {
        public _15_10_1Fixture()
            : base("ch15\\15.10\\15.10.1")
        {
        }

        [Test(Description = "Tested RegExp is \"a**\"")]
        public void S15_10_1_A1_T1()
        {
            RunFile("S15.10.1_A1_T1.js");
        }

        [Test(Description = "Tested RegExp is \"++a\"")]
        public void S15_10_1_A1_T10()
        {
            RunFile("S15.10.1_A1_T10.js");
        }

        [Test(Description = "Tested RegExp is \"?a\"")]
        public void S15_10_1_A1_T11()
        {
            RunFile("S15.10.1_A1_T11.js");
        }

        [Test(Description = "Tested RegExp is \"??a\"")]
        public void S15_10_1_A1_T12()
        {
            RunFile("S15.10.1_A1_T12.js");
        }

        [Test(Description = "Tested RegExp is \"x{1}{1,}\"")]
        public void S15_10_1_A1_T13()
        {
            RunFile("S15.10.1_A1_T13.js");
        }

        [Test(Description = "Tested RegExp is \"x{1,2}{1}\"")]
        public void S15_10_1_A1_T14()
        {
            RunFile("S15.10.1_A1_T14.js");
        }

        [Test(Description = "Tested RegExp is \"x{1,}{1}\"")]
        public void S15_10_1_A1_T15()
        {
            RunFile("S15.10.1_A1_T15.js");
        }

        [Test(Description = "Tested RegExp is \"x{0,1}{1,}\"")]
        public void S15_10_1_A1_T16()
        {
            RunFile("S15.10.1_A1_T16.js");
        }

        [Test(Description = "Tested RegExp is \"a***\"")]
        public void S15_10_1_A1_T2()
        {
            RunFile("S15.10.1_A1_T2.js");
        }

        [Test(Description = "Tested RegExp is \"a++\"")]
        public void S15_10_1_A1_T3()
        {
            RunFile("S15.10.1_A1_T3.js");
        }

        [Test(Description = "Tested RegExp is \"a+++\"")]
        public void S15_10_1_A1_T4()
        {
            RunFile("S15.10.1_A1_T4.js");
        }

        [Test(Description = "Tested RegExp is \"a???\"")]
        public void S15_10_1_A1_T5()
        {
            RunFile("S15.10.1_A1_T5.js");
        }

        [Test(Description = "Tested RegExp is \"a????\"")]
        public void S15_10_1_A1_T6()
        {
            RunFile("S15.10.1_A1_T6.js");
        }

        [Test(Description = "Tested RegExp is \"*a\"")]
        public void S15_10_1_A1_T7()
        {
            RunFile("S15.10.1_A1_T7.js");
        }

        [Test(Description = "Tested RegExp is \"**a\"")]
        public void S15_10_1_A1_T8()
        {
            RunFile("S15.10.1_A1_T8.js");
        }

        [Test(Description = "Tested RegExp is \"+a\"")]
        public void S15_10_1_A1_T9()
        {
            RunFile("S15.10.1_A1_T9.js");
        }
    }
}
