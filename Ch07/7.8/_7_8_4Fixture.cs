//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch07._7_8
{
    [TestFixture]
    public class _7_8_4Fixture : Test262Fixture
    {
        public _7_8_4Fixture()
            : base("ch07\\7.8\\7.8.4")
        {
        }

        [Test(Description = "A directive preceeding an 'use strict' directive may not contain an OctalEscapeSequence")]
        public void _7_8_4_1_s()
        {
            RunFile("7.8.4-1-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_10_s()
        {
            RunFile("7.8.4-10-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_11_s()
        {
            RunFile("7.8.4-11-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_12_s()
        {
            RunFile("7.8.4-12-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_13_s()
        {
            RunFile("7.8.4-13-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_14_s()
        {
            RunFile("7.8.4-14-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_15_s()
        {
            RunFile("7.8.4-15-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_16_s()
        {
            RunFile("7.8.4-16-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_17_s()
        {
            RunFile("7.8.4-17-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_18_s()
        {
            RunFile("7.8.4-18-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_19_s()
        {
            RunFile("7.8.4-19-s.js");
        }

        [Test(Description = "Strict Mode - OctalEscapeSequence(\\0110) is forbidden in strict mode")]
        [ExpectedException]
        public void _7_8_4_1gs()
        {
            RunFile("7.8.4-1gs.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_2_s()
        {
            RunFile("7.8.4-2-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_20_s()
        {
            RunFile("7.8.4-20-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_21_s()
        {
            RunFile("7.8.4-21-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_22_s()
        {
            RunFile("7.8.4-22-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_23_s()
        {
            RunFile("7.8.4-23-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_24_s()
        {
            RunFile("7.8.4-24-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_25_s()
        {
            RunFile("7.8.4-25-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_26_s()
        {
            RunFile("7.8.4-26-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_27_s()
        {
            RunFile("7.8.4-27-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_28_s()
        {
            RunFile("7.8.4-28-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_29_s()
        {
            RunFile("7.8.4-29-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_3_s()
        {
            RunFile("7.8.4-3-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_30_s()
        {
            RunFile("7.8.4-30-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_31_s()
        {
            RunFile("7.8.4-31-s.js");
        }

        [Test(Description = "Two OctalEscapeSequences in a String are not allowed in a String under Strict Mode")]
        public void _7_8_4_32_s()
        {
            RunFile("7.8.4-32-s.js");
        }

        [Test(Description = "Three OctalEscapeSequences in a String are not allowed in a String under Strict Mode")]
        public void _7_8_4_33_s()
        {
            RunFile("7.8.4-33-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_4_s()
        {
            RunFile("7.8.4-4-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_5_s()
        {
            RunFile("7.8.4-5-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_6_s()
        {
            RunFile("7.8.4-6-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_7_s()
        {
            RunFile("7.8.4-7-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_8_s()
        {
            RunFile("7.8.4-8-s.js");
        }

        [Test(Description = "An OctalEscapeSequence is not allowed in a String under Strict Mode")]
        public void _7_8_4_9_s()
        {
            RunFile("7.8.4-9-s.js");
        }

        [Test(Description = "DoubleStringCharacter :: SourceCharacter but not double-quote \" or LineTerminator")]
        [ExpectedException]
        public void S7_8_4_A1_1_T1()
        {
            RunFile("S7.8.4_A1.1_T1.js");
        }

        [Test(Description = "DoubleStringCharacter :: SourceCharacter but not double-quote \" or LineTerminator")]
        [ExpectedException]
        public void S7_8_4_A1_1_T2()
        {
            RunFile("S7.8.4_A1.1_T2.js");
        }

        [Test(Description = "SingleStringCharacter :: SourceCharacter but not single-quote ' or LineTerminator")]
        [ExpectedException]
        public void S7_8_4_A1_2_T1()
        {
            RunFile("S7.8.4_A1.2_T1.js");
        }

        [Test(Description = "SingleStringCharacter :: SourceCharacter but not single-quote ' or LineTerminator")]
        [ExpectedException]
        public void S7_8_4_A1_2_T2()
        {
            RunFile("S7.8.4_A1.2_T2.js");
        }

        [Test(Description = "Check ENGLISH CAPITAL ALPHABET")]
        public void S7_8_4_A2_1_T1()
        {
            RunFile("S7.8.4_A2.1_T1.js");
        }

        [Test(Description = "Check ENGLISH SMALL ALPHABET")]
        public void S7_8_4_A2_1_T2()
        {
            RunFile("S7.8.4_A2.1_T2.js");
        }

        [Test(Description = "Check RUSSIAN CAPITAL ALPHABET")]
        public void S7_8_4_A2_2_T1()
        {
            RunFile("S7.8.4_A2.2_T1.js");
        }

        [Test(Description = "Check RUSSIAN SMALL ALPHABET")]
        public void S7_8_4_A2_2_T2()
        {
            RunFile("S7.8.4_A2.2_T2.js");
        }

        [Test(Description = "Check DIGITS")]
        public void S7_8_4_A2_3_T1()
        {
            RunFile("S7.8.4_A2.3_T1.js");
        }

        [Test(Description = "Checking if execution of \"\\\" fails")]
        [ExpectedException]
        public void S7_8_4_A3_1_T1()
        {
            RunFile("S7.8.4_A3.1_T1.js");
        }

        [Test(Description = "Checking if execution of \"'\\'\" fails")]
        [ExpectedException]
        public void S7_8_4_A3_1_T2()
        {
            RunFile("S7.8.4_A3.1_T2.js");
        }

        [Test(Description = "Checking if execution of \"\\\\\\\" fails")]
        [ExpectedException]
        public void S7_8_4_A3_2_T1()
        {
            RunFile("S7.8.4_A3.2_T1.js");
        }

        [Test(Description = "Checking if execution of '\\\\\\' fails")]
        [ExpectedException]
        public void S7_8_4_A3_2_T2()
        {
            RunFile("S7.8.4_A3.2_T2.js");
        }

        [Test(Description = "SingleEscapeSequence :: one of b f n r t v")]
        public void S7_8_4_A4_1_T1()
        {
            RunFile("S7.8.4_A4.1_T1.js");
        }

        [Test(Description = "SingleEscapeSequence :: one of ' \" \\")]
        public void S7_8_4_A4_1_T2()
        {
            RunFile("S7.8.4_A4.1_T2.js");
        }

        [Test(Description = "NonEscapeSequence :: ENGLISH CAPITAL ALPHABET")]
        public void S7_8_4_A4_2_T1()
        {
            RunFile("S7.8.4_A4.2_T1.js");
        }

        [Test(Description = "NonEscapeSequence :: ENGLISH CAPITAL ALPHABET")]
        public void S7_8_4_A4_2_T2()
        {
            RunFile("S7.8.4_A4.2_T2.js");
        }

        [Test(Description = "NonEscapeSequence :: ENGLISH SMALL ALPHABET")]
        public void S7_8_4_A4_2_T3()
        {
            RunFile("S7.8.4_A4.2_T3.js");
        }

        [Test(Description = "NonEscapeSequence :: ENGLISH SMALL ALPHABET")]
        public void S7_8_4_A4_2_T4()
        {
            RunFile("S7.8.4_A4.2_T4.js");
        }

        [Test(Description = "NonEscapeSequence :: RUSSIAN CAPITAL ALPHABET")]
        public void S7_8_4_A4_2_T5()
        {
            RunFile("S7.8.4_A4.2_T5.js");
        }

        [Test(Description = "NonEscapeSequence :: RUSSIAN CAPITAL ALPHABET")]
        public void S7_8_4_A4_2_T6()
        {
            RunFile("S7.8.4_A4.2_T6.js");
        }

        [Test(Description = "NonEscapeSequence :: RUSSIAN SMALL ALPHABET")]
        public void S7_8_4_A4_2_T7()
        {
            RunFile("S7.8.4_A4.2_T7.js");
        }

        [Test(Description = "NonEscapeSequence :: RUSSIAN SMALL ALPHABET")]
        public void S7_8_4_A4_2_T8()
        {
            RunFile("S7.8.4_A4.2_T8.js");
        }

        [Test(Description = "EscapeCharacter :: DecimalDigits :: 1")]
        [ExpectedException]
        public void S7_8_4_A4_3_T1()
        {
            RunFile("S7.8.4_A4.3_T1.js");
        }

        [Test(Description = "EscapeCharacter :: DecimalDigits :: 7")]
        [ExpectedException]
        public void S7_8_4_A4_3_T2()
        {
            RunFile("S7.8.4_A4.3_T2.js");
        }

        [Test(Description = "EscapeCharacter :: SingleEscapeCharacter :: one of b f n r t v")]
        public void S7_8_4_A4_3_T7()
        {
            RunFile("S7.8.4_A4.3_T7.js");
        }

        [Test(Description = "String.fromCharCode(0x0000)")]
        public void S7_8_4_A5_1_T1()
        {
            RunFile("S7.8.4_A5.1_T1.js");
        }

        [Test(Description = "\"\\u0000\"")]
        public void S7_8_4_A5_1_T2()
        {
            RunFile("S7.8.4_A5.1_T2.js");
        }

        [Test(Description = "\"\\x00\"")]
        public void S7_8_4_A5_1_T3()
        {
            RunFile("S7.8.4_A5.1_T3.js");
        }

        [Test(Description = "HexEscapeSequence ::  HexDigit")]
        public void S7_8_4_A6_1_T1()
        {
            RunFile("S7.8.4_A6.1_T1.js");
        }

        [Test(Description = "HexEscapeSequence ::  ENGLISH CAPITAL ALPHABET")]
        public void S7_8_4_A6_1_T2()
        {
            RunFile("S7.8.4_A6.1_T2.js");
        }

        [Test(Description = "HexEscapeSequence ::  ENGLISH SMALL ALPHABET")]
        public void S7_8_4_A6_1_T3()
        {
            RunFile("S7.8.4_A6.1_T3.js");
        }

        [Test(Description = "Check similar to ('\\x01F' === String.fromCharCode('1') + 'F')")]
        public void S7_8_4_A6_3_T1()
        {
            RunFile("S7.8.4_A6.3_T1.js");
        }

        [Test(Description = "Check similar to (\"\\u0000\" === String.fromCharCode(\"0\"))")]
        public void S7_8_4_A7_1_T1()
        {
            RunFile("S7.8.4_A7.1_T1.js");
        }

        [Test(Description = "UnicodeEscapeSequence ::  ENGLISH CAPITAL ALPHABET")]
        public void S7_8_4_A7_1_T2()
        {
            RunFile("S7.8.4_A7.1_T2.js");
        }

        [Test(Description = "UnicodeEscapeSequence ::  ENGLISH SMALL ALPHABET")]
        public void S7_8_4_A7_1_T3()
        {
            RunFile("S7.8.4_A7.1_T3.js");
        }

        [Test(Description = "UnicodeEscapeSequence :: u000G is incorrect")]
        [ExpectedException]
        public void S7_8_4_A7_1_T4()
        {
            RunFile("S7.8.4_A7.1_T4.js");
        }

        [Test(Description = ":: HexDigit :: 1")]
        [ExpectedException]
        public void S7_8_4_A7_2_T1()
        {
            RunFile("S7.8.4_A7.2_T1.js");
        }

        [Test(Description = ":: HexDigit :: A")]
        [ExpectedException]
        public void S7_8_4_A7_2_T2()
        {
            RunFile("S7.8.4_A7.2_T2.js");
        }

        [Test(Description = ":: HexDigit :: 1")]
        [ExpectedException]
        public void S7_8_4_A7_2_T3()
        {
            RunFile("S7.8.4_A7.2_T3.js");
        }

        [Test(Description = ":: HexDigit :: A")]
        [ExpectedException]
        public void S7_8_4_A7_2_T4()
        {
            RunFile("S7.8.4_A7.2_T4.js");
        }

        [Test(Description = ":: HexDigit :: 1")]
        [ExpectedException]
        public void S7_8_4_A7_2_T5()
        {
            RunFile("S7.8.4_A7.2_T5.js");
        }

        [Test(Description = ":: HexDigit :: A")]
        [ExpectedException]
        public void S7_8_4_A7_2_T6()
        {
            RunFile("S7.8.4_A7.2_T6.js");
        }

        [Test(Description = "Check similar to (\"\\u0001F\" === String.fromCharCode(\"1\") + \"F\")")]
        public void S7_8_4_A7_3_T1()
        {
            RunFile("S7.8.4_A7.3_T1.js");
        }
    }
}
