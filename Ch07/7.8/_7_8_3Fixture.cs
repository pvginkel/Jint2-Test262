//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;

namespace Jint.Test262.Ch07._7_8
{
    [TestFixture]
    public class _7_8_3Fixture : Test262Fixture
    {
        public _7_8_3Fixture()
            : base("ch07\\7.8\\7.8.3")
        {
        }

        [Test(Description = "Strict Mode - octal extension (010) is forbidden in strict mode")]
        public void _7_8_3_1_s()
        {
            RunFile("7.8.3-1-s.js");
        }

        [Test(Description = "Strict Mode - octal extension(010) is forbidden in strict mode")]
        [ExpectedException]
        public void _7_8_3_1gs()
        {
            RunFile("7.8.3-1gs.js");
        }

        [Test(Description = "Strict Mode - octal extension (00) is forbidden in strict mode")]
        public void _7_8_3_2_s()
        {
            RunFile("7.8.3-2-s.js");
        }

        [Test(Description = "Strict Mode - octal extension is forbidden in strict mode (after a hex number is assigned to a variable)")]
        [ExpectedException]
        public void _7_8_3_2gs()
        {
            RunFile("7.8.3-2gs.js");
        }

        [Test(Description = "Strict Mode - octal extension (01) is forbidden in strict mode")]
        public void _7_8_3_3_s()
        {
            RunFile("7.8.3-3-s.js");
        }

        [Test(Description = "Strict Mode - octal extension is forbidden in strict mode (after a hex number is assigned to a variable from an eval)")]
        [ExpectedException]
        public void _7_8_3_3gs()
        {
            RunFile("7.8.3-3gs.js");
        }

        [Test(Description = "Strict Mode - octal extension (06) is forbidden in strict mode")]
        public void _7_8_3_4_s()
        {
            RunFile("7.8.3-4-s.js");
        }

        [Test(Description = "Strict Mode - octal extension (07) is forbidden in strict mode")]
        public void _7_8_3_5_s()
        {
            RunFile("7.8.3-5-s.js");
        }

        [Test(Description = "Strict Mode - octal extension (000) is forbidden in strict mode")]
        public void _7_8_3_6_s()
        {
            RunFile("7.8.3-6-s.js");
        }

        [Test(Description = "Strict Mode - octal extension (005) is forbidden in strict mode")]
        public void _7_8_3_7_s()
        {
            RunFile("7.8.3-7-s.js");
        }

        [Test(Description = "DecimalIntegerLiteral :: 0, NoNZeroDigit")]
        public void S7_8_3_A1_1_T1()
        {
            RunFile("S7.8.3_A1.1_T1.js");
        }

        [Test(Description = "DecimalIntegerLiteral :: NoNZeroDigit DecimalDigits")]
        public void S7_8_3_A1_1_T2()
        {
            RunFile("S7.8.3_A1.1_T2.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        public void S7_8_3_A1_2_T1()
        {
            RunFile("S7.8.3_A1.2_T1.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        public void S7_8_3_A1_2_T2()
        {
            RunFile("S7.8.3_A1.2_T2.js");
        }

        [Test(Description = "ExponentPart :: e -DecimalDigits")]
        public void S7_8_3_A1_2_T3()
        {
            RunFile("S7.8.3_A1.2_T3.js");
        }

        [Test(Description = "ExponentPart :: E -DecimalDigits")]
        public void S7_8_3_A1_2_T4()
        {
            RunFile("S7.8.3_A1.2_T4.js");
        }

        [Test(Description = "ExponentPart :: e +DecimalDigits")]
        public void S7_8_3_A1_2_T5()
        {
            RunFile("S7.8.3_A1.2_T5.js");
        }

        [Test(Description = "ExponentPart :: E +DecimalDigits")]
        public void S7_8_3_A1_2_T6()
        {
            RunFile("S7.8.3_A1.2_T6.js");
        }

        [Test(Description = "ExponentPart :: e 0")]
        public void S7_8_3_A1_2_T7()
        {
            RunFile("S7.8.3_A1.2_T7.js");
        }

        [Test(Description = "ExponentPart :: E 0")]
        public void S7_8_3_A1_2_T8()
        {
            RunFile("S7.8.3_A1.2_T8.js");
        }

        [Test(Description = "Use .DecimalDigit")]
        public void S7_8_3_A2_1_T1()
        {
            RunFile("S7.8.3_A2.1_T1.js");
        }

        [Test(Description = "Use .DecimalDigits")]
        public void S7_8_3_A2_1_T2()
        {
            RunFile("S7.8.3_A2.1_T2.js");
        }

        [Test(Description = "Use .DecimalDigits that have at the end zeros")]
        public void S7_8_3_A2_1_T3()
        {
            RunFile("S7.8.3_A2.1_T3.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        public void S7_8_3_A2_2_T1()
        {
            RunFile("S7.8.3_A2.2_T1.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        public void S7_8_3_A2_2_T2()
        {
            RunFile("S7.8.3_A2.2_T2.js");
        }

        [Test(Description = "ExponentPart :: e +DecimalDigits")]
        public void S7_8_3_A2_2_T3()
        {
            RunFile("S7.8.3_A2.2_T3.js");
        }

        [Test(Description = "ExponentPart :: E +DecimalDigits")]
        public void S7_8_3_A2_2_T4()
        {
            RunFile("S7.8.3_A2.2_T4.js");
        }

        [Test(Description = "ExponentPart :: e +DecimalDigits")]
        public void S7_8_3_A2_2_T5()
        {
            RunFile("S7.8.3_A2.2_T5.js");
        }

        [Test(Description = "ExponentPart :: E +DecimalDigits")]
        public void S7_8_3_A2_2_T6()
        {
            RunFile("S7.8.3_A2.2_T6.js");
        }

        [Test(Description = "ExponentPart :: e 0")]
        public void S7_8_3_A2_2_T7()
        {
            RunFile("S7.8.3_A2.2_T7.js");
        }

        [Test(Description = "ExponentPart :: E 0")]
        public void S7_8_3_A2_2_T8()
        {
            RunFile("S7.8.3_A2.2_T8.js");
        }

        [Test(Description = "DecimalIntegerLiteral :: 0, NoNZeroDigit")]
        public void S7_8_3_A3_1_T1()
        {
            RunFile("S7.8.3_A3.1_T1.js");
        }

        [Test(Description = "DecimalIntegerLiteral :: NoNZeroDigit DecimalDigigts")]
        public void S7_8_3_A3_1_T2()
        {
            RunFile("S7.8.3_A3.1_T2.js");
        }

        [Test(Description = "After DecimalIntegerLiteral. used ZeroDigit")]
        public void S7_8_3_A3_2_T1()
        {
            RunFile("S7.8.3_A3.2_T1.js");
        }

        [Test(Description = "After DecimalIntegerLiteral. used ZeroDigits")]
        public void S7_8_3_A3_2_T2()
        {
            RunFile("S7.8.3_A3.2_T2.js");
        }

        [Test(Description = "After DecimalIntegerLiteral. used NoNZeroDigit")]
        public void S7_8_3_A3_2_T3()
        {
            RunFile("S7.8.3_A3.2_T3.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        public void S7_8_3_A3_3_T1()
        {
            RunFile("S7.8.3_A3.3_T1.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        public void S7_8_3_A3_3_T2()
        {
            RunFile("S7.8.3_A3.3_T2.js");
        }

        [Test(Description = "ExponentPart :: e -DecimalDigits")]
        public void S7_8_3_A3_3_T3()
        {
            RunFile("S7.8.3_A3.3_T3.js");
        }

        [Test(Description = "ExponentPart :: E -DecimalDigits")]
        public void S7_8_3_A3_3_T4()
        {
            RunFile("S7.8.3_A3.3_T4.js");
        }

        [Test(Description = "ExponentPart :: e +DecimalDigits")]
        public void S7_8_3_A3_3_T5()
        {
            RunFile("S7.8.3_A3.3_T5.js");
        }

        [Test(Description = "ExponentPart :: E +DecimalDigits")]
        public void S7_8_3_A3_3_T6()
        {
            RunFile("S7.8.3_A3.3_T6.js");
        }

        [Test(Description = "ExponentPart :: e 0")]
        public void S7_8_3_A3_3_T7()
        {
            RunFile("S7.8.3_A3.3_T7.js");
        }

        [Test(Description = "ExponentPart :: E 0")]
        public void S7_8_3_A3_3_T8()
        {
            RunFile("S7.8.3_A3.3_T8.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        public void S7_8_3_A3_4_T1()
        {
            RunFile("S7.8.3_A3.4_T1.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        public void S7_8_3_A3_4_T2()
        {
            RunFile("S7.8.3_A3.4_T2.js");
        }

        [Test(Description = "ExponentPart :: e -DecimalDigits")]
        public void S7_8_3_A3_4_T3()
        {
            RunFile("S7.8.3_A3.4_T3.js");
        }

        [Test(Description = "ExponentPart :: E -DecimalDigits")]
        public void S7_8_3_A3_4_T4()
        {
            RunFile("S7.8.3_A3.4_T4.js");
        }

        [Test(Description = "ExponentPart :: e +DecimalDigits")]
        public void S7_8_3_A3_4_T5()
        {
            RunFile("S7.8.3_A3.4_T5.js");
        }

        [Test(Description = "ExponentPart :: E +DecimalDigits")]
        public void S7_8_3_A3_4_T6()
        {
            RunFile("S7.8.3_A3.4_T6.js");
        }

        [Test(Description = "ExponentPart :: e 0")]
        public void S7_8_3_A3_4_T7()
        {
            RunFile("S7.8.3_A3.4_T7.js");
        }

        [Test(Description = "ExponentPart :: E 0")]
        public void S7_8_3_A3_4_T8()
        {
            RunFile("S7.8.3_A3.4_T8.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T1()
        {
            RunFile("S7.8.3_A4.1_T1.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T2()
        {
            RunFile("S7.8.3_A4.1_T2.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T3()
        {
            RunFile("S7.8.3_A4.1_T3.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T4()
        {
            RunFile("S7.8.3_A4.1_T4.js");
        }

        [Test(Description = "ExponentPart :: e DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T5()
        {
            RunFile("S7.8.3_A4.1_T5.js");
        }

        [Test(Description = "ExponentPart :: E DecimalDigits")]
        [ExpectedException]
        public void S7_8_3_A4_1_T6()
        {
            RunFile("S7.8.3_A4.1_T6.js");
        }

        [Test(Description = "ExponentPart :: e 0")]
        [ExpectedException]
        public void S7_8_3_A4_1_T7()
        {
            RunFile("S7.8.3_A4.1_T7.js");
        }

        [Test(Description = "ExponentPart :: E 0")]
        [ExpectedException]
        public void S7_8_3_A4_1_T8()
        {
            RunFile("S7.8.3_A4.1_T8.js");
        }

        [Test(Description = "ExponentIndicator :: e")]
        public void S7_8_3_A4_2_T1()
        {
            RunFile("S7.8.3_A4.2_T1.js");
        }

        [Test(Description = "ExponentIndicator :: E")]
        public void S7_8_3_A4_2_T2()
        {
            RunFile("S7.8.3_A4.2_T2.js");
        }

        [Test(Description = "ExponentIndicator :: e")]
        public void S7_8_3_A4_2_T3()
        {
            RunFile("S7.8.3_A4.2_T3.js");
        }

        [Test(Description = "ExponentIndicator :: E")]
        public void S7_8_3_A4_2_T4()
        {
            RunFile("S7.8.3_A4.2_T4.js");
        }

        [Test(Description = "ExponentIndicator :: e")]
        public void S7_8_3_A4_2_T5()
        {
            RunFile("S7.8.3_A4.2_T5.js");
        }

        [Test(Description = "ExponentIndicator :: E")]
        public void S7_8_3_A4_2_T6()
        {
            RunFile("S7.8.3_A4.2_T6.js");
        }

        [Test(Description = "ExponentIndicator :: e")]
        public void S7_8_3_A4_2_T7()
        {
            RunFile("S7.8.3_A4.2_T7.js");
        }

        [Test(Description = "ExponentIndicator :: E")]
        public void S7_8_3_A4_2_T8()
        {
            RunFile("S7.8.3_A4.2_T8.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0x Digit")]
        public void S7_8_3_A5_1_T1()
        {
            RunFile("S7.8.3_A5.1_T1.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0X Digit")]
        public void S7_8_3_A5_1_T2()
        {
            RunFile("S7.8.3_A5.1_T2.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0x NonZeroDigit Digits")]
        public void S7_8_3_A5_1_T3()
        {
            RunFile("S7.8.3_A5.1_T3.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0X NonZeroDigit Digits")]
        public void S7_8_3_A5_1_T4()
        {
            RunFile("S7.8.3_A5.1_T4.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0x0 Digits")]
        public void S7_8_3_A5_1_T5()
        {
            RunFile("S7.8.3_A5.1_T5.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0X0 Digits")]
        public void S7_8_3_A5_1_T6()
        {
            RunFile("S7.8.3_A5.1_T6.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0x one of a, b, c, d, e, f")]
        public void S7_8_3_A5_1_T7()
        {
            RunFile("S7.8.3_A5.1_T7.js");
        }

        [Test(Description = "HexIntegerLiteral :: 0X one of a, b, c, d, e, f")]
        public void S7_8_3_A5_1_T8()
        {
            RunFile("S7.8.3_A5.1_T8.js");
        }

        [Test(Description = "Checking if execution of \"0x\" passes")]
        [ExpectedException]
        public void S7_8_3_A6_1_T1()
        {
            RunFile("S7.8.3_A6.1_T1.js");
        }

        [Test(Description = "Checking if execution of \"0X\" passes")]
        [ExpectedException]
        public void S7_8_3_A6_1_T2()
        {
            RunFile("S7.8.3_A6.1_T2.js");
        }

        [Test(Description = "Checking if execution of \"0xG\" fails")]
        [ExpectedException]
        public void S7_8_3_A6_2_T1()
        {
            RunFile("S7.8.3_A6.2_T1.js");
        }

        [Test(Description = "Checking if execution of \"0xg\" fails")]
        [ExpectedException]
        public void S7_8_3_A6_2_T2()
        {
            RunFile("S7.8.3_A6.2_T2.js");
        }
    }
}
